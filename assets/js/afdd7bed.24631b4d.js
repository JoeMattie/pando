"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3550],{6115:function(e,t,n){const a=n(86521);t.Z=function(e){return(0,a.jsx)("svg",{viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",role:"img",fill:"currentColor",className:"ps-icon-svg","aria-label":"figma icon",...e,children:(0,a.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M4.25 5.5A4.25 4.25 0 0 1 8.5 1.25h7A4.25 4.25 0 0 1 17.912 9a4.25 4.25 0 1 1-5.162 6.74v3.76A4.25 4.25 0 1 1 6.088 16a4.245 4.245 0 0 1-1.838-3.5c0-1.452.728-2.733 1.838-3.5A4.245 4.245 0 0 1 4.25 5.5Zm4.25 9.75h2.75v-5.5H8.5a2.75 2.75 0 1 0 0 5.5Zm2.75 1.5H8.5a2.75 2.75 0 1 0 2.75 2.75v-2.75Zm7-11.25a2.75 2.75 0 0 1-2.75 2.75h-2.75v-5.5h2.75a2.75 2.75 0 0 1 2.75 2.75ZM15.5 9.75a2.75 2.75 0 1 0 0 5.5 2.75 2.75 0 0 0 0-5.5Zm-7-1.5h2.75v-5.5H8.5a2.75 2.75 0 0 0 0 5.5Z"})})}},31026:function(e,t,n){const a=n(86521);t.Z=function(e){return(0,a.jsx)("svg",{"aria-label":"github logo",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",role:"img",fill:"currentColor",className:"ps-icon-svg",...e,children:(0,a.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M2 12c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12a10 10 0 0 0-20 0Z"})})}},95428:function(e,t,n){n.d(t,{Z:function(){return p}});var a=n(81648),l=n(45721),o=n(17493),r=n(69477),s="grid_cC7H";function i(e){return l.createElement("li",(0,o.a)({colSpan:2}),l.createElement(r.Z,e,e.children))}function p(e){const{figma:t,github:n}=e,{className:r,...p}=(0,o.g)({cols:12,gap:8});return l.createElement("ul",(0,a.Z)({className:`${r} ${s}`},p),n&&l.createElement(i,{href:n},"View on Github"),t&&l.createElement(i,{href:t},"Figma Design"))}},25302:function(e,t,n){n(45721)},69477:function(e,t,n){n.d(t,{Z:function(){return i}});var a=n(45721),l=n(60146),o=n(59280),r=n(31026),s=n(6115);function i(e){const{href:t}=e,n=(0,l.g)({href:t}),i=(0,o.g)(n.iconOptions),p=t.includes("github")?r.Z:s.Z;return a.createElement("a",n.link,a.createElement(p,i),e.children)}},53315:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return r},metadata:function(){return i},toc:function(){return c}});var a=n(81648),l=(n(45721),n(70167)),o=n(95428);n(25302);const r={tags:["dropdown","field","form"],title:"Select"},s=void 0,i={unversionedId:"reference/components/select",id:"version-0.4.1/reference/components/select",title:"Select",description:"Used to allow a user to select a value from a list of options.",source:"@site/versioned_docs/version-0.4.1/reference/components/select.mdx",sourceDirName:"reference/components",slug:"/reference/components/select",permalink:"/docs/reference/components/select",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/versioned_docs/version-0.4.1/reference/components/select.mdx",tags:[{label:"dropdown",permalink:"/docs/tags/dropdown"},{label:"field",permalink:"/docs/tags/field"},{label:"form",permalink:"/docs/tags/form"}],version:"0.4.1",lastUpdatedBy:"Brad Bice",frontMatter:{tags:["dropdown","field","form"],title:"Select"},sidebar:"reference",previous:{title:"Radio",permalink:"/docs/reference/components/radio"},next:{title:"Skeleton",permalink:"/docs/reference/components/skeleton"}},p={},c=[{value:"Import",id:"import",level:2},{value:"Anatomy",id:"anatomy",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Select",id:"basic-select",level:3},{value:"States",id:"states",level:3},{value:"Reference",id:"reference",level:2},{value:"<code>getSelectProps</code>",id:"getselectprops",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"<code>getSelectOptionProps</code>",id:"getselectoptionprops",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Behavior",id:"behavior",level:2},{value:"Layout",id:"layout",level:3},{value:"Usage",id:"usage-1",level:3},{value:"Accessbility",id:"accessbility",level:2}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",{className:"size-xxl"},"Used to allow a user to select a value from a list of options."),(0,l.kt)(o.Z,{github:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/Select",figma:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsLinkBar"}),(0,l.kt)("h2",{id:"import"},"Import"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import {\n  getSelectProps,\n  getSelectOptionProps,\n} from '@pluralsight/headless-styles'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"interface SelectOptions {\n  describedBy?: string\n  disabled?: boolean\n  kind?: 'default' | 'icon'\n  id: string\n  invalid?: boolean\n  name: string\n  readOnly?: boolean\n  required?: boolean\n  size?: 'm' | 'l'\n  type: 'text' | 'email' | 'password' | 'tel' | 'url'\n  value: string\n}\n\ngetSelectProps(options?: SelectOptions)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"interface SelectOptionOptions {\n  placeholder?: string\n  value?: string\n}\n\ngetSelectOptionProps(options?: SelectOptionOptions)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import type {\n  SelectOptions,\n  SelectOptionOptions,\n} from '@pluralsight/headless-styles/types'\n")),(0,l.kt)("h2",{id:"anatomy"},"Anatomy"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Container"),(0,l.kt)("li",{parentName:"ol"},"Select"),(0,l.kt)("li",{parentName:"ol"},"Icon"),(0,l.kt)("li",{parentName:"ol"},"Option")),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("h3",{id:"basic-select"},"Basic Select"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function BasicSelect() {\n  const fruitList = [\n    'apple',\n    'orange',\n    'banana',\n    'strawberry',\n    'grape',\n    'blueberry',\n    'raspberry',\n  ]\n  const [fruit, setFruit] = useState('')\n  const { fieldOptions } = getFormControlProps()\n  const selectLabel = getFormLabelProps({\n    ...fieldOptions,\n    htmlFor: 'chosen-fruit',\n    value: 'Select fruit',\n  })\n  const selectProps = getSelectProps({\n    ...fieldOptions,\n    id: 'chosen-fruit',\n    name: 'fruit_item',\n    value: fruit,\n  })\n  const iconProps = getIconProps(selectProps.iconOptions)\n\n  function handleChange(e) {\n    setFruit(e.target.value)\n  }\n\n  return (\n    <div {...selectProps.fieldWrapper}>\n      <label {...selectLabel}>{selectLabel.value}</label>\n      <div {...selectProps.selectWrapper}>\n        <select {...selectProps.select} onChange={handleChange}>\n          {!fruit && (\n            <option\n              {...getSelectOptionProps({ placeholder: 'Choose fruit' })}\n            />\n          )}\n          {fruitList.map((value) => (\n            <option key={value} {...getSelectOptionProps({ value })}>\n              {value}\n            </option>\n          ))}\n        </select>\n        <span {...selectProps.iconWrapper}>\n          <ChevronDownIcon {...iconProps} />\n        </span>\n      </div>\n    </div>\n  )\n}\n")),(0,l.kt)("h3",{id:"states"},"States"),(0,l.kt)("p",null,"The Select shares the ",(0,l.kt)("a",{parentName:"p",href:"/docs/reference/components/radio#states"},"same UI states")," as every field in Pando."),(0,l.kt)("admonition",{title:"Form field and state",type:"note"},(0,l.kt)("p",{parentName:"admonition"},"In order to easily manage the state and maintain accessbility of your form field, the basic state statuses should come from the result of the FormControl API.")),(0,l.kt)("h2",{id:"reference"},"Reference"),(0,l.kt)("h3",{id:"getselectprops"},(0,l.kt)("inlineCode",{parentName:"h3"},"getSelectProps")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getSelectProps(options?: SelectOptions)\n")),(0,l.kt)("h4",{id:"parameters"},"Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"options"),": A boolean value for the properties of disabled, invalid, readOnly, and required which manage the state of the field. A String value for properties describedBy, id, name, placeholder, and value which create a11y properties for the Input. A property kind that accepts a String value ",(0,l.kt)("inlineCode",{parentName:"li"},"'default' | 'icon'")," to determine the styling rules for the input within the context of adding an Icon within the field. A property of type that accepts a String value of ",(0,l.kt)("inlineCode",{parentName:"li"},"'text' | 'email' | 'password' | 'tel' | 'url'")," that sets the type property for the Input. A size property that accepts a String value of ",(0,l.kt)("inlineCode",{parentName:"li"},"'m' | 'l'")," to determine the size styling for the Input.")),(0,l.kt)("h4",{id:"returns"},"Returns"),(0,l.kt)("p",null,"An Object matching the ",(0,l.kt)("a",{parentName:"p",href:"#anatomy"},"Anatomy")," containing ",(0,l.kt)("inlineCode",{parentName:"p"},"className")," and a11y properties relevant to the label element. Additionally, it returns an ",(0,l.kt)("inlineCode",{parentName:"p"},"iconOptions")," property to pass into the Icon API."),(0,l.kt)("h3",{id:"getselectoptionprops"},(0,l.kt)("inlineCode",{parentName:"h3"},"getSelectOptionProps")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getSelectOptionProps(options?: SelectOptionOptions)\n")),(0,l.kt)("h4",{id:"parameters-1"},"Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"options"),": A string value for properties placeholder and value to determine a11y props for the Select Option element.")),(0,l.kt)("h4",{id:"returns-1"},"Returns"),(0,l.kt)("p",null,"An Object matching the ",(0,l.kt)("a",{parentName:"p",href:"#anatomy"},"Anatomy")," containing ",(0,l.kt)("inlineCode",{parentName:"p"},"className")," and a11y properties relevant to the Select element."),(0,l.kt)("h2",{id:"behavior"},"Behavior"),(0,l.kt)("h3",{id:"layout"},"Layout"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Do")," use a ",(0,l.kt)("strong",{parentName:"p"},"hidden label")," when using a Select within a Table Cell."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Don't")," exclude a label when using a Select within a Table Cell, which is not accessible."),(0,l.kt)("h3",{id:"usage-1"},"Usage"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Do")," use a Select when the list of options exceeds 5 items."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Don't")," use a Select when the list of options is less than 5 items. Instead, use a Radio group."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Do")," use a Select when a single option choice is needed from a user."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Don't")," use a Select to navigate to another location. Instead use a ",(0,l.kt)("a",{parentName:"p",href:"/docs/reference/components/menu"},"Menu"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Do")," use a Modal with a Checkbox List when you need to use a multi-select field."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Don't")," use Select to create a multi-select field."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Do")," use the styles provided by the Select Option to keep the experience native to the OS/Browser."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Don't")," re-style or fake a Select Option which is not accessbile and creates a poor user experience for all platforms."),(0,l.kt)("h2",{id:"accessbility"},"Accessbility"),(0,l.kt)("p",null,"The Pando Select, and Icon APIs combined with semantic HTML allow the Select to be fully accessible and screen-readable."))}d.isMDXComponent=!0}}]);