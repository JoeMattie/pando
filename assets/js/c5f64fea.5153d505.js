"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5949],{84140:function(e,t,n){n.d(t,{Z:function(){return u}});var r=n(45721),o=n(95799),a=n(80404),s=n(38345),i=n(35125);function u(e){const{href:t}=e,n=(0,a.L)({ariaHidden:!0,size:"s"}),u=t.includes("github")?s.Z:i.Z;return r.createElement(o.TextLink,e,r.createElement(u,n),e.children)}},56922:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return l}});var r=n(81648),o=(n(45721),n(70167)),a=n(84140);const s={tags:["React","Menu","Menu state"],title:"useMenuInteraction"},i=void 0,u={unversionedId:"reference/react-hooks/useMenuInteraction",id:"reference/react-hooks/useMenuInteraction",title:"useMenuInteraction",description:"A hook for handling menu interactions and state.",source:"@site/docs/reference/react-hooks/useMenuInteraction.mdx",sourceDirName:"reference/react-hooks",slug:"/reference/react-hooks/useMenuInteraction",permalink:"/docs/reference/react-hooks/useMenuInteraction",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/react-hooks/useMenuInteraction.mdx",tags:[{label:"React",permalink:"/docs/tags/react"},{label:"Menu",permalink:"/docs/tags/menu"},{label:"Menu state",permalink:"/docs/tags/menu-state"}],version:"current",lastUpdatedBy:"Casey Baggz",frontMatter:{tags:["React","Menu","Menu state"],title:"useMenuInteraction"},sidebar:"reference",previous:{title:"useIsIndeterminate",permalink:"/docs/reference/react-hooks/useIsIndeterminate"},next:{title:"usePreloadedImage",permalink:"/docs/reference/react-hooks/usePreloadedImage"}},c={},l=[{value:"Import",id:"import",level:2},{value:"Reference",id:"reference",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2}],p={toc:l};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",{className:"size-xxl"},"A hook for handling menu interactions and state."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"This hook is for a top-level pop-up ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menu_role"},"menu")," and ",(0,o.kt)("strong",{parentName:"p"},"not")," a ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menubar_role"},"menubar")," role or submenus within either.\nFor submenus, see the ",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/react-hooks/useSubmenuInteraction"},"useSubmenuInteraction")," hook.")),(0,o.kt)(a.Z,{icon:"github",href:"https://github.com/pluralsight/tva/blob/main/packages/react-utils/src/hooks/useMenuInteraction.ts",mdxType:"ViewSourceLink"},"View source"),(0,o.kt)("h2",{id:"import"},"Import"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useMenuInteraction } from '@pluralsight/react-utils'\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"useMenuInteraction()\n")),(0,o.kt)("h2",{id:"reference"},"Reference"),(0,o.kt)("p",null,"Call ",(0,o.kt)("inlineCode",{parentName:"p"},"useMenuInteraction")," at the top level of the Menu component to which you would like to add interactive features:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"showLineNumbers {2,8,11-12}",showLineNumbers:!0,"{2,8,11-12}":!0},"export function Menu(props) {\n  const menuInteractionProps = useMenuInteraction()\n\n  return (\n    <div>\n      <button\n        {...menuStyles.trigger}\n        {...menuInteractionProps.trigger}\n      >\n        {props.label}\n      </button>\n\n      {menuInteractionProps.expanded &&\n        <menu {...menuProps.menu} {...menuInteractionProps.menu}>\n          {props.children}\n        </menu>\n      }\n    </div>\n  )\n")),(0,o.kt)("h3",{id:"parameters"},"Parameters"),(0,o.kt)("p",null,"This hook doesn't accept any parameters."),(0,o.kt)("h3",{id:"returns"},"Returns"),(0,o.kt)("p",null,"An Object containing an ",(0,o.kt)("inlineCode",{parentName:"p"},"expanded")," property of a Boolean value related to the state of the menu. A ",(0,o.kt)("inlineCode",{parentName:"p"},"menu")," property containing both event delegation and Accessibility properties to spread on the ",(0,o.kt)("inlineCode",{parentName:"p"},"menu")," element. A ",(0,o.kt)("inlineCode",{parentName:"p"},"trigger")," property containing event delegation, ref, and dataset properties to spread on the element responsible for triggering the state of the menu (usually a ",(0,o.kt)("inlineCode",{parentName:"p"},"button"),")."),(0,o.kt)("h2",{id:"troubleshooting"},"Troubleshooting"))}m.isMDXComponent=!0}}]);