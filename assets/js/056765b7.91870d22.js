"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8146],{18028:function(e,n,t){const o=t(86521);n.Z=function(e){return(0,o.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",role:"img",fill:"currentColor",className:"ps-icon-svg","aria-label":"figma icon",...e,children:(0,o.jsx)("path",{fillRule:"evenodd",d:"M4.25 5.5A4.25 4.25 0 0 1 8.5 1.25h7A4.25 4.25 0 0 1 17.912 9a4.25 4.25 0 1 1-5.162 6.74v3.76A4.25 4.25 0 1 1 6.088 16a4.245 4.245 0 0 1-1.838-3.5c0-1.452.728-2.733 1.838-3.5A4.245 4.245 0 0 1 4.25 5.5Zm4.25 9.75h2.75v-5.5H8.5a2.75 2.75 0 1 0 0 5.5Zm2.75 1.5H8.5a2.75 2.75 0 1 0 2.75 2.75v-2.75Zm7-11.25a2.75 2.75 0 0 1-2.75 2.75h-2.75v-5.5h2.75a2.75 2.75 0 0 1 2.75 2.75ZM15.5 9.75a2.75 2.75 0 1 0 0 5.5 2.75 2.75 0 0 0 0-5.5Zm-7-1.5h2.75v-5.5H8.5a2.75 2.75 0 0 0 0 5.5Z",clipRule:"evenodd"})})}},7903:function(e,n,t){const o=t(86521);n.Z=function(e){return(0,o.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg","aria-label":"github logo",viewBox:"0 0 24 24",role:"img",fill:"currentColor",className:"ps-icon-svg",...e,children:(0,o.jsx)("path",{fillRule:"evenodd",d:"M2 12c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12a10 10 0 0 0-20 0Z",clipRule:"evenodd"})})}},80940:function(e,n,t){var o=t(45721),i=t(60935),r=t(73109),a=t(40736);function s(){const{show:e}=(0,i.N)();return o.createElement(r.z,{onClick:function(){e({bodyId:"non-destructiveAlert-body",headingId:"non-destructiveAlert-heading",heading:"Confirm payment",text:"Are you sure you want to make this payment?"})}},"Confirm payment")}n.Z=function(){return o.createElement(a.Z,null,o.createElement(i.W,null,o.createElement(s,null)))}},61884:function(e,n,t){var o=t(45721),i=t(60935),r=t(73109),a=t(40736);function s(){const{show:e}=(0,i.N)();return o.createElement(r.z,{sentiment:"danger",onClick:function(){e({bodyId:"destructiveAlert-body",headingId:"destructiveAlert-heading",heading:"Delete payment method",kind:"destructive",text:"Are you sure you want to remove this payment method? This will be a permanent action."})}},"Confirm payment")}n.Z=function(){return o.createElement(a.Z,null,o.createElement(i.W,null,o.createElement(s,null)))}},40736:function(e,n,t){t.d(n,{Z:function(){return a}});var o=t(45721),i={base:"base_M3w8",column:"column_mb9C base_M3w8",grid:"grid_EiLr base_M3w8"};const r={alignItems:"center",column:!1,gridCols:0,justifyContent:"space-between",textAlign:"center",type:"base"};function a(e){void 0===e&&(e=r);const n=e.type??r.type,t=e.gridColumns?`repeat(${e.gridColumns}, minmax(auto, max-content))`:"initial",a={alignItems:e.alignItems,gridTemplateColumns:t,justifyContent:e.justifyContent,textAlign:e.textAlign??"center",gap:e.gap??"1rem",columnGap:e.columnGap};return o.createElement("div",{className:i[n],style:a},e.children)}},15566:function(e,n,t){t.d(n,{dS:function(){return c},fK:function(){return l},C9:function(){return u},ZP:function(){return m}});var o=t(45721),i=t(84140),r="linkList_sLwJ",a="linkItem_ESvF";function s(e){return o.createElement("li",{className:a},o.createElement(i.Z,e,e.children))}function l(e){return o.createElement(s,{href:e.href},e.children??"View on Github")}function c(e){return o.createElement(s,{href:e.href},"View on Figma")}function u(e){return o.createElement("ul",{className:r},e.children)}function m(e){const{figma:n,github:t}=e;return o.createElement("ul",{className:r},t&&o.createElement(l,{href:t}),n&&o.createElement(c,{href:n}))}},45945:function(e,n,t){t(45721)},84140:function(e,n,t){t.d(n,{Z:function(){return l}});var o=t(45721),i=t(90806),r=t(10848),a=t(7903),s=t(18028);function l(e){const{href:n}=e,t=(0,r.L)({ariaHidden:!0,size:"s"}),l=n.includes("github")?a.Z:s.Z;return o.createElement(i.h,e,o.createElement(l,t),e.children)}},74910:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var o=t(81648),i=(t(45721),t(70167)),r=t(80940),a=t(61884),s=t(15566);t(45945);const l={tags:["dialog","user confirmation"],title:"Confirm Dialog"},c=void 0,u={unversionedId:"reference/components/confirm-dialog",id:"version-0.4.1/reference/components/confirm-dialog",title:"Confirm Dialog",description:"Used to interrupt the user with a mandatory confirmation or action.",source:"@site/versioned_docs/version-0.4.1/reference/components/confirm-dialog.mdx",sourceDirName:"reference/components",slug:"/reference/components/confirm-dialog",permalink:"/docs/reference/components/confirm-dialog",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/versioned_docs/version-0.4.1/reference/components/confirm-dialog.mdx",tags:[{label:"dialog",permalink:"/docs/tags/dialog"},{label:"user confirmation",permalink:"/docs/tags/user-confirmation"}],version:"0.4.1",lastUpdatedBy:"Casey Baggz",frontMatter:{tags:["dialog","user confirmation"],title:"Confirm Dialog"},sidebar:"reference",previous:{title:"Circular Progress",permalink:"/docs/reference/components/circular-progress"},next:{title:"Field Messages",permalink:"/docs/reference/components/field-message"}},m={},p=[{value:"Import",id:"import",level:2},{value:"Anatomy",id:"anatomy",level:2},{value:"Usage",id:"usage",level:2},{value:"Non-destructive",id:"non-destructive",level:3},{value:"Destructive",id:"destructive",level:3},{value:"Reference",id:"reference",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Behavior",id:"behavior",level:2},{value:"Patterns",id:"patterns",level:3},{value:"Usage",id:"usage-1",level:3},{value:"Accessibility",id:"accessibility",level:2}],d={toc:p};function f(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",{className:"size-xxl"},"Used to interrupt the user with a mandatory confirmation or action."),(0,i.kt)(s.ZP,{github:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/ConfirmDialog",figma:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsLinkBar"}),(0,i.kt)("h2",{id:"import"},"Import"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import { getConfirmDialogProps } from '@pluralsight/headless-styles'\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"interface ConfirmDialogOptions {\n  kind?: 'non-destructive' | 'destructive'\n  id: string\n  headerId: string\n  bodyId: string\n}\n\ngetConfirmDialogProps(options?: ConfirmDialogOptions)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import type { ConfirmDialogOptions } from '@pluralsight/headless-styles/types'\n")),(0,i.kt)("h2",{id:"anatomy"},"Anatomy"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Container"),(0,i.kt)("li",{parentName:"ol"},"Header"),(0,i.kt)("li",{parentName:"ol"},"Title"),(0,i.kt)("li",{parentName:"ol"},"Section"),(0,i.kt)("li",{parentName:"ol"},"Body"),(0,i.kt)("li",{parentName:"ol"},"Button Group"),(0,i.kt)("li",{parentName:"ol"},"Cancel Button"),(0,i.kt)("li",{parentName:"ol"},"Back Drop")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("h3",{id:"non-destructive"},"Non-destructive"),(0,i.kt)("p",null,"Use a non-destructive Confirm Dialog when you need a confirmation that does not result in a destructive behavior."),(0,i.kt)(r.Z,{mdxType:"BasicConfirmDialog"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'showLineNumbers title="Confirm Dialog Component."',showLineNumbers:!0,title:'"Confirm',Dialog:!0,'Component."':!0},"import { forwardRef, memo, useEffect, useRef } from 'react'\nimport { useEscToClose, useFocusTrap } from '@pluralsight/react-utils'\nimport {\n  getButtonProps,\n  getConfirmDialogProps,\n  getIconProps,\n} from '@pluralsight/headless-styles'\nimport { DangerDiamondFilledIcon } from '@pluralsight/icons'\n\nfunction ConfirmDialogEl(props, triggerRef) {\n  const { onClose, ...confirmProps } = props\n  const wrapperRef = useRef(null)\n  const confirm = getConfirmDialogProps(confirmProps)\n  const { ref, onKeyDown, setupFocusTrap } = useFocusTrap(triggerRef)\n  const isDestructive = confirmProps.kind === 'destructive'\n\n  function handleBackdropClick(event) {\n    event.stopPropagation()\n    if (wrapperRef.current === event.target) {\n      onClose()\n    }\n  }\n\n  useEscToClose(onClose)\n\n  useEffect(() => {\n    setupFocusTrap()\n  }, [setupFocusTrap])\n\n  return (\n    <div {...confirm.backdrop}>\n      <div {...confirm.focusGuard} />\n\n      <div {...confirm.wrapper} ref={wrapperRef} onClick={handleBackdropClick}>\n        <section {...confirm.section} ref={ref} onKeyDown={onKeyDown}>\n          <header {...confirm.header}>\n            {isDestructive && (\n              <span {...confirm.iconWrapper}>\n                <DangerDiamondFilledIcon\n                  {...getIconProps(confirm.iconOptions)}\n                />\n              </span>\n            )}\n            <h6 {...confirm.confirmTitle}>{props.confirmTitle}</h6>\n          </header>\n          <p {...confirm.confirmBody}>{props.body}</p>\n          <footer {...confirm.buttonGroup}>\n            <button\n              {...getButtonProps(confirm.cancelBtnOptions).button}\n              onClick={onClose}\n            >\n              Cancel\n            </button>\n            <button {...getButtonProps(confirm.agreeBtnOptions).button}>\n              {props.confirmText}\n            </button>\n          </footer>\n        </section>\n      </div>\n\n      <div {...confirm.focusGuard} />\n    </div>\n  )\n}\n\nconst ConfirmDialog = memo(forwardRef(ConfirmDialogEl))\n\nexport default ConfirmDialog\n")),(0,i.kt)("h3",{id:"destructive"},"Destructive"),(0,i.kt)("p",null,"When you need a confirmation from a user that will result in a destructive action."),(0,i.kt)(a.Z,{mdxType:"DestructiveConfirmDialog"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"getConfirmDialogProps({ kind: 'destructive' })\n")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"You can copy and paste the example from the ",(0,i.kt)("a",{parentName:"p",href:"#non-destructive"},"non-destructive section")," and pass ",(0,i.kt)("inlineCode",{parentName:"p"},'kind="destructive"')," to the component to get this same result.")),(0,i.kt)("h2",{id:"reference"},"Reference"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"getConfirmDialogProps(options?: ConfirmDialogOptions)\n")),(0,i.kt)("h3",{id:"parameters"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"options"),": id, headerId, and bodyId properties that accept a String value to connect and setup Accessibility properties for all the elements used within the Confirm Dialog. An optional kind property that accepts a String value of ",(0,i.kt)("inlineCode",{parentName:"li"},"'non-destructive' | 'destructive'")," to determine the styling of the Confirm Dialog.")),(0,i.kt)("h3",{id:"returns"},"Returns"),(0,i.kt)("p",null,"An Object matching the ",(0,i.kt)("a",{parentName:"p",href:"#anatomy"},"Anatomy")," containing ",(0,i.kt)("inlineCode",{parentName:"p"},"className")," and a11y properties relevant to each element/section. Additionally, it returns an ",(0,i.kt)("inlineCode",{parentName:"p"},"iconOptions")," Object to use as the parameters for the Icon API and ",(0,i.kt)("inlineCode",{parentName:"p"},"iconWrapper")," to use on the element wrapping the Icon. Likewise it returns ",(0,i.kt)("inlineCode",{parentName:"p"},"cancelBtnOptions")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"agreeBtnOptions")," to pass into the Button API as parameters. Last, an additional ",(0,i.kt)("inlineCode",{parentName:"p"},"focusGuard")," property to spread on a leading and trailing element within the Dialog for focus protections."),(0,i.kt)("h2",{id:"behavior"},"Behavior"),(0,i.kt)("p",null,"Confirm dialogs are to be used to interrupt the user's task with important, critical, or warning information. This is the Pluralsight themed version of a browser's native ",(0,i.kt)("inlineCode",{parentName:"p"},"window.confirm()")," function."),(0,i.kt)("h3",{id:"patterns"},"Patterns"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do")," use the Confirm Dialog when you need the user to confirm a decision."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't")," use the Modal when you need the user to confirm a decision."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do")," keep Confirm Dialog layout unaltered."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't")," manipulate or add any additional elements/styles to the Confirm Dialog."),(0,i.kt)("h3",{id:"usage-1"},"Usage"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do")," use sparingly in a user experience."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't")," abuse the use of this Dialog by using multiple times within a page."),(0,i.kt)("h2",{id:"accessibility"},"Accessibility"),(0,i.kt)("p",null,"The Pando Confirm Dialog, Button, and Icon APIs combined with semantic HTML allow the Confirm Dialog to be fully accessible and screen-readable."))}f.isMDXComponent=!0}}]);