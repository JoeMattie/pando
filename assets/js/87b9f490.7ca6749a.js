"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6774],{40736:function(e,t,n){n.d(t,{Z:function(){return l}});var a=n(45721),i={base:"base_M3w8",column:"column_mb9C base_M3w8",grid:"grid_EiLr base_M3w8"};const o={alignItems:"center",column:!1,gridCols:0,justifyContent:"space-between",textAlign:"center",type:"base"};function l(e){void 0===e&&(e=o);const t=e.type??o.type,n=e.gridColumns?`repeat(${e.gridColumns}, minmax(auto, max-content))`:"initial",l={alignItems:e.alignItems,gridTemplateColumns:n,justifyContent:e.justifyContent,textAlign:e.textAlign??"center",gap:e.gap??"1rem",columnGap:e.columnGap};return a.createElement("div",{className:i[t],style:l},e.children)}},15566:function(e,t,n){n.d(t,{dS:function(){return d},fK:function(){return s},C9:function(){return u},ZP:function(){return m}});var a=n(45721),i=n(84140),o="linkList_sLwJ",l="linkItem_ESvF";function r(e){return a.createElement("li",{className:l},a.createElement(i.Z,e,e.children))}function s(e){return a.createElement(r,{href:e.href},e.children??"View on Github")}function d(e){return a.createElement(r,{href:e.href},"View on Figma")}function u(e){return a.createElement("ul",{className:o},e.children)}function m(e){const{figma:t,github:n}=e;return a.createElement("ul",{className:o},n&&a.createElement(s,{href:n}),t&&a.createElement(d,{href:t}))}},45945:function(e,t,n){n(45721)},84140:function(e,t,n){n.d(t,{Z:function(){return s}});var a=n(45721),i=n(32662),o=n(51596),l=n(44070),r=n(42949);function s(e){const{href:t}=e,n=(0,o.L)({ariaHidden:!0,size:"s"}),s=t.includes("github")?l.Z:r.Z;return a.createElement(i.TextLink,e,a.createElement(s,n),e.children)}},64833:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return m},default:function(){return h},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return g}});var a=n(81648),i=n(45721),o=n(70167),l=n(15566),r=(n(45945),n(32662)),s=n(40736);function d(){const e=(0,i.useRef)(null);function t(t){t.preventDefault(),e.current?.close()}return i.createElement(s.Z,null,i.createElement(r.Button,{onClick:function(){e.current?.showModal()}},"Show modal"),i.createElement(r.AlertDialog,{bodyId:"test:body",headingId:"test:heading",ref:e},i.createElement(r.AlertDialogHeader,null,i.createElement(r.AlertDialogHeading,null,"Some Custom Modal"),i.createElement(r.AlertDialogCloseIconButton,{onClick:t})),i.createElement(r.AlertDialogBody,{id:"test:body"},i.createElement(r.AlertDialogText,null,"Lorem ipsum dolor sit amet consectetur adipisicing elit. Reiciendis temporibus modi officia nulla libero voluptatibus? Deleniti, maxime. Optio laudantium nobis qui, eos repellat explicabo animi sit natus quia quam sequi!"),i.createElement("br",null),i.createElement(r.AlertDialogText,null,"Lorem ipsum dolor sit amet consectetur adipisicing elit. Reiciendis temporibus modi officia nulla libero voluptatibus? Deleniti, maxime. Optio laudantium nobis qui, eos repellat explicabo animi sit natus quia quam sequi!")),i.createElement(r.AlertDialogFooter,null,i.createElement("form",null,i.createElement(r.Flex,{gap:16,justify:"flex-end"},i.createElement(r.Button,{formMethod:"dialog",sentiment:"default",usage:"outline"},"Cancel"),i.createElement(r.Button,{onClick:t,type:"submit"},"OK"))))))}const u={tags:["dialog","custom dialog"],title:"Modal"},m=void 0,c={unversionedId:"reference/components/modal",id:"reference/components/modal",title:"Modal",description:"Used to show an element that represents a custom dialog box or other",source:"@site/docs/reference/components/modal.mdx",sourceDirName:"reference/components",slug:"/reference/components/modal",permalink:"/docs/reference/components/modal",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/components/modal.mdx",tags:[{label:"dialog",permalink:"/docs/tags/dialog"},{label:"custom dialog",permalink:"/docs/tags/custom-dialog"}],version:"current",lastUpdatedBy:"Casey Baggz",frontMatter:{tags:["dialog","custom dialog"],title:"Modal"},sidebar:"reference",previous:{title:"Menu",permalink:"/docs/reference/components/menu"},next:{title:"Portal",permalink:"/docs/reference/components/portal"}},p={},g=[{value:"Import",id:"import",level:2},{value:"Anatomy",id:"anatomy",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Modal",id:"basic-modal",level:3},{value:"Customizing",id:"customizing",level:2},{value:"Behavior",id:"behavior",level:2},{value:"Patterns",id:"patterns",level:3},{value:"Usage",id:"usage-1",level:3},{value:"API",id:"api",level:2},{value:"AlertDialog",id:"alertdialog",level:3},{value:"Parameters",id:"parameters",level:4},{value:"AlertDialogHeading",id:"alertdialogheading",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"AlertDialogBody",id:"alertdialogbody",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Accessibility",id:"accessibility",level:2}],f={toc:g};function h(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",{className:"size-xxl"},"Used to show an element that represents a custom dialog box or other interactive component, such as a dismissible alert, inspector, or subwindow."),(0,o.kt)(l.C9,{mdxType:"DocsLinkList"},(0,o.kt)(l.fK,{href:"https://github.com/pluralsight/pando/tree/main/packages/react/src/components/Alert",mdxType:"DocsGithubLink"}),(0,o.kt)(l.fK,{href:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/AlertDialog/alertDialog.ts",mdxType:"DocsGithubLink"},"View Core API"),(0,o.kt)(l.dS,{href:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsFigmaLink"})),(0,o.kt)("h2",{id:"import"},"Import"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import {\n  AlertDialog,\n  AlertDialogHeader,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeading,\n  AlertDialogCloseIconButton,\n  AlertDialogText,\n} from '@pluralsight/react'\n")),(0,o.kt)("h2",{id:"anatomy"},"Anatomy"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Container"),(0,o.kt)("li",{parentName:"ol"},"Close Button (optional)"),(0,o.kt)("li",{parentName:"ol"},"Heading (optional)"),(0,o.kt)("li",{parentName:"ol"},"Body"),(0,o.kt)("li",{parentName:"ol"},"Footer (optional)")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("h3",{id:"basic-modal"},"Basic Modal"),(0,o.kt)("p",null,"The Modal component is just a wrapper around the native ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog"},"dialog element")," with additional accessibility features added."),(0,o.kt)(d,{mdxType:"BasicModal"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'showLineNumbers title="How to create a custom modal."',showLineNumbers:!0,title:'"How',to:!0,create:!0,a:!0,custom:!0,'modal."':!0},'import { useRef } from \'react\'\nimport {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogCloseIconButton,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogHeading,\n  AlertDialogText,\n  Button,\n  Flex,\n} from \'@pluralsight/react\'\n\nexport default function BasicModal() {\n  const dialogRef = useRef(null)\n\n  function handleCancel(e) {\n    e.preventDefault()\n    dialogRef.current?.close()\n  }\n\n  function handleShowModal() {\n    dialogRef.current?.showModal()\n  }\n\n  return (\n    <div>\n      <Button onClick={handleShowModal}>Show modal</Button>\n\n      <AlertDialog bodyId="test:body" headingId="test:heading" ref={dialogRef}>\n        <AlertDialogHeader>\n          <AlertDialogHeading>Some Custom Modal</AlertDialogHeading>\n          <AlertDialogCloseIconButton onClick={handleCloseModal} />\n        </AlertDialogHeader>\n\n        <AlertDialogBody id="test:body">\n          <AlertDialogText>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Reiciendis\n            temporibus modi officia nulla libero voluptatibus? Deleniti, maxime.\n            Optio laudantium nobis qui, eos repellat explicabo animi sit natus\n            quia quam sequi!\n          </AlertDialogText>\n          <br />\n          <AlertDialogText>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Reiciendis\n            temporibus modi officia nulla libero voluptatibus? Deleniti, maxime.\n            Optio laudantium nobis qui, eos repellat explicabo animi sit natus\n            quia quam sequi!\n          </AlertDialogText>\n        </AlertDialogBody>\n\n        <AlertDialogFooter>\n          <form method="dialog">\n            <Flex gap={16} justify="flex-end">\n              <Button\n                onClick={handleCancel}\n                sentiment="default"\n                type="button"\n                usage="outline"\n              >\n                Cancel\n              </Button>\n              <Button type="submit">OK</Button>\n            </Flex>\n          </form>\n        </AlertDialogFooter>\n      </AlertDialog>\n    </div>\n  )\n}\n')),(0,o.kt)("admonition",{title:"Use Forms for better accessibility and features",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Notice we are taking advantage of the native ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog"},"dialog element")," and using a form with the ",(0,o.kt)("inlineCode",{parentName:"p"},'method="dialog"')," that contains a submit button. This allows us to use the native form functionality and accessibility features.")),(0,o.kt)("h2",{id:"customizing"},"Customizing"),(0,o.kt)("p",null,"The Modal can be customized in the same way as the ",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/components/confirm-dialog#customizing"},"Confirm/Prompt Dialog"),"."),(0,o.kt)("h2",{id:"behavior"},"Behavior"),(0,o.kt)("admonition",{title:"Modal vs. Alert Dialog",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"A Modal is intended for informational purposes where the ",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/components/confirm-dialog"},"Confirm/Prompt Dialog")," is to specifically get an action-based confirmation from the user. There are Accessibility differences between the two use cases.")),(0,o.kt)("h3",{id:"patterns"},"Patterns"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Do")," use the Modal when you need the user to view addtional information within an internal view outside of the current page."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Don't")," use the Confirm Dialog ",(0,o.kt)("em",{parentName:"p"},"unless")," you need the user to confirm a decision."),(0,o.kt)("h3",{id:"usage-1"},"Usage"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Do")," use the Modal for providing more information about a context within a page."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Don't")," use the Modal for complex or large amounts of content, such as forms, multi-step processes, or entire page experiences."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Do")," use sparingly in a user experience."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Don't")," abuse the use of a Modal by using multiple times within a page or within a previous Modal."),(0,o.kt)("h2",{id:"api"},"API"),(0,o.kt)("h3",{id:"alertdialog"},"AlertDialog"),(0,o.kt)("h4",{id:"parameters"},"Parameters"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface AlertDialogProps extends HTMLAttributes<HTMLDialogElement> {\n  bodyId: string\n  headingId: string\n  onClose?: MouseEventHandler<HTMLButtonElement>\n}\n")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"bodyId")," - The id of the content element within the dialog."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"headingId")," - The id of the heading element within the dialog."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"onClose")," - The function that is called when the dialog is closed via ",(0,o.kt)("inlineCode",{parentName:"li"},".close()"),".")),(0,o.kt)("h3",{id:"alertdialogheading"},"AlertDialogHeading"),(0,o.kt)("h4",{id:"parameters-1"},"Parameters"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface AlertDialogHeadingProps extends HTMLAttributes<HTMLHeadingElement> {\n  id: string\n}\n")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"id")," - The id of the heading element within the dialog.")),(0,o.kt)("h3",{id:"alertdialogbody"},"AlertDialogBody"),(0,o.kt)("h4",{id:"parameters-2"},"Parameters"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface AlertDialogBodyProps extends HTMLAttributes<HTMLDivElement> {\n  id: string\n}\n")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"id")," - The id of the content element within the dialog.")),(0,o.kt)("h2",{id:"accessibility"},"Accessibility"),(0,o.kt)("p",null,"The Pando Confirm Dialog is fully accessible and screen-readable by sharing the same accessbility features as the ",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/components/confirm-dialog#accessibility"},"Confirm/Prompt Dialog"),"."))}h.isMDXComponent=!0}}]);