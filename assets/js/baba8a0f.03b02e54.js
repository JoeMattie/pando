"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5255],{6115:function(e,t,n){const r=n(86521);t.Z=function(e){return(0,r.jsx)("svg",{viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",role:"img",fill:"currentColor",className:"ps-icon-svg","aria-label":"figma icon",...e,children:(0,r.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M4.25 5.5A4.25 4.25 0 0 1 8.5 1.25h7A4.25 4.25 0 0 1 17.912 9a4.25 4.25 0 1 1-5.162 6.74v3.76A4.25 4.25 0 1 1 6.088 16a4.245 4.245 0 0 1-1.838-3.5c0-1.452.728-2.733 1.838-3.5A4.245 4.245 0 0 1 4.25 5.5Zm4.25 9.75h2.75v-5.5H8.5a2.75 2.75 0 1 0 0 5.5Zm2.75 1.5H8.5a2.75 2.75 0 1 0 2.75 2.75v-2.75Zm7-11.25a2.75 2.75 0 0 1-2.75 2.75h-2.75v-5.5h2.75a2.75 2.75 0 0 1 2.75 2.75ZM15.5 9.75a2.75 2.75 0 1 0 0 5.5 2.75 2.75 0 0 0 0-5.5Zm-7-1.5h2.75v-5.5H8.5a2.75 2.75 0 0 0 0 5.5Z"})})}},31026:function(e,t,n){const r=n(86521);t.Z=function(e){return(0,r.jsx)("svg",{"aria-label":"github logo",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",role:"img",fill:"currentColor",className:"ps-icon-svg",...e,children:(0,r.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M2 12c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12a10 10 0 0 0-20 0Z"})})}},95428:function(e,t,n){n.d(t,{Z:function(){return d}});var r=n(81648),a=n(45721),i=n(17493),o=n(69477),l="grid_cC7H";function s(e){return a.createElement("li",(0,i.a)({colSpan:2}),a.createElement(o.Z,e,e.children))}function d(e){const{figma:t,github:n}=e,{className:o,...d}=(0,i.g)({cols:12,gap:8});return a.createElement("ul",(0,r.Z)({className:`${o} ${l}`},d),n&&a.createElement(s,{href:n},"View on Github"),t&&a.createElement(s,{href:t},"Figma Design"))}},25302:function(e,t,n){n(45721)},69477:function(e,t,n){n.d(t,{Z:function(){return s}});var r=n(45721),a=n(60146),i=n(59280),o=n(31026),l=n(6115);function s(e){const{href:t}=e,n=(0,a.g)({href:t}),s=(0,i.g)(n.iconOptions),d=t.includes("github")?o.Z:l.Z;return r.createElement("a",n.link,r.createElement(d,s),e.children)}},10172:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return p}});var r=n(81648),a=(n(45721),n(70167)),i=n(95428);n(25302);const o={tags:["app frame","aside","equal col","row","layout"],title:"Grid"},l=void 0,s={unversionedId:"reference/components/grid",id:"reference/components/grid",title:"Grid",description:"Used to display content in a grid layout.",source:"@site/docs/reference/components/grid.mdx",sourceDirName:"reference/components",slug:"/reference/components/grid",permalink:"/docs/next/reference/components/grid",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/components/grid.mdx",tags:[{label:"app frame",permalink:"/docs/next/tags/app-frame"},{label:"aside",permalink:"/docs/next/tags/aside"},{label:"equal col",permalink:"/docs/next/tags/equal-col"},{label:"row",permalink:"/docs/next/tags/row"},{label:"layout",permalink:"/docs/next/tags/layout"}],version:"current",lastUpdatedBy:"Tom Pietrosanti",frontMatter:{tags:["app frame","aside","equal col","row","layout"],title:"Grid"},sidebar:"reference",previous:{title:"Form Label",permalink:"/docs/next/reference/components/form-label"},next:{title:"Icon Button",permalink:"/docs/next/reference/components/icon-button"}},d={},p=[{value:"Import",id:"import",level:2},{value:"Anatomy",id:"anatomy",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic 2 Column Layout",id:"basic-2-column-layout",level:3},{value:"Reference",id:"reference",level:2},{value:"<code>getGridProps</code>",id:"getgridprops",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"<code>getGridItemProps</code>",id:"getgriditemprops",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Behavior",id:"behavior",level:2},{value:"Accessbility",id:"accessbility",level:2}],c={toc:p};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",{className:"size-xxl"},"Used to display content in a grid layout."),(0,a.kt)(i.Z,{github:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/Grid",figma:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsLinkBar"}),(0,a.kt)("h2",{id:"import"},"Import"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import { getGridProps, getGridItemProps } from '@pluralsight/headless-styles'\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"interface GridOptions {\n  cols?: number\n  gap?: 6 | 8 | 12 | 16 | 32\n  rows?: number\n}\n\ngetGridProps(options?: GridOptions)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"interface GridItemOptions {\n  colSpan?: number\n  rowSpan?: number\n}\n\ngetGridItemProps(options?: GridItemOptions)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import type {\n  GridOptions,\n  GridItemOptions,\n} from '@pluralsight/headless-styles/types'\n")),(0,a.kt)("h2",{id:"anatomy"},"Anatomy"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Grid"),(0,a.kt)("li",{parentName:"ol"},"Grid Item")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("h3",{id:"basic-2-column-layout"},"Basic 2 Column Layout"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function TwoColLayout() {\n  function getGridItemStyles(options) {\n    const styles = getGridItemProps(options)\n    return {\n      style: {\n        ...styles.style,\n        backgroundColor: 'var(--ps-surface-strong)',\n        borderRadius: '6px',\n        height: '11rem',\n        marginBottom: '1rem',\n        padding: '1rem',\n      },\n    }\n  }\n\n  return (\n    <div {...getGridProps({ cols: 12, gap: 32 })}>\n      <div {...getGridItemStyles({ colSpan: 9 })}>main section</div>\n      <div {...getGridItemStyles({ colSpan: 3 })}>sidebar</div>\n    </div>\n  )\n}\n")),(0,a.kt)("h2",{id:"reference"},"Reference"),(0,a.kt)("h3",{id:"getgridprops"},(0,a.kt)("inlineCode",{parentName:"h3"},"getGridProps")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getGridProps(options?: GridOptions)\n")),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"options"),": A Number value for properties cols and rows which determine the grid layout axes. A Number value for the property gap of ",(0,a.kt)("inlineCode",{parentName:"li"},"6 | 8 | 12 | 16 | 32")," which determines the gap size for the grid.")),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("p",null,"An Object matching the ",(0,a.kt)("a",{parentName:"p",href:"#anatomy"},"Anatomy")," containing ",(0,a.kt)("inlineCode",{parentName:"p"},"className")," and a11y properties relevant to the label element. Additionally, it returns a ",(0,a.kt)("inlineCode",{parentName:"p"},"style")," property that adds dynamic styling based on the options provided."),(0,a.kt)("h3",{id:"getgriditemprops"},(0,a.kt)("inlineCode",{parentName:"h3"},"getGridItemProps")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getGridItemProps(options?: GridItemOptions)\n")),(0,a.kt)("h4",{id:"parameters-1"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"options"),": A Number value for properties colSpan and rowSpan which determine the styling for the columns and rows span used for the grid item.")),(0,a.kt)("h4",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,"An Object matching the ",(0,a.kt)("a",{parentName:"p",href:"#anatomy"},"Anatomy")," containing ",(0,a.kt)("inlineCode",{parentName:"p"},"className")," and a11y properties relevant to the Grid element. Additionally, it returns a ",(0,a.kt)("inlineCode",{parentName:"p"},"style")," property that adds dynamic styling based on the options provided."),(0,a.kt)("h2",{id:"behavior"},"Behavior"),(0,a.kt)("p",null,"There are no behavior patterns required for the Grid."),(0,a.kt)("h2",{id:"accessbility"},"Accessbility"),(0,a.kt)("p",null,"The Pando Grid & GridItem APIs combined with semantic HTML allow the Grid & GridItems to be fully accessible and screen-readable."))}m.isMDXComponent=!0}}]);