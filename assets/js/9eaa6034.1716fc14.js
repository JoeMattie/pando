"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7980],{70167:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return h}});var a=t(45721);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var i=a.createContext({}),p=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(i.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,s=e.originalType,i=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(t),h=l,g=u["".concat(i,".").concat(h)]||u[h]||c[h]||s;return t?a.createElement(g,r(r({ref:n},d),{},{components:t})):a.createElement(g,r({ref:n},d))}));function h(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var s=t.length,r=new Array(s);r[0]=u;var o={};for(var i in n)hasOwnProperty.call(n,i)&&(o[i]=n[i]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var p=2;p<s;p++)r[p]=t[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9637:function(e,n,t){const a=t(86521);n.Z=function(e){return(0,a.jsx)("svg",{"aria-label":"github logo",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",role:"img",fill:"currentColor",className:"ps-icon-svg",...e,children:(0,a.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M2 12c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12a10 10 0 0 0-20 0Z"})})}},76548:function(e,n,t){const a=t(86521);n.Z=function(e){return(0,a.jsx)("svg",{"aria-label":"NPM logo",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",role:"img",fill:"currentColor",className:"ps-icon-svg",...e,children:(0,a.jsx)("path",{d:"M12 12.444h-1.111v-2.222H12v2.222ZM22 8v6.667H12v1.11H7.556v-1.11H2V8h20ZM7.556 9.111H3.11v4.445h2.222v-3.334h1.111v3.334h1.112V9.11Zm5.555 0H8.667v5.556h2.222v-1.111h2.222V9.11Zm7.778 0h-6.667v4.445h2.222v-3.334h1.112v3.334h1.11v-3.334h1.112v3.334h1.11V9.11Z"})})}},22625:function(e,n,t){t(45721)},94880:function(e,n,t){t.d(n,{Z:function(){return o}});var a=t(45721),l=t(60103),s=t(9637),r=t(76548);function o(e){var n=e.href,t=(0,l.j8)({href:n}),o=(0,l.L1)(t.iconOptions),i=n.includes("github")?s.Z:r.Z;return a.createElement("a",t.link,a.createElement(i,o),e.children)}},90565:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return p},default:function(){return g},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return u}});var a=t(60953),l=t(59005),s=(t(45721),t(70167)),r=(t(22625),t(94880)),o=["components"],i={tags:["Development","Packages","Components","Headless Styles","Typography"]},p=void 0,d={unversionedId:"development/headless-styles/Typography",id:"version-0.1.0-alpha/development/headless-styles/Typography",title:"Typography",description:'Our Typography styles are built into our fonts & normalize setup. This means, that there is no need for additional typography helpers within this package - it "just works".',source:"@site/versioned_docs/version-0.1.0-alpha/development/headless-styles/Typography.mdx",sourceDirName:"development/headless-styles",slug:"/development/headless-styles/Typography",permalink:"/docs/0.1.0-alpha/development/headless-styles/Typography",draft:!1,editUrl:"https://github.com/pluralsight/tva/edit/main/website/versioned_docs/version-0.1.0-alpha/development/headless-styles/Typography.mdx",tags:[{label:"Development",permalink:"/docs/0.1.0-alpha/tags/development"},{label:"Packages",permalink:"/docs/0.1.0-alpha/tags/packages"},{label:"Components",permalink:"/docs/0.1.0-alpha/tags/components"},{label:"Headless Styles",permalink:"/docs/0.1.0-alpha/tags/headless-styles"},{label:"Typography",permalink:"/docs/0.1.0-alpha/tags/typography"}],version:"0.1.0-alpha",lastUpdatedBy:"Brad Bice",frontMatter:{tags:["Development","Packages","Components","Headless Styles","Typography"]},sidebar:"development",previous:{title:"Textarea",permalink:"/docs/0.1.0-alpha/development/headless-styles/Textarea"},next:{title:"Intro",permalink:"/docs/0.1.0-alpha/development/icons/intro"}},c={},u=[{value:"Usage",id:"usage",level:2},{value:"Headings",id:"headings",level:3},{value:"Non-heading Text",id:"non-heading-text",level:3},{value:"CodeBlocks",id:"codeblocks",level:3},{value:"Lists",id:"lists",level:3}],h={toc:u};function g(e){var n=e.components,t=(0,l.Z)(e,o);return(0,s.kt)("wrapper",(0,a.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Our Typography styles are built into our ",(0,s.kt)("a",{parentName:"p",href:"/docs/0.1.0-alpha/development/getting-started/installation#ps-tt-commons-font"},"fonts & normalize setup"),". This means, that there is no need for additional typography helpers within this package - it ",(0,s.kt)("strong",{parentName:"p"},'"just works"'),". \ud83d\ude4c"),(0,s.kt)(r.Z,{icon:"github",href:"https://github.com/pluralsight/tva/tree/main/packages/design-tokens/styles/base.css",mdxType:"ViewSourceLink"},"View source"),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("p",null,"Our typography relies on the ",(0,s.kt)("strong",{parentName:"p"},"correct usage of ",(0,s.kt)("a",{parentName:"strong",href:"https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals"},"text syntax"))," which by nature will help your apps to become more accessible by nature."),(0,s.kt)("p",null,"The easiest solution is just to copy/paste the examples we give you in each section of the helper page."),(0,s.kt)("h3",{id:"headings"},"Headings"),(0,s.kt)("p",null,"For all ",(0,s.kt)("inlineCode",{parentName:"p"},"headings")," we use the ",(0,s.kt)("inlineCode",{parentName:"p"},"h")," tags."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'live title="Heading options"',live:!0,title:'"Heading','options"':!0},"function Headings() {\n  return (\n    <header>\n      <h1>Heading 1</h1>\n      <h2>Heading 2</h2>\n      <h3>Heading 3</h3>\n      <h4>Heading 4</h4>\n      <h5>Heading 5</h5>\n      <h6>Heading 6</h6>\n    </header>\n  )\n}\n")),(0,s.kt)("h3",{id:"non-heading-text"},"Non-heading Text"),(0,s.kt)("p",null,"All other text that is not a ",(0,s.kt)("inlineCode",{parentName:"p"},"heading")," can use the following guide. For ",(0,s.kt)("strong",{parentName:"p"},"bold")," text, just wrap your ",(0,s.kt)("inlineCode",{parentName:"p"},"p")," in a ",(0,s.kt)("inlineCode",{parentName:"p"},"strong")," tag (they way it was always meant to be). \ud83d\ude09"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'live title="Non-heading options"',live:!0,title:'"Non-heading','options"':!0},'function NonHeadings() {\n  return (\n    <div>\n      <div>\n        <small class="size-xs">Xtra Small Text</small>\n      </div>\n      <div>\n        <strong>\n          <small class="size-xs">Bold Xtra Small Text</small>\n        </strong>\n      </div>\n      <div>\n        <small>Small Text</small>\n      </div>\n      <div>\n        <strong>\n          <small>Bold Small Text</small>\n        </strong>\n      </div>\n      <div>\n        <p>Medium Text</p>\n      </div>\n      <div>\n        <strong>\n          <p>Bold Medium Text</p>\n        </strong>\n      </div>\n      <div>\n        <p class="size-l">Large Text</p>\n      </div>\n      <div>\n        <strong>\n          <p class="size-l">Bold Large Text</p>\n        </strong>\n      </div>\n      <div>\n        <p class="size-xl">Xtra Large Text</p>\n      </div>\n      <div>\n        <strong>\n          <p class="size-xl">Bold Xtra Large Text</p>\n        </strong>\n      </div>\n      <div>\n        <p class="size-xxl">XXL Text</p>\n      </div>\n      <div>\n        <strong>\n          <p class="size-xxl">Bold XXL Text</p>\n        </strong>\n      </div>\n    </div>\n  )\n}\n')),(0,s.kt)("h3",{id:"codeblocks"},"CodeBlocks"),(0,s.kt)("p",null,"For the times you need to use ",(0,s.kt)("inlineCode",{parentName:"p"},"code-styles"),". Just use the ",(0,s.kt)("inlineCode",{parentName:"p"},"code"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"kbd"),", or ",(0,s.kt)("inlineCode",{parentName:"p"},"samp")," tags."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'live title="Code styles"',live:!0,title:'"Code','styles"':!0},"function CodeStyles() {\n  return (\n    <div>\n      <p>\n        This is some text with a <code>inline code</code> example.\n      </p>\n      <p>\n        This is a keyboard shortcut <kbd>shift + K</kbd> example.\n      </p>\n\n      <p> This is a output log example:</p>\n      <p>\n        <samp>Keyboard not found Press F1 to continue</samp>\n      </p>\n    </div>\n  )\n}\n")),(0,s.kt)("h3",{id:"lists"},"Lists"),(0,s.kt)("p",null,"For lists, just use the ",(0,s.kt)("inlineCode",{parentName:"p"},"ul"),", or ",(0,s.kt)("inlineCode",{parentName:"p"},"ol"),"syntax:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'live title="Lists examples"',live:!0,title:'"Lists','examples"':!0},"function Lists() {\n  return (\n    <div>\n      <ul>\n        <li>Harry</li>\n        <li>Ron</li>\n        <li>Hermoine</li>\n      </ul>\n      <ol>\n        <li>One</li>\n        <li>Two</li>\n        <ol>\n          <li>We even support nested lists.</li>\n        </ol>\n      </ol>\n    </div>\n  )\n}\n")))}g.isMDXComponent=!0}}]);