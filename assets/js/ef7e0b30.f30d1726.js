"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5538],{70167:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(45721);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=o,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||r;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},24217:function(e,t,n){const a=n(86521);t.Z=function(e){return(0,a.jsx)("svg",{"aria-label":"github logo",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",role:"img",fill:"currentColor",className:"ps-icon-svg",...e,children:(0,a.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M2 12c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12a10 10 0 0 0-20 0Z"})})}},96122:function(e,t,n){const a=n(86521);t.Z=function(e){return(0,a.jsx)("svg",{"aria-label":"NPM logo",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",role:"img",fill:"currentColor",className:"ps-icon-svg",...e,children:(0,a.jsx)("path",{d:"M12 12.444h-1.111v-2.222H12v2.222ZM22 8v6.667H12v1.11H7.556v-1.11H2V8h20ZM7.556 9.111H3.11v4.445h2.222v-3.334h1.111v3.334h1.112V9.11Zm5.555 0H8.667v5.556h2.222v-1.111h2.222V9.11Zm7.778 0h-6.667v4.445h2.222v-3.334h1.112v3.334h1.11v-3.334h1.112v3.334h1.11V9.11Z"})})}},94880:function(e,t,n){n.d(t,{Z:function(){return l}});var a=n(45721),o=n(84088),r=n(24217),i=n(96122);function l(e){var t=e.href,n=(0,o.j8)({href:t}),l=(0,o.L1)(n.iconOptions),s=t.includes("github")?r.Z:i.Z;return a.createElement("a",n.link,a.createElement(s,l),e.children)}},10010:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return m}});var a=n(60953),o=n(59005),r=(n(45721),n(70167)),i=n(94880),l=["components"],s={tags:["Development","Packages","React","React utils","useAutoFormatDate","hooks"]},u="useAutoFormatDate",p={unversionedId:"development/react-utils/use-auto-format-date",id:"development/react-utils/use-auto-format-date",title:"useAutoFormatDate",description:"A custom hook for auto-formatting and validating a text input value to match a short date.",source:"@site/docs/development/react-utils/use-auto-format-date.mdx",sourceDirName:"development/react-utils",slug:"/development/react-utils/use-auto-format-date",permalink:"/docs/next/development/react-utils/use-auto-format-date",draft:!1,editUrl:"https://github.com/pluralsight/tva/edit/main/website/docs/development/react-utils/use-auto-format-date.mdx",tags:[{label:"Development",permalink:"/docs/next/tags/development"},{label:"Packages",permalink:"/docs/next/tags/packages"},{label:"React",permalink:"/docs/next/tags/react"},{label:"React utils",permalink:"/docs/next/tags/react-utils"},{label:"useAutoFormatDate",permalink:"/docs/next/tags/use-auto-format-date"},{label:"hooks",permalink:"/docs/next/tags/hooks"}],version:"current",lastUpdatedBy:"Casey Baggz",frontMatter:{tags:["Development","Packages","React","React utils","useAutoFormatDate","hooks"]},sidebar:"development",previous:{title:"List of Icons",permalink:"/docs/next/development/icons/iconsList"},next:{title:"useEscToClose",permalink:"/docs/next/development/react-utils/use-esc-to-close"}},c={},m=[{value:"Import",id:"import",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Example usage in Component",id:"example-usage-in-component",level:2}],d={toc:m};function h(e){var t=e.components,n=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"useautoformatdate"},"useAutoFormatDate"),(0,r.kt)("p",null,"A custom hook for auto-formatting and validating a text input value to match a ",(0,r.kt)("a",{parentName:"p",href:"https://moment.github.io/luxon/#/formatting?id=presets"},"short date"),"."),(0,r.kt)(i.Z,{icon:"github",href:"https://github.com/pluralsight/tva/blob/main/packages/react-utils/src/hooks/useAutoFormatDate.ts",mdxType:"ViewSourceLink"},"View source"),(0,r.kt)("h2",{id:"import"},"Import"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useAutoFormatDate } from '@pluralsight/react-utils'\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Formatting")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Updates days/months to use ",(0,r.kt)("inlineCode",{parentName:"li"},"dd")," format when a single number entered below 10")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Validating")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Updates months to use valid range (i.e. it changes 13 to 12)"),(0,r.kt)("li",{parentName:"ul"},'Updates days/months to use valid dates within X month (i.e. it will change "02/31" to be "02/28")'),(0,r.kt)("li",{parentName:"ul"},"Takes into account leap years")),(0,r.kt)("h2",{id:"basic-usage"},"Basic Usage"),(0,r.kt)("p",null,"To use ",(0,r.kt)("inlineCode",{parentName:"p"},"useAutoFormatDate")," you can either call it with no options or add the options."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"interface Options {\n  pattern?: ['m', 'd', 'Y'] | ['d', 'm', 'Y']\n  value?: string\n}\n\nuseAutoFormatDate(options?: Options)\n")),(0,r.kt)("p",null,"This hook supports two different values for ",(0,r.kt)("inlineCode",{parentName:"p"},"pattern")," of either ",(0,r.kt)("inlineCode",{parentName:"p"},"['m', 'd', 'Y']")," (default) or ",(0,r.kt)("inlineCode",{parentName:"p"},"['d', 'm', 'Y']"),"."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"value")," option takes a ",(0,r.kt)("a",{parentName:"p",href:"https://moment.github.io/luxon/#/formatting?id=presets"},"Short Date")," format."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="With options"',title:'"With','options"':!0},"useAutoFormatDate({\n  pattern: ['d', 'm', 'Y'],\n  value: '01/02/2022',\n})\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"We recommend using ",(0,r.kt)("a",{parentName:"p",href:"https://moment.github.io/luxon/#/"},"Luxon")," for a verbose and light-weight Date library if you need something outside of what the native Javascript Date API provides for tasks like formatting.")),(0,r.kt)("h2",{id:"return-value"},"Return Value"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"useAutoFormatDate")," hook returns an Object with properties of ",(0,r.kt)("inlineCode",{parentName:"p"},"placeholder"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"value"),", and an ",(0,r.kt)("inlineCode",{parentName:"p"},"onChange")," memoized callback."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="useAutoFormat return value"',title:'"useAutoFormat',return:!0,'value"':!0},"{\n  onChange: memoized Callback Function,\n  placeholder: string,\n  value: string,\n}\n")),(0,r.kt)("h2",{id:"example-usage-in-component"},"Example usage in Component"),(0,r.kt)("p",null,"Here is an example of how you might use ",(0,r.kt)("inlineCode",{parentName:"p"},"useAutoFormatDate")," for a form input that needs to collect a birth date. We can combine this hook with the ",(0,r.kt)("a",{parentName:"p",href:"/docs/next/development/headless-styles/Input"},"Headless Styles Input")," to have a nice looking UI."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"function DateInput(props) {\n  // highlight-next-line\n  const inputFormatProps = useAutoFormateDate()\n  const { fieldOptions } = getFormControlProps(props)\n  const inputProps = getInputProps({\n    ...fieldOptions,\n    id: 'birthdate',\n    name: 'birthdate',\n    placeholder: inputFormatProps.placeholder,\n    value: inputFormatProps.value,\n  })\n\n  return (\n    <div {...inputProps.inputWrapper}>\n      <input {...inputProps.input} onChange={inputFormatProps.onChange} />\n    </div>\n  )\n}\n")))}h.isMDXComponent=!0}}]);