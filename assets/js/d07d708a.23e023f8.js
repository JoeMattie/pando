"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2022],{72032:function(t,n,e){e.d(n,{dS:function(){return c},fK:function(){return l},C9:function(){return p},ZP:function(){return d}});var o=e(81648),i=e(45721),a=e(71397),r=e(61471),s="grid_cC7H";function u(t){return i.createElement("li",(0,a.a)({colSpan:2}),i.createElement(r.Z,t,t.children))}function l(t){return i.createElement(u,{href:t.href},t.children??"View on Github")}function c(t){return i.createElement(u,{href:t.href},"View on Figma")}function p(t){const{className:n,...e}=(0,a.g)({cols:12,gap:8});return i.createElement("ul",(0,o.Z)({className:`${n} ${s}`},e),t.children)}function d(t){const{figma:n,github:e}=t,{className:r,...u}=(0,a.g)({cols:12,gap:8});return i.createElement("ul",(0,o.Z)({className:`${r} ${s}`},u),e&&i.createElement(l,{href:e}),n&&i.createElement(c,{href:n}))}},27505:function(t,n,e){e(45721)},61471:function(t,n,e){e.d(n,{Z:function(){return u}});var o=e(45721),i=e(64965),a=e(4094),r=e(31026),s=e(6115);function u(t){const{href:n}=t,e=(0,i.g)({href:n}),u=(0,a.g)(e.iconOptions),l=n.includes("github")?r.Z:s.Z;return o.createElement("a",e.link,o.createElement(l,u),t.children)}},7590:function(t,n,e){e.r(n),e.d(n,{assets:function(){return l},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return r},metadata:function(){return u},toc:function(){return c}});var o=e(81648),i=(e(45721),e(70167)),a=e(72032);e(27505);const r={tags:[],title:"Button"},s=void 0,u={unversionedId:"reference/components/button",id:"reference/components/button",title:"Button",description:"Used to perform an action, such as submitting a form, opening/closing a",source:"@site/docs/reference/components/button.mdx",sourceDirName:"reference/components",slug:"/reference/components/button",permalink:"/docs/next/reference/components/button",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/components/button.mdx",tags:[],version:"current",lastUpdatedBy:"Casey Baggz",frontMatter:{tags:[],title:"Button"},sidebar:"reference",previous:{title:"Badge",permalink:"/docs/next/reference/components/badge"},next:{title:"Checkbox",permalink:"/docs/next/reference/components/checkbox"}},l={},c=[{value:"Anatomy",id:"anatomy",level:2},{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Buttons",id:"basic-buttons",level:3},{value:"Outline Buttons",id:"outline-buttons",level:3},{value:"Text Buttons",id:"text-buttons",level:3},{value:"Button with icon",id:"button-with-icon",level:3},{value:"Sizes",id:"sizes",level:3},{value:"Size Mapping",id:"size-mapping",level:4},{value:"Reference",id:"reference",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Behavior",id:"behavior",level:2},{value:"Patterns",id:"patterns",level:3},{value:"Sentiment",id:"sentiment",level:3},{value:"Usage",id:"usage-1",level:3},{value:"Sizing",id:"sizing",level:3},{value:"Accessbility",id:"accessbility",level:2}],p={toc:c};function d(t){let{components:n,...e}=t;return(0,i.kt)("wrapper",(0,o.Z)({},p,e,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",{className:"size-xxl"},"Used to perform an action, such as submitting a form, opening/closing a dialog, or using a cancel action."),(0,i.kt)(a.ZP,{github:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/Button",figma:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsLinkBar"}),(0,i.kt)("h2",{id:"anatomy"},"Anatomy"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Leading Icon (optional)"),(0,i.kt)("li",{parentName:"ol"},"Label"),(0,i.kt)("li",{parentName:"ol"},"Trailing Icon (optional)")),(0,i.kt)("h2",{id:"import"},"Import"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import { getButtonProps } from '@pluralsight/headless-styles'\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import type { ButtonOptions } from '@pluralsight/headless-styles/types'\n")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("h3",{id:"basic-buttons"},"Basic Buttons"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function BasicButtons() {\n  const gridItem = getGridItemProps({ colSpan: 2 })\n\n  return (\n    <div {...getGridProps({ cols: 12, gap: 8 })}>\n      <div {...gridItem}>\n        <button {...getButtonProps().button}>Action</button>\n      </div>\n\n      <div {...gridItem}>\n        <button {...getButtonProps({ sentiment: 'default' }).button}>\n          Default\n        </button>\n      </div>\n\n      <div {...gridItem}>\n        <button {...getButtonProps({ sentiment: 'danger' }).button}>\n          Danger\n        </button>\n      </div>\n\n      <div {...gridItem}>\n        <button {...getButtonProps({ usage: 'outline' }).button}>\n          Outline\n        </button>\n      </div>\n\n      <div {...gridItem}>\n        <button {...getButtonProps({ usage: 'text' }).button}>Text</button>\n      </div>\n\n      <div {...gridItem}>\n        <button {...getButtonProps({ disabled: true }).button}>Disabled</button>\n      </div>\n    </div>\n  )\n}\n")),(0,i.kt)("h3",{id:"outline-buttons"},"Outline Buttons"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function OutlineButtons() {\n  const gridItem = getGridItemProps({ colSpan: 2 })\n\n  return (\n    <div {...getGridProps({ cols: 12, gap: 8 })}>\n      <div {...gridItem}>\n        <button {...getButtonProps({ usage: 'outline' }).button}>Action</button>\n      </div>\n\n      <div {...gridItem}>\n        <button\n          {...getButtonProps({ sentiment: 'default', usage: 'outline' }).button}\n        >\n          Default\n        </button>\n      </div>\n\n      <div {...gridItem}>\n        <button\n          {...getButtonProps({ sentiment: 'danger', usage: 'outline' }).button}\n        >\n          Danger\n        </button>\n      </div>\n\n      <div {...gridItem}>\n        <button\n          {...getButtonProps({ usage: 'outline', disabled: true }).button}\n        >\n          Disabled\n        </button>\n      </div>\n    </div>\n  )\n}\n")),(0,i.kt)("h3",{id:"text-buttons"},"Text Buttons"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function OutlineButtons() {\n  const gridItem = getGridItemProps({ colSpan: 2 })\n\n  return (\n    <div {...getGridProps({ cols: 12, gap: 8 })}>\n      <div {...gridItem}>\n        <button {...getButtonProps({ usage: 'text' }).button}>Action</button>\n      </div>\n\n      <div {...gridItem}>\n        <button\n          {...getButtonProps({ sentiment: 'default', usage: 'text' }).button}\n        >\n          Default\n        </button>\n      </div>\n\n      <div {...gridItem}>\n        <button\n          {...getButtonProps({ sentiment: 'danger', usage: 'text' }).button}\n        >\n          Danger\n        </button>\n      </div>\n\n      <div {...gridItem}>\n        <button {...getButtonProps({ usage: 'text', disabled: true }).button}>\n          Disabled\n        </button>\n      </div>\n    </div>\n  )\n}\n")),(0,i.kt)("h3",{id:"button-with-icon"},"Button with icon"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function ButtonWithIcon() {\n  const gridItem = getGridItemProps({ colSpan: 3 })\n  const { button, iconOptions } = getButtonProps({\n    icon: 'start',\n  })\n  const { button: trailButton } = getButtonProps({\n    icon: 'end',\n  })\n\n  return (\n    <div {...getGridProps({ cols: 12, gap: 16 })}>\n      <div {...gridItem}>\n        <button {...button}>\n          <PlaceholderIcon {...getIconProps(iconOptions)} />\n          Leading icon\n        </button>\n      </div>\n\n      <div {...gridItem}>\n        <button {...trailButton}>\n          Trailing icon\n          <PlaceholderIcon {...getIconProps(iconOptions)} />\n        </button>\n      </div>\n    </div>\n  )\n}\n")),(0,i.kt)("h3",{id:"sizes"},"Sizes"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function ButtonSizes() {\n  const gridItem = getGridItemProps({ colSpan: 2 })\n\n  return (\n    <div\n      data-site-override=\"alignGridCenter\"\n      {...getGridProps({ cols: 12, gap: 16 })}\n    >\n      <div {...gridItem}>\n        <button {...getButtonProps({ size: 'm' }).button}>Medium</button>\n      </div>\n\n      <div {...gridItem}>\n        <button {...getButtonProps({ size: 'l' }).button}>\n          Large (default)\n        </button>\n      </div>\n    </div>\n  )\n}\n")),(0,i.kt)("h4",{id:"size-mapping"},"Size Mapping"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Button size rules."',title:'"Button',size:!0,'rules."':!0},"{\n  m: 'Use in condensed areas where the default size is too large.',\n  l: 'Should be used in most, if not all cases.'\n}\n")),(0,i.kt)("h2",{id:"reference"},"Reference"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"getButtonProps(options?: ButtonOptions)\n")),(0,i.kt)("h3",{id:"parameters"},"Parameters"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"interface ButtonOptions {\n  classNames?: string[]\n  disabled?: boolean\n  sentiment?: 'default' | 'action' | 'danger'\n  usage?: 'filled' | 'outline' | 'text'\n  size?: 'm' | 'l'\n  icon?: 'start' | 'end'\n}\n")),(0,i.kt)("h3",{id:"returns"},"Returns"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"An Object matching the ",(0,i.kt)("a",{parentName:"li",href:"#anatomy"},"Anatomy")," containing ",(0,i.kt)("inlineCode",{parentName:"li"},"className")," and a11y properties relevant to each element/section including an unused class consisting of the naming pattern ",(0,i.kt)("inlineCode",{parentName:"li"},"pando-btn"),"."),(0,i.kt)("li",{parentName:"ol"},"An ",(0,i.kt)("inlineCode",{parentName:"li"},"iconOptions")," Object to use as the parameters for the Icon API.")),(0,i.kt)("h2",{id:"behavior"},"Behavior"),(0,i.kt)("h3",{id:"patterns"},"Patterns"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do")," use the Button for an actionable event needed from the user."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't")," use the Button for navigation or styled links. Instead use the TextLink component."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do")," keep Button usage minimal within an area."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't")," use more than three Buttons in a single area."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do")," space Buttons apart by 16px (1rem)."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't")," space Buttons apart greater or less than 16px (1rem)."),(0,i.kt)("h3",{id:"sentiment"},"Sentiment"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do"),' use the "action" sentiment for all use cases where possible.'),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't"),' use the "default" sentiment ',(0,i.kt)("em",{parentName:"p"},"unless")," it is a ",(0,i.kt)("strong",{parentName:"p"},"last resort"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do"),' use the "danger" sentiment for cancel or destructive actions.'),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't"),' use the "default" sentiment for cancel or destructive actions.'),(0,i.kt)("h3",{id:"usage-1"},"Usage"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do"),' use the "outline" usage for a ',(0,i.kt)("strong",{parentName:"p"},"lower priority alternative"),' use case to the "default" sentiment.'),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't"),' use the "outline" usage for cancel or destructive actions.'),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do"),' use the "text" usage for the ',(0,i.kt)("strong",{parentName:"p"},"lowest")," priority action."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't"),' use the "text" usage as a high-priority action.'),(0,i.kt)("h3",{id:"sizing"},"Sizing"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do")," use the default size for all use cases where possible of the Button."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't"),' use the "m" size ',(0,i.kt)("em",{parentName:"p"},"unless")," it is a ",(0,i.kt)("strong",{parentName:"p"},"last resort"),"."),(0,i.kt)("h2",{id:"accessbility"},"Accessbility"),(0,i.kt)("p",null,"The Pando Button, and Icon APIs combined with semantic HTML allow the Button to be fully accessible and screen-readable."))}d.isMDXComponent=!0},71397:function(t,n,e){e.d(n,{a:function(){return c},g:function(){return l}});var o=e(1801),i=e(23909),a=e(31519);const r="gridCSS-module_gridContainer__sQmao",s="gridCSS-module_gridItem__nVMyV";(0,a.s)(".gridCSS-module_gridContainer__sQmao{display:grid;width:100%}.gridCSS-module_gridItem__nVMyV{min-width:0}");const u="pando-grid";function l(t){const n=(0,i.g)(t);return{...(0,i.c)(n),...(0,o.c)(u,r,...n.classNames)}}function c(t){const n=(0,i.a)(t);return{...(0,i.b)(n),...(0,o.c)(`${u}-item`,s,...n.classNames)}}},23909:function(t,n,e){e.d(n,{a:function(){return a},b:function(){return s},c:function(){return r},g:function(){return i}});const o={6:.375,8:.5,12:.75,16:1,32:2};function i(t){return{classNames:(null==t?void 0:t.classNames)??[],cols:(null==t?void 0:t.cols)??12,gap:(null==t?void 0:t.gap)??16,rows:(null==t?void 0:t.rows)??1}}function a(t){return{classNames:(null==t?void 0:t.classNames)??[],colSpan:(null==t?void 0:t.colSpan)??12,rowSpan:(null==t?void 0:t.rowSpan)??null}}function r(t){return{style:{gridTemplateRows:`repeat(${t.rows}, 1fr)`,gridTemplateColumns:`repeat(${t.cols}, 1fr)`,gap:`${o[t.gap]}rem`}}}function s(t){const{colSpan:n,rowSpan:e}=t;return e?{style:{gridArea:`span ${e} / span ${n} / span ${e} / span ${n}`}}:{style:{gridColumn:`span ${n} / span ${n}`}}}}}]);