"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3113],{15566:function(e,t,n){n.d(t,{dS:function(){return m},fK:function(){return o},C9:function(){return d},ZP:function(){return c}});var a=n(45721),r=n(84140),i="linkList_sLwJ",s="linkItem_ESvF";function l(e){return a.createElement("li",{className:s},a.createElement(r.Z,e,e.children))}function o(e){return a.createElement(l,{href:e.href},e.children??"View on Github")}function m(e){return a.createElement(l,{href:e.href},"View on Figma")}function d(e){return a.createElement("ul",{className:i},e.children)}function c(e){const{figma:t,github:n}=e;return a.createElement("ul",{className:i},n&&a.createElement(o,{href:n}),t&&a.createElement(m,{href:t}))}},45945:function(e,t,n){n(45721)},84140:function(e,t,n){n.d(t,{Z:function(){return o}});var a=n(45721),r=n(32662),i=n(51596),s=n(44070),l=n(42949);function o(e){const{href:t}=e,n=(0,i.L)({ariaHidden:!0,size:"s"}),o=t.includes("github")?s.Z:l.Z;return a.createElement(r.TextLink,e,a.createElement(o,n),e.children)}},88591:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return l},default:function(){return p},frontMatter:function(){return s},metadata:function(){return o},toc:function(){return d}});var a=n(81648),r=(n(45721),n(70167)),i=n(15566);n(45945);const s={tags:["field","forms","error messages"],title:"Field Messages"},l=void 0,o={unversionedId:"reference/components/field-message",id:"reference/components/field-message",title:"Field Messages",description:"Used to display a helper text message for a form field.",source:"@site/docs/reference/components/field-message.mdx",sourceDirName:"reference/components",slug:"/reference/components/field-message",permalink:"/docs/reference/components/field-message",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/components/field-message.mdx",tags:[{label:"field",permalink:"/docs/tags/field"},{label:"forms",permalink:"/docs/tags/forms"},{label:"error messages",permalink:"/docs/tags/error-messages"}],version:"current",lastUpdatedBy:"Casey Baggz",frontMatter:{tags:["field","forms","error messages"],title:"Field Messages"},sidebar:"reference",previous:{title:"Confirm Dialog",permalink:"/docs/reference/components/confirm-dialog"},next:{title:"Fieldset",permalink:"/docs/reference/components/fieldset"}},m={},d=[{value:"Import",id:"import",level:2},{value:"Anatomy",id:"anatomy",level:2},{value:"Usage",id:"usage",level:2},{value:"Helper Message",id:"helper-message",level:3},{value:"Error Message",id:"error-message",level:3},{value:"Behavior",id:"behavior",level:2},{value:"Patterns",id:"patterns",level:3},{value:"Usage",id:"usage-1",level:3},{value:"API",id:"api",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Accessibility",id:"accessibility",level:2}],c={toc:d};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",{className:"size-xxl"},"Used to display a helper text message for a form field."),(0,r.kt)(i.ZP,{github:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/FieldMessage",figma:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsLinkBar"}),(0,r.kt)("h2",{id:"import"},"Import"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { FieldMessage, ErrorMessage } from '@pluralsight/react'\n")),(0,r.kt)("h2",{id:"anatomy"},"Anatomy"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Form Control"),(0,r.kt)("li",{parentName:"ol"},"Label"),(0,r.kt)("li",{parentName:"ol"},"Input"),(0,r.kt)("li",{parentName:"ol"},"Message")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("admonition",{title:"Form Control manages state",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"The Form Control was designed to manage the state of the field you are using it on instead of managing it yourself in all the sister components.")),(0,r.kt)("h3",{id:"helper-message"},"Helper Message"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function EmailField() {\n  const [email, setEmail] = useState(\'\')\n\n  function handleChange(e) {\n    setEmail(e.target.value)\n  }\n\n  return (\n    <FormControlProvider required={true}>\n      <Label htmlFor="email">Email</Label>\n      <Input\n        describedBy="email:error"\n        id="email"\n        name="email"\n        onChange={handleChange}\n        placeholder="email@example.com"\n        value={email}\n      />\n      <FieldMessage id="email:help">\n        Enter the email you want associated with your account.\n      </FieldMessage>\n      <ErrorMessage id="email:error">\n        An email address is required.\n      </ErrorMessage>\n    </FormControlProvider>\n  )\n}\n')),(0,r.kt)("h3",{id:"error-message"},"Error Message"),(0,r.kt)("admonition",{title:"Easy to understand invalid states",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"To display an invalid state that is easy to understand for the user, pass the ",(0,r.kt)("inlineCode",{parentName:"p"},"fieldOptions")," to your ",(0,r.kt)("strong",{parentName:"p"},"Error Message")," component and add a WarningTriangleFilled ",(0,r.kt)("a",{parentName:"p",href:"/docs/reference/general/icons"},"Icon"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function ErrorEmailField() {\n  const [email, setEmail] = useState(\'\')\n\n  function handleChange(e) {\n    setEmail(e.target.value)\n  }\n\n  return (\n    <FormControlProvider required={true} invalid={!email}>\n      <Label htmlFor="email">Email</Label>\n      <Input\n        describedBy="email:error"\n        id="email"\n        name="email"\n        onChange={handleChange}\n        placeholder="email@example.com"\n        value={email}\n      />\n      <FieldMessage id="email:help">\n        Enter the email you want associated with your account.\n      </FieldMessage>\n      <ErrorMessage id="email:error">\n        Please provide an email address.\n      </ErrorMessage>\n    </FormControlProvider>\n  )\n}\n')),(0,r.kt)("h2",{id:"behavior"},"Behavior"),(0,r.kt)("h3",{id:"patterns"},"Patterns"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Do")," stack form fields vertically when displaying a set."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Don't")," use more than one form field within the same row."),(0,r.kt)("h3",{id:"usage-1"},"Usage"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Do")," use the Field Message on all form field to help provide context where necessary."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Don't")," use the Error Message unless there is a field that has an invalid state."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Do")," use the Error Message on all form fields that are invalid."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Don't")," eliminate the Error Message from an invalid form field, the Error Message is required to help provide visual context and a11y."),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"interface FieldMessageOptions {\n  id: string\n  message: string\n}\n")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"id: string")," - A unique id for the Field Message."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"message: string")," - The message content to display.")),(0,r.kt)("h2",{id:"accessibility"},"Accessibility"),(0,r.kt)("p",null,"The Pando Field & Error Message APIs combined with semantic HTML allow the Field & Error Messages to be fully accessible and screen-readable."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"id")," prop is passed to the ",(0,r.kt)("inlineCode",{parentName:"li"},"aria-describedby")," prop on the Input component.")))}p.isMDXComponent=!0}}]);