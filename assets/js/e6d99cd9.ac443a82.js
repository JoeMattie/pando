"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3573],{46047:function(e,r,n){const t=n(86521);r.Z=function(e){return(0,t.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",role:"img",fill:"currentColor",className:"ps-icon-svg","aria-label":"figma icon",...e,children:(0,t.jsx)("path",{fillRule:"evenodd",d:"M4.25 5.5A4.25 4.25 0 0 1 8.5 1.25h7A4.25 4.25 0 0 1 17.912 9a4.25 4.25 0 1 1-5.162 6.74v3.76A4.25 4.25 0 1 1 6.088 16a4.245 4.245 0 0 1-1.838-3.5c0-1.452.728-2.733 1.838-3.5A4.245 4.245 0 0 1 4.25 5.5Zm4.25 9.75h2.75v-5.5H8.5a2.75 2.75 0 1 0 0 5.5Zm2.75 1.5H8.5a2.75 2.75 0 1 0 2.75 2.75v-2.75Zm7-11.25a2.75 2.75 0 0 1-2.75 2.75h-2.75v-5.5h2.75a2.75 2.75 0 0 1 2.75 2.75ZM15.5 9.75a2.75 2.75 0 1 0 0 5.5 2.75 2.75 0 0 0 0-5.5Zm-7-1.5h2.75v-5.5H8.5a2.75 2.75 0 0 0 0 5.5Z",clipRule:"evenodd"})})}},36482:function(e,r,n){const t=n(86521);r.Z=function(e){return(0,t.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg","aria-label":"github logo",viewBox:"0 0 24 24",role:"img",fill:"currentColor",className:"ps-icon-svg",...e,children:(0,t.jsx)("path",{fillRule:"evenodd",d:"M2 12c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12a10 10 0 0 0-20 0Z",clipRule:"evenodd"})})}},15566:function(e,r,n){n.d(r,{dS:function(){return c},fK:function(){return l},C9:function(){return p},ZP:function(){return u}});var t=n(45721),s=n(84140),a="linkList_sLwJ",i="linkItem_ESvF";function o(e){return t.createElement("li",{className:i},t.createElement(s.Z,e,e.children))}function l(e){return t.createElement(o,{href:e.href},e.children??"View on Github")}function c(e){return t.createElement(o,{href:e.href},"View on Figma")}function p(e){return t.createElement("ul",{className:a},e.children)}function u(e){const{figma:r,github:n}=e;return t.createElement("ul",{className:a},n&&t.createElement(l,{href:n}),r&&t.createElement(c,{href:r}))}},45945:function(e,r,n){n(45721)},84140:function(e,r,n){n.d(r,{Z:function(){return l}});var t=n(45721),s=n(11570),a=n(43192),i=n(36482),o=n(46047);function l(e){const{href:r}=e,n=(0,a.L)({ariaHidden:!0,size:"s"}),l=r.includes("github")?i.Z:o.Z;return t.createElement(s.h,e,t.createElement(l,n),e.children)}},38270:function(e,r,n){n.r(r),n.d(r,{assets:function(){return c},contentTitle:function(){return o},default:function(){return g},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p}});var t=n(81648),s=(n(45721),n(70167)),a=n(15566);n(45945);const i={tags:["async loading","inline loading"],title:"Circular Progress"},o=void 0,l={unversionedId:"reference/components/circular-progress",id:"version-0.4.1/reference/components/circular-progress",title:"Circular Progress",description:"Used to display the progress status for a task that takes a long time or",source:"@site/versioned_docs/version-0.4.1/reference/components/circular-progress.mdx",sourceDirName:"reference/components",slug:"/reference/components/circular-progress",permalink:"/docs/reference/components/circular-progress",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/versioned_docs/version-0.4.1/reference/components/circular-progress.mdx",tags:[{label:"async loading",permalink:"/docs/tags/async-loading"},{label:"inline loading",permalink:"/docs/tags/inline-loading"}],version:"0.4.1",lastUpdatedBy:"Casey Baggz",frontMatter:{tags:["async loading","inline loading"],title:"Circular Progress"},sidebar:"reference",previous:{title:"Checkbox",permalink:"/docs/reference/components/checkbox"},next:{title:"Confirm Dialog",permalink:"/docs/reference/components/confirm-dialog"}},c={},p=[{value:"Import",id:"import",level:2},{value:"Anatomy",id:"anatomy",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Circular Progress",id:"basic-circular-progress",level:3},{value:"Indeterminate (loading) State",id:"indeterminate-loading-state",level:3},{value:"Sizes",id:"sizes",level:3},{value:"Size Mapping",id:"size-mapping",level:4},{value:"Reference",id:"reference",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Behavior",id:"behavior",level:2},{value:"Loading",id:"loading",level:3},{value:"Text",id:"text",level:3},{value:"Sizing",id:"sizing",level:3},{value:"Accessibility",id:"accessibility",level:2}],u={toc:p};function g(e){let{components:r,...n}=e;return(0,s.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("p",{className:"size-xxl"},"Used to display the progress status for a task that takes a long time or consists of several steps within a page."),(0,s.kt)("admonition",{title:"Not for page loading",type:"caution"},(0,s.kt)("p",{parentName:"admonition"},"Circular Progress ",(0,s.kt)("strong",{parentName:"p"},"should not be used for initial page loading"),". Check out the ",(0,s.kt)("a",{parentName:"p",href:"/docs/learn/learn-pando/design-patterns/page-loading"},"Page Loading")," design pattern for more information.")),(0,s.kt)(a.ZP,{github:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/CircularProgress",figma:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsLinkBar"}),(0,s.kt)("h2",{id:"import"},"Import"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"import { getCircularProgressProps } from '@pluralsight/headless-styles'\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"interface CircularProgressOptions {\n  ariaLabel: string\n  kind?: 'determinate' | 'indeterminate'\n  max?: number\n  min?: number\n  now?: number\n  size?: 'xs' | 'm'\n}\n\ngetCircularProgressProps(options?: CircularProgressOptions)\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"import type { CircularProgressOptions } from '@pluralsight/headless-styles/types'\n")),(0,s.kt)("h2",{id:"anatomy"},"Anatomy"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Container"),(0,s.kt)("li",{parentName:"ol"},"SVG Box"),(0,s.kt)("li",{parentName:"ol"},"Base Circle"),(0,s.kt)("li",{parentName:"ol"},"Now Cirlce"),(0,s.kt)("li",{parentName:"ol"},"Label")),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("h3",{id:"basic-circular-progress"},"Basic Circular Progress"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function CircularProgress() {\n  const progressProps = getCircularProgressProps({\n    ariaLabel: 'Example progress',\n    now: 50,\n  })\n\n  return (\n    <div {...progressProps.containerProps}>\n      <svg {...progressProps.svgBoxProps}>\n        <circle {...progressProps.baseCircleProps} />\n        <circle {...progressProps.nowCircleProps} />\n      </svg>\n    </div>\n  )\n}\n")),(0,s.kt)("h3",{id:"indeterminate-loading-state"},"Indeterminate (loading) State"),(0,s.kt)("p",null,"This state should be used when the user needs updated content ",(0,s.kt)("strong",{parentName:"p"},"within a page")," that has already been loaded."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function CircularProgress() {\n  const progressProps = getCircularProgressProps({\n    ariaLabel: 'Loading new courses.',\n    kind: 'indeterminate',\n  })\n\n  return (\n    <div {...progressProps.containerProps}>\n      <svg {...progressProps.svgBoxProps}>\n        <circle {...progressProps.baseCircleProps} />\n        <circle {...progressProps.nowCircleProps} />\n      </svg>\n    </div>\n  )\n}\n")),(0,s.kt)("h3",{id:"sizes"},"Sizes"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function CircularProgress() {\n  const xsProgressProps = getCircularProgressProps({\n    ariaLabel: 'Xtra small circular progress',\n    now: 25,\n    size: 'xs',\n  })\n  const mProgressProps = getCircularProgressProps({\n    ariaLabel: 'Xtra small circular progress',\n    now: 50,\n    size: 'm',\n  })\n\n  return (\n    <div\n      data-site-override=\"alignGridCenter\"\n      {...getGridProps({ colSpan: 12, gap: 16 })}\n    >\n      <div {...getGridItemProps({ colSpan: 1 })}>\n        <div {...xsProgressProps.containerProps}>\n          <svg {...xsProgressProps.svgBoxProps}>\n            <circle {...xsProgressProps.baseCircleProps} />\n            <circle {...xsProgressProps.nowCircleProps} />\n          </svg>\n        </div>\n      </div>\n\n      <div {...getGridItemProps({ colSpan: 2 })}>\n        <div {...mProgressProps.containerProps}>\n          <svg {...mProgressProps.svgBoxProps}>\n            <circle {...mProgressProps.baseCircleProps} />\n            <circle {...mProgressProps.nowCircleProps} />\n          </svg>\n        </div>\n      </div>\n    </div>\n  )\n}\n")),(0,s.kt)("h4",{id:"size-mapping"},"Size Mapping"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Circular Progress size rules."',title:'"Circular',Progress:!0,size:!0,'rules."':!0},"{\n  xs: 'Should only be used when the default size (M) is too large.',\n  m: 'Should be used in most, if not all cases.'\n}\n")),(0,s.kt)("h2",{id:"reference"},"Reference"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"getCircularProps(options?: CircularProgressOptions)\n")),(0,s.kt)("h3",{id:"parameters"},"Parameters"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"options"),": An ariaLabel property that accepts a String value to add Accessibility support to the elements. An optional kind property that accepts a String value of ",(0,s.kt)("inlineCode",{parentName:"li"},"'determinate' | 'indeterminate'")," to determine the animation of the SVG progress elements. Optional min, max, or now properties that accept a Number value to set the parameters for styling the progress amount. An optional size property that accepts a String value of ",(0,s.kt)("inlineCode",{parentName:"li"},"'xs' | 'm'")," to determine the size styling of the Circular Progress.")),(0,s.kt)("h3",{id:"returns"},"Returns"),(0,s.kt)("p",null,"An Object matching the ",(0,s.kt)("a",{parentName:"p",href:"#anatomy"},"Anatomy")," containing ",(0,s.kt)("inlineCode",{parentName:"p"},"className")," and a11y properties relevant to each element/section."),(0,s.kt)("h2",{id:"behavior"},"Behavior"),(0,s.kt)("h3",{id:"loading"},"Loading"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Do")," use Circular Progress to display an update of information to a ",(0,s.kt)("strong",{parentName:"p"},"specific part of a previously loaded page"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Don't")," use the Circular Progress to show page load progress. Instead, use a Skeleton."),(0,s.kt)("h3",{id:"text"},"Text"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Do")," use text describing the progress in close proximity."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Don't")," use text or other elements within the Circular Progress."),(0,s.kt)("h3",{id:"sizing"},"Sizing"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Do")," use the default size for all use cases where possible of the Circular Progress."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Don't"),' use the "xs" size ',(0,s.kt)("em",{parentName:"p"},"unless")," it is a ",(0,s.kt)("strong",{parentName:"p"},"last resort"),"."),(0,s.kt)("h2",{id:"accessibility"},"Accessibility"),(0,s.kt)("p",null,"The Pando Circular Progress combined with semantic HTML allow the Circular Progress to be fully accessible and screen-readable."))}g.isMDXComponent=!0}}]);