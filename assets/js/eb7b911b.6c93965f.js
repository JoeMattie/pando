"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6952],{3158:function(n,e,t){const o=t(86521);e.Z=function(n){return(0,o.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",role:"img",fill:"currentColor",className:"ps-icon-svg","aria-label":"figma icon",...n,children:(0,o.jsx)("path",{fillRule:"evenodd",d:"M4.25 5.5A4.25 4.25 0 0 1 8.5 1.25h7A4.25 4.25 0 0 1 17.912 9a4.25 4.25 0 1 1-5.162 6.74v3.76A4.25 4.25 0 1 1 6.088 16a4.245 4.245 0 0 1-1.838-3.5c0-1.452.728-2.733 1.838-3.5A4.245 4.245 0 0 1 4.25 5.5Zm4.25 9.75h2.75v-5.5H8.5a2.75 2.75 0 1 0 0 5.5Zm2.75 1.5H8.5a2.75 2.75 0 1 0 2.75 2.75v-2.75Zm7-11.25a2.75 2.75 0 0 1-2.75 2.75h-2.75v-5.5h2.75a2.75 2.75 0 0 1 2.75 2.75ZM15.5 9.75a2.75 2.75 0 1 0 0 5.5 2.75 2.75 0 0 0 0-5.5Zm-7-1.5h2.75v-5.5H8.5a2.75 2.75 0 0 0 0 5.5Z",clipRule:"evenodd"})})}},44651:function(n,e,t){const o=t(86521);e.Z=function(n){return(0,o.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg","aria-label":"github logo",viewBox:"0 0 24 24",role:"img",fill:"currentColor",className:"ps-icon-svg",...n,children:(0,o.jsx)("path",{fillRule:"evenodd",d:"M2 12c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12a10 10 0 0 0-20 0Z",clipRule:"evenodd"})})}},15566:function(n,e,t){t.d(e,{dS:function(){return c},fK:function(){return p},C9:function(){return u},ZP:function(){return d}});var o=t(81648),a=t(45721),i=t(39063),l=t(84140),r="grid_cC7H";function s(n){return a.createElement("li",(0,i.a)({colSpan:3}),a.createElement(l.Z,n,n.children))}function p(n){return a.createElement(s,{href:n.href},n.children??"View on Github")}function c(n){return a.createElement(s,{href:n.href},"View on Figma")}function u(n){const{className:e,...t}=(0,i.g)({cols:12,gap:8});return a.createElement("ul",(0,o.Z)({className:`${e} ${r}`},t),n.children)}function d(n){const{figma:e,github:t}=n,{className:l,...s}=(0,i.g)({cols:12,gap:8});return a.createElement("ul",(0,o.Z)({className:`${l} ${r}`},s),t&&a.createElement(p,{href:t}),e&&a.createElement(c,{href:e}))}},45945:function(n,e,t){t(45721)},84140:function(n,e,t){t.d(e,{Z:function(){return s}});var o=t(45721),a=t(55500),i=t(99752),l=t(44651),r=t(3158);function s(n){const{href:e}=n,t=(0,i.g)({ariaHidden:!0,size:"s"}),s=e.includes("github")?l.Z:r.Z;return o.createElement(a.h,n,o.createElement(s,t),n.children)}},5062:function(n,e,t){t.r(e),t.d(e,{assets:function(){return p},contentTitle:function(){return r},default:function(){return d},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var o=t(81648),a=(t(45721),t(70167)),i=t(15566);t(45945);const l={tags:["lazy loading","large lists"],title:"Pagination"},r=void 0,s={unversionedId:"reference/components/pagination",id:"reference/components/pagination",title:"Pagination",description:"Used to navigate between large lists of data.",source:"@site/docs/reference/components/pagination.mdx",sourceDirName:"reference/components",slug:"/reference/components/pagination",permalink:"/docs/next/reference/components/pagination",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/components/pagination.mdx",tags:[{label:"lazy loading",permalink:"/docs/next/tags/lazy-loading"},{label:"large lists",permalink:"/docs/next/tags/large-lists"}],version:"current",lastUpdatedBy:"Casey Baggz",frontMatter:{tags:["lazy loading","large lists"],title:"Pagination"},sidebar:"reference",previous:{title:"Modal",permalink:"/docs/next/reference/components/modal"},next:{title:"Popover",permalink:"/docs/next/reference/components/popover"}},p={},c=[{value:"Import",id:"import",level:2},{value:"Anatomy",id:"anatomy",level:2},{value:"Usage",id:"usage",level:2},{value:"Show More Example",id:"show-more-example",level:3},{value:"Newer/Older Example",id:"newerolder-example",level:3},{value:"Pagination Bar",id:"pagination-bar",level:3},{value:"Smaller Bar with Icon Buttons",id:"smaller-bar-with-icon-buttons",level:4},{value:"Reference",id:"reference",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Behavior",id:"behavior",level:2},{value:"Patterns",id:"patterns",level:3},{value:"Accessibility",id:"accessibility",level:2}],u={toc:c};function d(n){let{components:e,...t}=n;return(0,a.kt)("wrapper",(0,o.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",{className:"size-xxl"},"Used to navigate between large lists of data."),(0,a.kt)(i.ZP,{github:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/Pagination",figma:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsLinkBar"}),(0,a.kt)("h2",{id:"import"},"Import"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import { getPaginationProps } from '@pluralsight/headless-styles'\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"interface PaginationOptions {\n  size?: 'm' | 'l'\n}\n\ngetPaginationProps(options?: PaginationOptions)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import type { PaginationOptions } from '@pluralsight/headless-styles/types'\n")),(0,a.kt)("h2",{id:"anatomy"},"Anatomy"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Container"),(0,a.kt)("li",{parentName:"ol"},"Text (optional)"),(0,a.kt)("li",{parentName:"ol"},"Select (optional)"),(0,a.kt)("li",{parentName:"ol"},"Button Group (optional)"),(0,a.kt)("li",{parentName:"ol"},"Button(s)")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("h3",{id:"show-more-example"},"Show More Example"),(0,a.kt)("p",null,"For user opt-in lazy-loading approach."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function ShowMoreButton(props) {\n  const styles = getPaginationProps()\n  const buttonProps = getButtonProps(styles.buttonOptions)\n\n  return (\n    <button {...buttonProps.button} onClick={props.handleFetchMoreData}>\n      Show more\n    </button>\n  )\n}\n")),(0,a.kt)("h3",{id:"newerolder-example"},"Newer/Older Example"),(0,a.kt)("p",null,"For a modern pagination approach which displays the current data first."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function PaginationButtons(props) {\n  const styles = getPaginationProps()\n  const buttonProps = getButtonProps(styles.buttonOptions)\n\n  return (\n    <div {...styles.buttonGroup}>\n      <button\n        {...buttonProps.button}\n        disabled={props.noNewData}\n        onClick={props.handleFetchNewerData}\n      >\n        Newer\n      </button>\n      <button\n        {...buttonProps.button}\n        disabled={props.noOldData}\n        onClick={props.handleFetchOlderData}\n      >\n        Older\n      </button>\n    </div>\n  )\n}\n")),(0,a.kt)("h3",{id:"pagination-bar"},"Pagination Bar"),(0,a.kt)("p",null,"For the allowing the most options to the user, but only ideal for Desktop layouts."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function PaginationBar() {\n  const [rowOption, setRowOption] = useState('')\n  const styles = getPaginationProps()\n  const selectStyles = getSelectProps({\n    ...styles.selectOptions,\n    id: 'row-count',\n    name: 'row_count',\n    value: rowOption,\n  })\n  const iconProps = getIconProps(selectStyles.iconOptions)\n  const buttonProps = getButtonProps(styles.buttonOptions)\n\n  function handleSelectChange(e) {\n    setRowOption(e.target.value)\n  }\n\n  return (\n    <div {...styles.container}>\n      <span {...styles.text}>\n        <strong>1-25</strong> of 1,2345\n      </span>\n      <div {...selectStyles.fieldWrapper}>\n        <div {...selectStyles.selectWrapper}>\n          <select\n            {...selectStyles.select}\n            onChange={handleSelectChange}\n            style={{ marginTop: 'initial' }}\n          >\n            <option value=\"5\">5 Rows</option>\n            <option value=\"10\">10 Rows</option>\n            <option value=\"25\">25 Rows</option>\n          </select>\n          <span {...selectStyles.iconWrapper}>\n            <ChevronDownIcon {...iconProps} />\n          </span>\n        </div>\n      </div>\n      <div {...styles.buttonGroup}>\n        <button {...buttonProps.button} disabled>\n          Newer\n        </button>\n        <button {...buttonProps.button}>Older</button>\n      </div>\n    </div>\n  )\n}\n")),(0,a.kt)("h4",{id:"smaller-bar-with-icon-buttons"},"Smaller Bar with Icon Buttons"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function PaginationBar() {\n  const [rowOption, setRowOption] = useState('')\n  const styles = getPaginationProps({ size: 'm' })\n  const selectStyles = getSelectProps({\n    ...styles.selectOptions,\n    id: 'row-count',\n    name: 'row_count',\n    value: rowOption,\n  })\n  const iconProps = getIconProps(selectStyles.iconOptions)\n  const buttonProps = getIconButtonProps(styles.iconButtonOptions)\n  const buttonIconProps = getIconProps(buttonProps.iconOptions)\n\n  function handleSelectChange(e) {\n    setRowOption(e.target.value)\n  }\n\n  return (\n    <div {...styles.container}>\n      <span {...styles.text}>\n        <strong>1-25</strong> of 1,2345\n      </span>\n      <div {...selectStyles.fieldWrapper}>\n        <div {...selectStyles.selectWrapper}>\n          <select\n            {...selectStyles.select}\n            onChange={handleSelectChange}\n            style={{ marginTop: 'initial' }}\n          >\n            <option value=\"5\">5 Rows</option>\n            <option value=\"10\">10 Rows</option>\n            <option value=\"25\">25 Rows</option>\n          </select>\n          <span {...selectStyles.iconWrapper}>\n            <ChevronDownIcon {...iconProps} />\n          </span>\n        </div>\n      </div>\n      <div {...styles.buttonGroup}>\n        <button {...buttonProps.button} disabled>\n          <CaretLeftIcon {...buttonIconProps} />\n        </button>\n        <button {...buttonProps.button}>\n          <CaretRightIcon {...buttonIconProps} />\n        </button>\n      </div>\n    </div>\n  )\n}\n")),(0,a.kt)("h2",{id:"reference"},"Reference"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getPaginationProps(options?: PaginationOptions)\n")),(0,a.kt)("h3",{id:"parameters"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"options"),": A size property accepting ",(0,a.kt)("inlineCode",{parentName:"li"},"'m' | 'l'")," to determine sizes for the Pagination elements.")),(0,a.kt)("h3",{id:"returns"},"Returns"),(0,a.kt)("p",null,"An Object matching the ",(0,a.kt)("a",{parentName:"p",href:"#anatomy"},"Anatomy")," containing ",(0,a.kt)("inlineCode",{parentName:"p"},"className")," and a11y properties relevant to each element/section. Also returns ",(0,a.kt)("inlineCode",{parentName:"p"},"buttonOptions"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"selectOptions"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"iconButtonOptions")," to be passed into ",(0,a.kt)("inlineCode",{parentName:"p"},"getButtonProps"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"getSelectProps"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"getIconButtonProps"),", respectively."),(0,a.kt)("h2",{id:"behavior"},"Behavior"),(0,a.kt)("h3",{id:"patterns"},"Patterns"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Do")," use the Show More Button if you have a simple list that can be lazy-loaded."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Don't")," use the Pagination Bar if you have small amounts of data."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Do")," use the newer/older Buttons if you have a multi-page list."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Don't")," use the newer/older Buttons if you have a small list."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Do")," use the Pagination Bar for a desktop layout."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Don't")," use the Pagination Bar for a mobile layout."),(0,a.kt)("h2",{id:"accessibility"},"Accessibility"),(0,a.kt)("p",null,"The Pando Pagination, Select and Button APIs combined with semantic HTML allow the Pagination to be fully accessible and screen-readable."))}d.isMDXComponent=!0},39063:function(n,e,t){t.d(e,{a:function(){return s},g:function(){return r}});var o=t(59734),a=t(17207),i=t(68824);(0,t(18067).s)(".pando_gridContainer{display:grid;width:100%}.pando_gridItem{min-width:0}");var l="pando-grid";function r(n){var e=(0,i.g)(n),t=(0,i.c)(e);return(0,o._)((0,o._)({},t),a.c.apply(void 0,[l,"pando_gridContainer"].concat((0,o.e)(e.classNames))))}function s(n){var e=(0,i.a)(n),t=(0,i.b)(e);return(0,o._)((0,o._)({},t),a.c.apply(void 0,["".concat(l,"-item"),"pando_gridItem"].concat((0,o.e)(e.classNames))))}},68824:function(n,e,t){t.d(e,{a:function(){return i},b:function(){return r},c:function(){return l},g:function(){return a}});var o={6:.375,8:.5,12:.75,16:1,32:2};function a(n){var e,t,o,a;return{classNames:null!==(e=null==n?void 0:n.classNames)&&void 0!==e?e:[],cols:null!==(t=null==n?void 0:n.cols)&&void 0!==t?t:12,gap:null!==(o=null==n?void 0:n.gap)&&void 0!==o?o:16,rows:null!==(a=null==n?void 0:n.rows)&&void 0!==a?a:1}}function i(n){var e,t,o;return{classNames:null!==(e=null==n?void 0:n.classNames)&&void 0!==e?e:[],colSpan:null!==(t=null==n?void 0:n.colSpan)&&void 0!==t?t:12,rowSpan:null!==(o=null==n?void 0:n.rowSpan)&&void 0!==o?o:null}}function l(n){return{style:{gridTemplateRows:"repeat(".concat(n.rows,", 1fr)"),gridTemplateColumns:"repeat(".concat(n.cols,", 1fr)"),gap:"".concat(o[n.gap],"rem")}}}function r(n){var e=n.colSpan,t=n.rowSpan;return t?{style:{gridArea:"span ".concat(t," / span ").concat(e," / span ").concat(t," / span ").concat(e)}}:{style:{gridColumn:"span ".concat(e," / span ").concat(e)}}}}}]);