"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4455],{46047:function(e,t,a){const n=a(86521);t.Z=function(e){return(0,n.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",role:"img",fill:"currentColor",className:"ps-icon-svg","aria-label":"figma icon",...e,children:(0,n.jsx)("path",{fillRule:"evenodd",d:"M4.25 5.5A4.25 4.25 0 0 1 8.5 1.25h7A4.25 4.25 0 0 1 17.912 9a4.25 4.25 0 1 1-5.162 6.74v3.76A4.25 4.25 0 1 1 6.088 16a4.245 4.245 0 0 1-1.838-3.5c0-1.452.728-2.733 1.838-3.5A4.245 4.245 0 0 1 4.25 5.5Zm4.25 9.75h2.75v-5.5H8.5a2.75 2.75 0 1 0 0 5.5Zm2.75 1.5H8.5a2.75 2.75 0 1 0 2.75 2.75v-2.75Zm7-11.25a2.75 2.75 0 0 1-2.75 2.75h-2.75v-5.5h2.75a2.75 2.75 0 0 1 2.75 2.75ZM15.5 9.75a2.75 2.75 0 1 0 0 5.5 2.75 2.75 0 0 0 0-5.5Zm-7-1.5h2.75v-5.5H8.5a2.75 2.75 0 0 0 0 5.5Z",clipRule:"evenodd"})})}},36482:function(e,t,a){const n=a(86521);t.Z=function(e){return(0,n.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg","aria-label":"github logo",viewBox:"0 0 24 24",role:"img",fill:"currentColor",className:"ps-icon-svg",...e,children:(0,n.jsx)("path",{fillRule:"evenodd",d:"M2 12c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12a10 10 0 0 0-20 0Z",clipRule:"evenodd"})})}},84140:function(e,t,a){a.d(t,{Z:function(){return l}});var n=a(45721),r=a(11570),o=a(43192),i=a(36482),s=a(46047);function l(e){const{href:t}=e,a=(0,o.L)({ariaHidden:!0,size:"s"}),l=t.includes("github")?i.Z:s.Z;return n.createElement(r.h,e,n.createElement(l,a),e.children)}},78882:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return c}});var n=a(81648),r=(a(45721),a(70167)),o=a(84140);const i={tags:["React","Dates","DatePicker"],title:"useAutoFormatDate"},s=void 0,l={unversionedId:"reference/react-hooks/useAutoFormatDate",id:"reference/react-hooks/useAutoFormatDate",title:"useAutoFormatDate",description:"A hook for auto-formatting and validating a text input value to match a short",source:"@site/docs/reference/react-hooks/useAutoFormatDate.mdx",sourceDirName:"reference/react-hooks",slug:"/reference/react-hooks/useAutoFormatDate",permalink:"/docs/next/reference/react-hooks/useAutoFormatDate",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/react-hooks/useAutoFormatDate.mdx",tags:[{label:"React",permalink:"/docs/next/tags/react"},{label:"Dates",permalink:"/docs/next/tags/dates"},{label:"DatePicker",permalink:"/docs/next/tags/date-picker"}],version:"current",lastUpdatedBy:"Casey Baggz",frontMatter:{tags:["React","Dates","DatePicker"],title:"useAutoFormatDate"},sidebar:"reference",previous:{title:"Tooltip",permalink:"/docs/next/reference/components/tooltip"},next:{title:"useEscToClose",permalink:"/docs/next/reference/react-hooks/useEscToClose"}},u={},c=[{value:"Import",id:"import",level:2},{value:"Reference",id:"reference",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"My Dates are showing up incorrectly",id:"my-dates-are-showing-up-incorrectly",level:3}],p={toc:c};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",{className:"size-xxl"},"A hook for auto-formatting and validating a text input value to match a short date."),(0,r.kt)(o.Z,{icon:"github",href:"https://github.com/pluralsight/tva/blob/main/packages/react-utils/src/hooks/useAutoFormatDate.ts",mdxType:"ViewSourceLink"},"View source"),(0,r.kt)("h2",{id:"import"},"Import"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useAutoFormatDate } from '@pluralsight/react'\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"interface Options {\n  pattern?: ['m', 'd', 'Y'] | ['d', 'm', 'Y']\n  value?: string\n}\n\nuseAutoFormatDate(options?: Options)\n")),(0,r.kt)("h2",{id:"reference"},"Reference"),(0,r.kt)("p",null,"Call ",(0,r.kt)("inlineCode",{parentName:"p"},"useAutoFormatDate")," at the top level of your component to provide an automatically formatted date value to your text input:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"showLineNumbers {4,9}",showLineNumbers:!0,"{4,9}":!0},'import { CalendarIcon } from \'@pluralsight/icons\'\n\nfunction DateInput(props) {\n  const inputFormatProps = useAutoFormatDate()\n\n  return (\n    <FormControlProvider>\n      <Input\n        {...inputFormatProps}\n        describedBy="birthdate:help"\n        id="birthdate"\n        name="birthdate"\n        startIcon={CalendarIcon}\n      />\n      <FieldMessage id="birthdate:help">\n        Enter your date of birth in the format MM/DD/YYYY\n      </FieldMessage>\n    </FormControlProvider>\n  )\n}\n')),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),": Object that accepts a ",(0,r.kt)("inlineCode",{parentName:"li"},"pattern")," property that accepts a String Array value of a Date Pattern along with a ",(0,r.kt)("inlineCode",{parentName:"li"},"value")," property that accepts a String to set an ",(0,r.kt)("strong",{parentName:"li"},"initial value"),".")),(0,r.kt)("h3",{id:"returns"},"Returns"),(0,r.kt)("p",null,"An Object containing a ",(0,r.kt)("inlineCode",{parentName:"p"},"value")," property of a ",(0,r.kt)("a",{parentName:"p",href:"https://moment.github.io/luxon/#/formatting?id=presets"},"short date")," String and an ",(0,r.kt)("inlineCode",{parentName:"p"},"onChange")," event handler to attach to your input element."),(0,r.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("h3",{id:"my-dates-are-showing-up-incorrectly"},"My Dates are showing up incorrectly"),(0,r.kt)("p",null,"Make sure you are passing an accepted format option. If you are using Typescript, the types will be available to help prevent this from happening."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Make sure your format option is valid."),(0,r.kt)("li",{parentName:"ol"},"If you are passing in an initial value, make sure it is valid.")))}m.isMDXComponent=!0}}]);