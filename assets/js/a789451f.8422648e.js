"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3022],{80087:function(e,n,t){t.d(n,{Z:function(){return i}});var o=t(45721),r={base:"base_M3w8",column:"column_mb9C base_M3w8",grid:"grid_EiLr base_M3w8"};const a={alignItems:"center",column:!1,gridCols:0,justifyContent:"space-between",textAlign:"center",type:"base"};function i(e){void 0===e&&(e=a);const n=e.type??a.type,t=e.gridColumns?`repeat(${e.gridColumns}, minmax(auto, max-content))`:"initial",i={alignItems:e.alignItems,gridTemplateColumns:t,justifyContent:e.justifyContent,textAlign:e.textAlign??"center",gap:e.gap??"1rem",columnGap:e.columnGap};return o.createElement("div",{className:r[n],style:i},e.children)}},72032:function(e,n,t){t.d(n,{Z:function(){return l}});var o=t(81648),r=t(45721),a=t(71397),i=t(61471),s="grid_cC7H";function u(e){return r.createElement("li",(0,a.a)({colSpan:2}),r.createElement(i.Z,e,e.children))}function l(e){const{figma:n,github:t}=e,{className:i,...l}=(0,a.g)({cols:12,gap:8});return r.createElement("ul",(0,o.Z)({className:`${i} ${s}`},l),t&&r.createElement(u,{href:t},"View on Github"),n&&r.createElement(u,{href:n},"Figma Design"))}},27505:function(e,n,t){t(45721)},82355:function(e,n,t){t(45721),t(80087)},61471:function(e,n,t){t.d(n,{Z:function(){return u}});var o=t(45721),r=t(64965),a=t(4094),i=t(31026),s=t(6115);function u(e){const{href:n}=e,t=(0,r.g)({href:n}),u=(0,a.g)(t.iconOptions),l=n.includes("github")?i.Z:s.Z;return o.createElement("a",t.link,o.createElement(l,u),e.children)}},47925:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return m}});var o=t(81648),r=(t(45721),t(70167)),a=(t(82355),t(72032));t(27505);const i={tags:["action menu","field"],title:"Menu"},s=void 0,u={unversionedId:"reference/components/menu",id:"reference/components/menu",title:"Menu",description:"Used to display a list of interactive actions, options, or navigable",source:"@site/docs/reference/components/menu.mdx",sourceDirName:"reference/components",slug:"/reference/components/menu",permalink:"/docs/next/reference/components/menu",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/components/menu.mdx",tags:[{label:"action menu",permalink:"/docs/next/tags/action-menu"},{label:"field",permalink:"/docs/next/tags/field"}],version:"current",lastUpdatedBy:"Patsy",frontMatter:{tags:["action menu","field"],title:"Menu"},sidebar:"reference",previous:{title:"Input",permalink:"/docs/next/reference/components/input"},next:{title:"Modal",permalink:"/docs/next/reference/components/modal"}},l={},m=[{value:"Import",id:"import",level:2},{value:"Anatomy",id:"anatomy",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Menu",id:"basic-menu",level:3},{value:"Menu Items with Icons",id:"menu-items-with-icons",level:3},{value:"Reference",id:"reference",level:2},{value:"<code>getMenuProps</code>",id:"getmenuprops",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"<code>getMenuItemProps</code>",id:"getmenuitemprops",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Behavior",id:"behavior",level:2},{value:"Accessbility",id:"accessbility",level:2}],p={toc:m};function c(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",{className:"size-xxl"},"Used to display a list of interactive actions, options, or navigable locations."),(0,r.kt)(a.Z,{github:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/Menu",figma:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsLinkBar"}),(0,r.kt)("h2",{id:"import"},"Import"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { getMenuProps, getMenuItemProps } from '@pluralsight/headless-styles'\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"interface MenuOptions {\n  isExpanded?: boolean\n  label?: string\n  position?:\n    | 'topStart'\n    | 'top'\n    | 'topEnd'\n    | 'rightStart'\n    | 'right'\n    | 'rightEnd'\n    | 'bottomStart'\n    | 'bottom'\n    | 'bottomEnd'\n    | 'leftStart'\n    | 'left'\n    | 'leftEnd'\n}\n\ninterface MenuItemOptions {\n  disabled?: boolean\n}\n\ngetMenuProps(options?: MenuOptions)\ngetMenuItemProps(options?: MenuItemOptions)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import type {\n  MenuOptions,\n  MenuItemOptions,\n} from '@pluralsight/headless-styles/types'\n")),(0,r.kt)("h2",{id:"anatomy"},"Anatomy"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Trigger"),(0,r.kt)("li",{parentName:"ol"},"Container"),(0,r.kt)("li",{parentName:"ol"},"Menu"),(0,r.kt)("li",{parentName:"ol"},"Menu Item"),(0,r.kt)("li",{parentName:"ol"},"Icon (optional)"),(0,r.kt)("li",{parentName:"ol"},"Label Text"),(0,r.kt)("li",{parentName:"ol"},"Divider")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("h3",{id:"basic-menu"},"Basic Menu"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function MenuItemIconExample() {\n  const triggerProps = getIconButtonProps()\n  const menuProps = getMenuProps({ label: 'Menu item with icon example' })\n  const menuItemProps = getMenuItemProps()\n  const menuInteractionProps = useMenuInteraction()\n  const tabIndexProps = useRovingTabIndex()\n\n  return (\n    <div {...menuProps.wrapper}>\n      <button\n        {...triggerProps.button}\n        {...menuProps.trigger}\n        {...menuInteractionProps.trigger}\n      >\n        <MenuIcon {...getIconProps(triggerProps.iconOptions)} />\n      </button>\n      {menuInteractionProps.expanded && (\n        <menu {...menuProps.menu} {...menuInteractionProps.menu}>\n          <li {...menuItemProps.menuListItem}>\n            <button {...menuItemProps.menuItem} {...tabIndexProps}>\n              <span {...menuItemProps.menuItemText}>First</span>\n            </button>\n          </li>\n          <li {...menuItemProps.menuListItem}>\n            <button {...menuItemProps.menuItem} {...tabIndexProps}>\n              <span {...menuItemProps.menuItemText}>Second</span>\n            </button>\n          </li>\n          <li {...menuItemProps.menuListItem}>\n            <button {...menuItemProps.menuItem} {...tabIndexProps}>\n              <span {...menuItemProps.menuItemText}>Third</span>\n            </button>\n          </li>\n        </menu>\n      )}\n    </div>\n  )\n}\n")),(0,r.kt)("admonition",{title:"Create nested menus",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"When you need to create a Submenu, nest a new ",(0,r.kt)("inlineCode",{parentName:"p"},"menu")," in the position you need and combine it with the ",(0,r.kt)("a",{parentName:"p",href:"/docs/next/reference/react-hooks/useSubmenuInteraction"},"useSubmenuInteraction hook"),".")),(0,r.kt)("h3",{id:"menu-items-with-icons"},"Menu Items with Icons"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function MenuItemIconExample() {\n  const menuProps = getMenuProps({ label: 'Menu item with icon example' })\n  const menuItemProps = getMenuItemProps()\n  const menuInteractionProps = useMenuInteraction()\n  const tabIndexProps = useRovingTabIndex()\n\n  return (\n    <div {...menuProps.wrapper}>\n      <button\n        {...getButtonProps().button}\n        {...menuProps.trigger}\n        {...menuInteractionProps.trigger}\n      >\n        Toggle Menu\n      </button>\n      {menuInteractionProps.expanded && (\n        <menu {...menuProps.menu} {...menuInteractionProps.menu}>\n          <li {...menuItemProps.menuListItem}>\n            <button {...menuItemProps.menuItem} {...tabIndexProps}>\n              <PlaceholderIcon {...getIconProps(menuItemProps.iconOptions)} />\n              <span {...menuItemProps.menuItemText}>First</span>\n            </button>\n          </li>\n          <li {...menuItemProps.menuListItem}>\n            <button {...menuItemProps.menuItem} {...tabIndexProps}>\n              <PlaceholderIcon {...getIconProps(menuItemProps.iconOptions)} />\n              <span {...menuItemProps.menuItemText}>Second</span>\n            </button>\n          </li>\n          <li {...menuItemProps.menuListItem}>\n            <button {...menuItemProps.menuItem} {...tabIndexProps}>\n              <PlaceholderIcon {...getIconProps(menuItemProps.iconOptions)} />\n              <span {...menuItemProps.menuItemText}>Third</span>\n            </button>\n          </li>\n        </menu>\n      )}\n    </div>\n  )\n}\n")),(0,r.kt)("h2",{id:"reference"},"Reference"),(0,r.kt)("h3",{id:"getmenuprops"},(0,r.kt)("inlineCode",{parentName:"h3"},"getMenuProps")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"getMenuProps(options?: MenuOptions)\n")),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),": A Boolean value for the isExpanded property which manages the styling for the display state. A property of label that accepts a String which adds accessibility properties. A property of position that accepts a string of ",(0,r.kt)("inlineCode",{parentName:"li"},"<BoxModelPosition><''|Start|End>")," to determine the styling position for the Menu to appear relative to the trigger element.")),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,"An Object matching the ",(0,r.kt)("a",{parentName:"p",href:"#anatomy"},"Anatomy")," containing ",(0,r.kt)("inlineCode",{parentName:"p"},"className")," and a11y properties relevant to the label element. Additionally, it returns an ",(0,r.kt)("inlineCode",{parentName:"p"},"iconOptions")," property to be passed into the Icon API if needed."),(0,r.kt)("h3",{id:"getmenuitemprops"},(0,r.kt)("inlineCode",{parentName:"h3"},"getMenuItemProps")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"getMenuItemProps(options?: MenuItemOptions)\n")),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),": A Boolean value for the disabled property for indicating the availability of the item.")),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,"An Object matching the ",(0,r.kt)("a",{parentName:"p",href:"#anatomy"},"Anatomy")," containing ",(0,r.kt)("inlineCode",{parentName:"p"},"className")," and a11y properties relevant to the label element. Additionally, it returns an ",(0,r.kt)("inlineCode",{parentName:"p"},"iconOptions")," property to be passed into the Icon API if needed."),(0,r.kt)("h2",{id:"behavior"},"Behavior"),(0,r.kt)("p",null,"There are no behavior requirements for the Menu."),(0,r.kt)("h2",{id:"accessbility"},"Accessbility"),(0,r.kt)("p",null,"The Pando Menu and Icon APIs combined with semantic HTML allow the Menu to be fully accessible and screen-readable."))}c.isMDXComponent=!0},71397:function(e,n,t){t.d(n,{a:function(){return m},g:function(){return l}});var o=t(1801),r=t(23909),a=t(31519);const i="gridCSS-module_gridContainer__sQmao",s="gridCSS-module_gridItem__nVMyV";(0,a.s)(".gridCSS-module_gridContainer__sQmao{display:grid;width:100%}.gridCSS-module_gridItem__nVMyV{min-width:0}");const u="pando-grid";function l(e){const n=(0,r.g)(e);return{...(0,r.c)(n),...(0,o.c)(u,i,...n.classNames)}}function m(e){const n=(0,r.a)(e);return{...(0,r.b)(n),...(0,o.c)(`${u}-item`,s,...n.classNames)}}},23909:function(e,n,t){t.d(n,{a:function(){return a},b:function(){return s},c:function(){return i},g:function(){return r}});const o={6:.375,8:.5,12:.75,16:1,32:2};function r(e){return{classNames:(null==e?void 0:e.classNames)??[],cols:(null==e?void 0:e.cols)??12,gap:(null==e?void 0:e.gap)??16,rows:(null==e?void 0:e.rows)??1}}function a(e){return{classNames:(null==e?void 0:e.classNames)??[],colSpan:(null==e?void 0:e.colSpan)??12,rowSpan:(null==e?void 0:e.rowSpan)??null}}function i(e){return{style:{gridTemplateRows:`repeat(${e.rows}, 1fr)`,gridTemplateColumns:`repeat(${e.cols}, 1fr)`,gap:`${o[e.gap]}rem`}}}function s(e){const{colSpan:n,rowSpan:t}=e;return t?{style:{gridArea:`span ${t} / span ${n} / span ${t} / span ${n}`}}:{style:{gridColumn:`span ${n} / span ${n}`}}}}}]);