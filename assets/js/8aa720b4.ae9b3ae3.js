"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7096],{61471:function(e,t,n){n.d(t,{Z:function(){return l}});var a=n(45721),s=n(64965),o=n(4094),r=n(59393),i=n(79719);function l(e){const{href:t}=e,n=(0,s.g)({href:t}),l=(0,o.g)(n.iconOptions),u=t.includes("github")?r.Z:i.Z;return a.createElement("a",n.link,a.createElement(u,l),e.children)}},79425:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return r},metadata:function(){return l},toc:function(){return c}});var a=n(81648),s=(n(45721),n(70167)),o=n(61471);const r={tags:["React","Tabs","Tab state","Tabs a11y"],title:"useTabs"},i=void 0,l={unversionedId:"reference/react-hooks/useTabs",id:"reference/react-hooks/useTabs",title:"useTabs",description:"A set of hooks for controlling state and Accessibility for Tab components.",source:"@site/docs/reference/react-hooks/useTabs.mdx",sourceDirName:"reference/react-hooks",slug:"/reference/react-hooks/useTabs",permalink:"/docs/next/reference/react-hooks/useTabs",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/react-hooks/useTabs.mdx",tags:[{label:"React",permalink:"/docs/next/tags/react"},{label:"Tabs",permalink:"/docs/next/tags/tabs"},{label:"Tab state",permalink:"/docs/next/tags/tab-state"},{label:"Tabs a11y",permalink:"/docs/next/tags/tabs-a-11-y"}],version:"current",lastUpdatedBy:"Casey Baggz",frontMatter:{tags:["React","Tabs","Tab state","Tabs a11y"],title:"useTabs"},sidebar:"reference",previous:{title:"useSubmenuInteraction",permalink:"/docs/next/reference/react-hooks/useSubmenuInteraction"},next:{title:"useTheme",permalink:"/docs/next/reference/react-hooks/useTheme"}},u={},c=[{value:"Import",id:"import",level:2},{value:"Reference",id:"reference",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"My Tabs functionality isn&#39;t working",id:"my-tabs-functionality-isnt-working",level:3}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",{className:"size-xxl"},"A set of hooks for controlling state and Accessibility for Tab components."),(0,s.kt)(o.Z,{icon:"github",href:"https://github.com/pluralsight/tva/blob/main/packages/react-utils/src/hooks/useTabs",mdxType:"ViewSourceLink"},"View source"),(0,s.kt)("h2",{id:"import"},"Import"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"import {\n  TabsProvider,\n  useTabList,\n  useTab,\n  usePanelList,\n  usePanel,\n} from '@pluralsight/react-utils'\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"interface TabData {\n  id: string\n  label: string\n  children: {\n    id: string\n  }\n}\n\n<TabsProvider data={Array<TabData>}>\n")),(0,s.kt)("h2",{id:"reference"},"Reference"),(0,s.kt)("p",null,"The useTab set comes with four hooks and a context provider."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"TabsProvider"),": controls the context and data for all of the Tab-related hooks"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"useTabList"),": custom hook for a component that displays the list of tabs"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"useTab"),": custom hook for a component that displays a single tab"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"usePanelList"),": custom hook for a component that displays the list of panels"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"usePanel"),": custom hook for a component that displays a single panel")),(0,s.kt)("p",null,"Wrap your Tabs parent component in the ",(0,s.kt)("inlineCode",{parentName:"p"},"TabsProvider"),", then use all the hooks in each individual component at the top level:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"showLineNumbers {11,22,33,44,52}",showLineNumbers:!0,"{11,22,33,44,52}":!0},"function TabsEl() {\n  return (\n    <div>\n      <TabList />\n      <PanelList />\n    </div>\n  )\n}\n\nfunction TabList() {\n  const { onKeyDown, tabList } = useTabList()\n  return (\n    <div onKeyDown={onKeyDown}>\n      {tabList.map((tabId) => (\n        <Tab id={tabId} key={tabId} />\n      ))}\n    </div>\n  )\n}\n\nfunction Tab(props) {\n  const { tabs, ...tab } = useTab()\n  const data = tabs[props.id]\n\n  return (\n    <button {...tab} {...data}>\n      {data.label}\n    </button>\n  )\n}\n\nfunction PanelList() {\n  const data = usePanelList()\n  return (\n    <div>\n      {data.panelList.map((panelId) => (\n        <TabPanel id={panelId} key={panelId} />\n      ))}\n    </div>\n  )\n}\n\nfunction TabPanel(props) {\n  const { panels } = usePanel()\n  const data = panels[props.id]\n\n  return <div {...data}>{data.id}</div>\n}\n\nfunction Tabs({ data }) {\n  return (\n    <TabsProvider data={data}>\n      <TabsEl />\n    </TabsProvider>\n  )\n}\n\nexport default memo(Tabs)\n")),(0,s.kt)("h3",{id:"parameters"},"Parameters"),(0,s.kt)("p",null,"There are no parameters required for any of the Tabs hooks."),(0,s.kt)("p",null,"Each hook ",(0,s.kt)("strong",{parentName:"p"},"requires")," the context provided by the ",(0,s.kt)("inlineCode",{parentName:"p"},"TabsProvider")," component."),(0,s.kt)("h3",{id:"returns"},"Returns"),(0,s.kt)("p",null,"Each hook returns an Object of properties that utilize the ",(0,s.kt)("inlineCode",{parentName:"p"},"TabsProvider")," context and are relevant to the specific component section of the Tabs Anatomy."),(0,s.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,s.kt)("h3",{id:"my-tabs-functionality-isnt-working"},"My Tabs functionality isn't working"),(0,s.kt)("p",null,"Make sure you are building single-responsibility components to help reduce the risks of buggy behavior and help your project to scale."),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},'Don\'t create a "single page" Tabs super component.'),(0,s.kt)("li",{parentName:"ol"},"Follow the ",(0,s.kt)("a",{parentName:"li",href:"https://reactjs.org/docs/thinking-in-react.html#gatsby-focus-wrapper"},"Thinking in React")," guidelines."),(0,s.kt)("li",{parentName:"ol"},"Ensure your components are single responsibility so only one hook is called within each component.")))}d.isMDXComponent=!0}}]);