"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2079],{36251:function(e,t,n){const o=n(86521);t.Z=function(e){return(0,o.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",role:"img",fill:"currentColor",className:"ps-icon-svg","aria-label":"figma icon",...e,children:(0,o.jsx)("path",{fillRule:"evenodd",d:"M4.25 5.5A4.25 4.25 0 0 1 8.5 1.25h7A4.25 4.25 0 0 1 17.912 9a4.25 4.25 0 1 1-5.162 6.74v3.76A4.25 4.25 0 1 1 6.088 16a4.245 4.245 0 0 1-1.838-3.5c0-1.452.728-2.733 1.838-3.5A4.245 4.245 0 0 1 4.25 5.5Zm4.25 9.75h2.75v-5.5H8.5a2.75 2.75 0 1 0 0 5.5Zm2.75 1.5H8.5a2.75 2.75 0 1 0 2.75 2.75v-2.75Zm7-11.25a2.75 2.75 0 0 1-2.75 2.75h-2.75v-5.5h2.75a2.75 2.75 0 0 1 2.75 2.75ZM15.5 9.75a2.75 2.75 0 1 0 0 5.5 2.75 2.75 0 0 0 0-5.5Zm-7-1.5h2.75v-5.5H8.5a2.75 2.75 0 0 0 0 5.5Z",clipRule:"evenodd"})})}},83016:function(e,t,n){const o=n(86521);t.Z=function(e){return(0,o.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg","aria-label":"github logo",viewBox:"0 0 24 24",role:"img",fill:"currentColor",className:"ps-icon-svg",...e,children:(0,o.jsx)("path",{fillRule:"evenodd",d:"M2 12c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12a10 10 0 0 0-20 0Z",clipRule:"evenodd"})})}},84140:function(e,t,n){n.d(t,{Z:function(){return l}});var o=n(45721),r=n(92466),a=n(58284),s=n(83016),i=n(36251);function l(e){const{href:t}=e,n=(0,a.L)({ariaHidden:!0,size:"s"}),l=t.includes("github")?s.Z:i.Z;return o.createElement(r.h,e,o.createElement(l,n),e.children)}},47503:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var o=n(81648),r=(n(45721),n(70167)),a=n(84140);const s={tags:["React","Confirm Dialog","Modal","Keyboard Event","Focus Trap"],title:"useFocusTrap"},i=void 0,l={unversionedId:"reference/react-hooks/useFocusTrap",id:"version-0.4.1/reference/react-hooks/useFocusTrap",title:"useFocusTrap",description:"A hook for trapping focus within Modal and Dialog components.",source:"@site/versioned_docs/version-0.4.1/reference/react-hooks/useFocusTrap.mdx",sourceDirName:"reference/react-hooks",slug:"/reference/react-hooks/useFocusTrap",permalink:"/docs/reference/react-hooks/useFocusTrap",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/versioned_docs/version-0.4.1/reference/react-hooks/useFocusTrap.mdx",tags:[{label:"React",permalink:"/docs/tags/react"},{label:"Confirm Dialog",permalink:"/docs/tags/confirm-dialog"},{label:"Modal",permalink:"/docs/tags/modal"},{label:"Keyboard Event",permalink:"/docs/tags/keyboard-event"},{label:"Focus Trap",permalink:"/docs/tags/focus-trap"}],version:"0.4.1",lastUpdatedBy:"Casey Baggz",frontMatter:{tags:["React","Confirm Dialog","Modal","Keyboard Event","Focus Trap"],title:"useFocusTrap"},sidebar:"reference",previous:{title:"useEscToClose",permalink:"/docs/reference/react-hooks/useEscToClose"},next:{title:"useMenuInteraction",permalink:"/docs/reference/react-hooks/useMenuInteraction"}},c={},u=[{value:"Import",id:"import",level:2},{value:"Reference",id:"reference",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"My hook isn&#39;t trapping the focus",id:"my-hook-isnt-trapping-the-focus",level:3}],p={toc:u};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",{className:"size-xxl"},"A hook for trapping focus within Modal and Dialog components."),(0,r.kt)(a.Z,{icon:"github",href:"https://github.com/pluralsight/tva/blob/main/packages/react-utils/src/hooks/useFocusTrap.ts",mdxType:"ViewSourceLink"},"View source"),(0,r.kt)("h2",{id:"import"},"Import"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useFocusTrap } from '@pluralsight/react-utils'\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"useFocusTrap(triggerRef: RefObject<HTMLButton>)\n")),(0,r.kt)("h2",{id:"reference"},"Reference"),(0,r.kt)("p",null,"Call ",(0,r.kt)("inlineCode",{parentName:"p"},"useFocusTrap")," at the top level of the component in which you wish to trap the focus:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"showLineNumbers {3,6,14}",showLineNumbers:!0,"{3,6,14}":!0},"function AlertDialog(props, triggerRef) {\n  const { onClose, ...alertProps } = props\n  const { ref, onKeyDown, setupFocusTrap } = useFocusTrap(triggerRef)\n\n  useEffect(() => {\n    setupFocusTrap()\n  }, [setupFocusTrap])\n\n  return (\n    <div {...alert.backdrop}>\n      <div {...alert.focusGuard} />\n\n      <div {...alert.wrapper} ref={wrapperRef} onClick={handleBackdropClick}>\n        <section {...alert.section} ref={ref} onKeyDown={onKeyDown}>\n          <header {...alert.alertTitle}>Example Alert</header>\n          <p {...alert.alertBody}>\n            Performing this action will be permanent. Are you sure you want to\n            do it?\n          </p>\n          <footer {...alert.buttonGroup}>\n            <button {...cancelBtnProps} onClick={onClose}>\n              Cancel\n            </button>\n            <button {...primaryBtnProps}>Action</button>\n          </footer>\n        </section>\n      </div>\n\n      <div {...alert.focusGuard} />\n    </div>\n  )\n}\n")),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"triggerRef"),": a reference using ",(0,r.kt)("inlineCode",{parentName:"li"},"useRef")," placed on the trigger element that is responsible for displaying the Dialog/Modal (usually a Button).")),(0,r.kt)("h3",{id:"returns"},"Returns"),(0,r.kt)("p",null,"An Object containing a ",(0,r.kt)("inlineCode",{parentName:"p"},"ref")," property to place on the element you would like to trap the focus within. An ",(0,r.kt)("inlineCode",{parentName:"p"},"onKeyDown")," event to place on the same element as the ",(0,r.kt)("inlineCode",{parentName:"p"},"ref"),' property to watch for "Tab" events within that section. A ',(0,r.kt)("inlineCode",{parentName:"p"},"setupFocusTrap")," function to be called in a ",(0,r.kt)("inlineCode",{parentName:"p"},"useEffect")," hook with nothing else in the dependency Array to setup the hook when the component has rendered for the first time."),(0,r.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("h3",{id:"my-hook-isnt-trapping-the-focus"},"My hook isn't trapping the focus"),(0,r.kt)("p",null,"Make sure you are placing the ",(0,r.kt)("a",{parentName:"p",href:"#returns"},"Return Props")," on the right elements and that you are calling the ",(0,r.kt)("inlineCode",{parentName:"p"},"setupFocusTrap")," function in an Effect by itself."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"ref")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"onKeyDown")," should be placed on the same element that contains the focusable content."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"setupFocusTrap")," should be in an Effect by itself to ensure it is only called when the component has mounted for the first time.")))}d.isMDXComponent=!0}}]);