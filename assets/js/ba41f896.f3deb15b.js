"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9305],{6115:function(e,t,n){const o=n(86521);t.Z=function(e){return(0,o.jsx)("svg",{viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",role:"img",fill:"currentColor",className:"ps-icon-svg","aria-label":"figma icon",...e,children:(0,o.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M4.25 5.5A4.25 4.25 0 0 1 8.5 1.25h7A4.25 4.25 0 0 1 17.912 9a4.25 4.25 0 1 1-5.162 6.74v3.76A4.25 4.25 0 1 1 6.088 16a4.245 4.245 0 0 1-1.838-3.5c0-1.452.728-2.733 1.838-3.5A4.245 4.245 0 0 1 4.25 5.5Zm4.25 9.75h2.75v-5.5H8.5a2.75 2.75 0 1 0 0 5.5Zm2.75 1.5H8.5a2.75 2.75 0 1 0 2.75 2.75v-2.75Zm7-11.25a2.75 2.75 0 0 1-2.75 2.75h-2.75v-5.5h2.75a2.75 2.75 0 0 1 2.75 2.75ZM15.5 9.75a2.75 2.75 0 1 0 0 5.5 2.75 2.75 0 0 0 0-5.5Zm-7-1.5h2.75v-5.5H8.5a2.75 2.75 0 0 0 0 5.5Z"})})}},31026:function(e,t,n){const o=n(86521);t.Z=function(e){return(0,o.jsx)("svg",{"aria-label":"github logo",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",role:"img",fill:"currentColor",className:"ps-icon-svg",...e,children:(0,o.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M2 12c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12a10 10 0 0 0-20 0Z"})})}},93875:function(e,t,n){const o=n(86521);t.Z=function(e){return(0,o.jsx)("svg",{"aria-label":"checkmark",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",role:"img",fill:"currentColor",className:"ps-icon-svg",...e,children:(0,o.jsx)("path",{d:"m9.59 14.58-2.818-2.818a.5.5 0 0 0-.706 0l-.71.704a.5.5 0 0 0-.003.708h.002l3.881 3.882a.5.5 0 0 0 .707 0l9.293-9.292a.5.5 0 0 0 0-.708l-.703-.702a.5.5 0 0 0-.707 0L9.59 14.58Z"})})}},56634:function(e,t,n){const o=n(86521);t.Z=function(e){return(0,o.jsx)("svg",{viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",role:"img",fill:"currentColor",className:"ps-icon-svg","aria-label":"indeterminate icon",...e,children:(0,o.jsx)("path",{d:"M18.5 13h-13a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5Z"})})}},67235:function(e,t,n){n.d(t,{Z:function(){return c}});var o=n(45721),a={base:"base_M3w8",column:"column_mb9C base_M3w8",grid:"grid_EiLr base_M3w8"};const r={alignItems:"center",column:!1,gridCols:0,justifyContent:"space-between",textAlign:"center",type:"base"};function c(e){void 0===e&&(e=r);const t=e.type??r.type,n=e.gridColumns?`repeat(${e.gridColumns}, minmax(auto, max-content))`:"initial",c={alignItems:e.alignItems,gridTemplateColumns:n,justifyContent:e.justifyContent,textAlign:e.textAlign??"center",gap:e.gap??"1rem",columnGap:e.columnGap};return o.createElement("div",{className:a[t],style:c},e.children)}},95428:function(e,t,n){n.d(t,{Z:function(){return s}});var o=n(81648),a=n(45721),r=n(31489),c=n(69477),l="grid_cC7H";function i(e){return a.createElement("li",(0,r.a)({colSpan:2}),a.createElement(c.Z,e,e.children))}function s(e){const{figma:t,github:n}=e,{className:c,...s}=(0,r.g)({cols:12,gap:8});return a.createElement("ul",(0,o.Z)({className:`${c} ${l}`},s),n&&a.createElement(i,{href:n},"View on Github"),t&&a.createElement(i,{href:t},"Figma Design"))}},25302:function(e,t,n){n(45721)},69477:function(e,t,n){n.d(t,{Z:function(){return i}});var o=n(45721),a=n(60367),r=n(96222),c=n(31026),l=n(6115);function i(e){const{href:t}=e,n=(0,a.g)({href:t}),i=(0,r.g)(n.iconOptions),s=t.includes("github")?c.Z:l.Z;return o.createElement("a",n.link,o.createElement(s,i),e.children)}},90510:function(e,t,n){n.r(t),n.d(t,{assets:function(){return O},contentTitle:function(){return N},default:function(){return I},frontMatter:function(){return _},metadata:function(){return S},toc:function(){return E}});var o=n(81648),a=n(45721),r=n(70167),c=n(21374),l=n(55550),i=n(67235),s=n(96222),u=n(29234),d=n(56634),p=n(93875);function m(e){const{checked:t}=e,n=(0,s.g)(e.iconOptions);return t?"true"===e.indeterminate?a.createElement(d.Z,n):a.createElement(p.Z,n):null}function h(e){const{onClick:t}=e,{fieldOptions:n}=(0,c.g)({...e}),r=(0,u.g)({...n,...e}),{value:i,...s}=(0,l.g)({...e,value:e.label}),{checked:d,...p}=r.input;return a.createElement("label",r.checkboxContainer,t&&a.createElement("input",(0,o.Z)({},p,{checked:d,onChange:e.onClick})),!t&&a.createElement("input",(0,o.Z)({},p,{defaultChecked:d})),a.createElement("span",r.checkboxControl,a.createElement(m,{checked:d,iconOptions:r.iconOptions,indeterminate:r.input.indeterminate})),a.createElement("span",s,i))}const k={justifyContent:"space-between",width:"100%"};function b(){const{control:e,fieldOptions:t}=(0,c.g)(),{value:n,...r}=(0,l.g)({htmlFor:"checked-example",value:"checked:"});return a.createElement("div",(0,o.Z)({},e,{style:{...k}}),a.createElement("label",r,n),a.createElement(h,(0,o.Z)({},t,{checked:!0})))}function g(){const{control:e,fieldOptions:t}=(0,c.g)(),{value:n,...r}=(0,l.g)({htmlFor:"indeterminate-example",value:"indeterminate:"});return a.createElement("div",(0,o.Z)({},e,{style:{...k}}),a.createElement("label",r,n),a.createElement(h,(0,o.Z)({},t,{checked:!0,indeterminate:!0})))}function x(){const{control:e,fieldOptions:t}=(0,c.g)({disabled:!0}),{value:n,...r}=(0,l.g)({htmlFor:"disabled-exampled",value:"disabled:"});return a.createElement("div",(0,o.Z)({},e,{style:{...k}}),a.createElement("label",r,n),a.createElement(h,t))}function f(){const{control:e,fieldOptions:t}=(0,c.g)({invalid:!0}),{value:n,...r}=(0,l.g)({htmlFor:"invalid-exampled",value:"invalid:"});return a.createElement("div",(0,o.Z)({},e,{style:k}),a.createElement("label",r,n),a.createElement(h,(0,o.Z)({},t,{checked:!0})))}function v(){const{control:e,fieldOptions:t}=(0,c.g)({readOnly:!0}),{value:n,...r}=(0,l.g)({htmlFor:"readOnly-exampled",value:"readOnly:"});return a.createElement("div",(0,o.Z)({},e,{style:{...k}}),a.createElement("label",r,n),a.createElement(h,t))}function C(e){const{control:t,fieldOptions:n}=(0,c.g)({required:!0}),r=(0,l.g)({htmlFor:"required-exampled",value:""});return a.createElement("div",(0,o.Z)({},t,{style:{...k}}),a.createElement("label",r,"required:"),a.createElement(h,(0,o.Z)({},n,{checked:e.checked,onClick:e.onClick})))}var y=function(){const[e,t]=(0,a.useState)(!1);return a.createElement(i.Z,null,a.createElement("div",{style:{display:"grid",gridTemplateColumns:"1fr 1fr",gap:"1rem 5rem",width:"75%"}},a.createElement(b,null),a.createElement(x,null),a.createElement(f,null),a.createElement(v,null),a.createElement(C,{checked:e,onClick:function(e){t(e.target.checked)}}),a.createElement(g,null)))},w=n(95428);n(25302);const _={tags:["multi-select","field","form"],title:"Checkbox"},N=void 0,S={unversionedId:"reference/components/checkbox",id:"reference/components/checkbox",title:"Checkbox",description:"Used when a user needs to select multiple values from options in a form.",source:"@site/docs/reference/components/checkbox.mdx",sourceDirName:"reference/components",slug:"/reference/components/checkbox",permalink:"/docs/reference/components/checkbox",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/components/checkbox.mdx",tags:[{label:"multi-select",permalink:"/docs/tags/multi-select"},{label:"field",permalink:"/docs/tags/field"},{label:"form",permalink:"/docs/tags/form"}],version:"current",lastUpdatedBy:"Casey Baggz",frontMatter:{tags:["multi-select","field","form"],title:"Checkbox"},sidebar:"reference",previous:{title:"Button",permalink:"/docs/reference/components/button"},next:{title:"Circular Progress",permalink:"/docs/reference/components/circular-progress"}},O={},E=[{value:"Import",id:"import",level:2},{value:"Anatomy",id:"anatomy",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Checkbox",id:"basic-checkbox",level:3},{value:"Indeterminate Checkbox",id:"indeterminate-checkbox",level:3},{value:"States",id:"states",level:3},{value:"Reference",id:"reference",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Behavior",id:"behavior",level:2},{value:"Layout",id:"layout",level:3},{value:"Usage",id:"usage-1",level:3},{value:"Interactions",id:"interactions",level:3},{value:"Accessbility",id:"accessbility",level:2}],Z={toc:E};function I(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},Z,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",{className:"size-xxl"},"Used when a user needs to select multiple values from options in a form."),(0,r.kt)(w.Z,{github:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/Checkbox",figma:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsLinkBar"}),(0,r.kt)("h2",{id:"import"},"Import"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { getCheckboxProps } from '@pluralsight/headless-styles'\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"interface CheckboxOptions {\n  checked: boolean\n  disabled?: boolean\n  id: string\n  indeterminate?: boolean\n  invalid?: boolean\n  name: string\n  readOnly?: boolean\n  required?: boolean\n  value: string\n}\n\ngetCheckboxProps(options?: CheckboxOptions)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import type { CheckboxOptions } from '@pluralsight/headless-styles/types'\n")),(0,r.kt)("h2",{id:"anatomy"},"Anatomy"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Container"),(0,r.kt)("li",{parentName:"ol"},"Control"),(0,r.kt)("li",{parentName:"ol"},"Input"),(0,r.kt)("li",{parentName:"ol"},"Label")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("h3",{id:"basic-checkbox"},"Basic Checkbox"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function BasicCheckbox() {\n  const [checked, setChecked] = useState(false)\n  const { fieldOptions } = getFormControlProps()\n  const checkbox = getCheckboxProps({ ...fieldOptions, checked })\n  const { value, ...labelProps } = getFormLabelProps({\n    value: 'Sign up for something.',\n  })\n  const icon = getIconProps(checkbox.iconOptions)\n\n  function handleChange() {\n    setChecked((prev) => !prev)\n  }\n\n  return (\n    <label {...checkbox.checkboxContainer}>\n      <input {...checkbox.input} onChange={handleChange} />\n      <span {...checkbox.checkboxControl}>\n        {checkbox.input.checked && <CheckIcon {...icon} />}\n      </span>\n      <span {...labelProps}>{value}</span>\n    </label>\n  )\n}\n")),(0,r.kt)("h3",{id:"indeterminate-checkbox"},"Indeterminate Checkbox"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function IndeterminateCheckbox() {\n  const { fieldOptions } = getFormControlProps()\n  const checkbox = getCheckboxProps({\n    ...fieldOptions,\n    indeterminate: true,\n    checked: true,\n  })\n  const { value, ...labelProps } = getFormLabelProps({\n    value: 'Sign up for something.',\n  })\n  const icon = getIconProps(checkbox.iconOptions)\n\n  return (\n    <label {...checkbox.checkboxContainer}>\n      <input {...checkbox.input} onChange={() => null} />\n      <span {...checkbox.checkboxControl}>\n        {checkbox.input.checked && <IndeterminateIcon {...icon} />}\n      </span>\n    </label>\n  )\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'showLineNumbers title="How to determine Indeterminate."',showLineNumbers:!0,title:'"How',to:!0,determine:!0,'Indeterminate."':!0},"const [checkboxOptions, setCheckboxOptions] = useState({\n  email: false,\n  sms: false,\n  phone: false\n})\nconst checkedItems = Object.keys(checkboxOptions).map((optionItem) => (\n  return checkboxOptions[optionItem]\n))\nconst allChecked = checkedItems.every(Boolean)\nconst isIndeterminate = checkedItems.some(Boolean) && !allChecked\n")),(0,r.kt)("h3",{id:"states"},"States"),(0,r.kt)(y,{mdxType:"CheckboxStates"}),(0,r.kt)("admonition",{title:"Form field and state",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"In order to easily manage the state and maintain accessbility of your form field, the basic state statuses should come from the result of the FormControl API.")),(0,r.kt)("h2",{id:"reference"},"Reference"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"getCheckboxProps(options?: CheckboxOptions)\n")),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),": An Object containing properties derived from the FormControl.fieldOptions results (disabled, invalid, readOnly, required) to determine the styling of the Checkbox state. An id and optional name property that accept a String value which connect accessbility properties from the label to the Checkbox. A checked and optional indeterminate property that accept a Boolean value to determine the styling of the Checkbox state. A value property that accepts a String for form submission.")),(0,r.kt)("h3",{id:"returns"},"Returns"),(0,r.kt)("p",null,"An Object matching the ",(0,r.kt)("a",{parentName:"p",href:"#anatomy"},"Anatomy")," containing ",(0,r.kt)("inlineCode",{parentName:"p"},"className")," and a11y properties relevant to each element/section. Additionally, it returns an ",(0,r.kt)("inlineCode",{parentName:"p"},"iconOptions")," Object to use as the parameters for the Icon API."),(0,r.kt)("h2",{id:"behavior"},"Behavior"),(0,r.kt)("h3",{id:"layout"},"Layout"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Do")," use multiple Checkboxes in a vertical list."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Don't")," use multiple Checkboxes in a single row."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Do")," provide a Label with a Checkbox."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Don't")," use a Checkbox inline without a Label."),(0,r.kt)("h3",{id:"usage-1"},"Usage"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Do"),' use a Checkbox for giving users an option to "opt-in" to a choice.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Don't")," use a Checkbox for showing/hiding content."),(0,r.kt)("h3",{id:"interactions"},"Interactions"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Do")," use the indeterminate state for a parent option of a nested group."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Don't")," use the indeterminate state for a single option within a group."),(0,r.kt)("h2",{id:"accessbility"},"Accessbility"),(0,r.kt)("p",null,"The Pando Checkbox, and Icon APIs combined with semantic HTML allow the Checkbox to be fully accessible and screen-readable."))}I.isMDXComponent=!0},29234:function(e,t,n){n.d(t,{g:function(){return s}});var o=n(61829),a=n(12942),r=n(97859);const c="checkboxCSS-module_checkboxContainer__TJ7sq",l="checkboxCSS-module_checkboxInput__wuNe5",i="checkboxCSS-module_checkboxControl__UWcOY";(0,r.s)(".checkboxCSS-module_checkboxContainer__TJ7sq{align-items:center;cursor:pointer;display:inline-flex;position:relative;vertical-align:top}.checkboxCSS-module_checkboxInput__wuNe5{clip:rect(0,0,0,0);border:0;box-sizing:border-box;height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;white-space:nowrap;width:1px}.checkboxCSS-module_checkboxControl__UWcOY{-webkit-margin-end:.437rem;align-items:center;border-color:var(--ps-action-border);-o-border-image:initial;border-image:initial;border-radius:2px;border-style:solid;border-width:2px;color:var(--ps-action-text);display:inline-flex;flex-shrink:0;height:1.125rem;justify-content:center;margin-bottom:2px;margin-inline-end:.437rem;transition-duration:.15s;transition-property:background,background-color,border,box-shadow;-webkit-user-select:none;-moz-user-select:none;user-select:none;vertical-align:top;width:1.125rem}.checkboxCSS-module_checkboxControl__UWcOY:not([disabled]):hover{background:var(--ps-background-hover);border-color:var(--ps-background-hover)}.checkboxCSS-module_checkboxInput__wuNe5:focus+[data-control]{outline:3px solid var(--ps-action-border-focus);outline-offset:2px}.checkboxCSS-module_checkboxInput__wuNe5:focus:not(:focus-visible)+[data-control]{box-shadow:none;outline:none}.checkboxCSS-module_checkboxContainer__TJ7sq[data-readonly=true],.checkboxCSS-module_checkboxContainer__TJ7sq[disabled]{cursor:not-allowed}.checkboxCSS-module_checkboxControl__UWcOY[data-checked=true]{background:var(--ps-action-background);border-color:var(--ps-action-background)}.checkboxCSS-module_checkboxControl__UWcOY[data-checked=true]:hover{background:var(--ps-action-background-hover);border-color:var(--ps-action-background-hover)}.checkboxCSS-module_checkboxControl__UWcOY[disabled]{background:var(--ps-background);border-color:var(--ps-background)}.checkboxCSS-module_checkboxControl__UWcOY[data-invalid=true]{background:var(--ps-danger-surface);border-color:var(--ps-danger-surface);color:var(--ps-danger-text)}.checkboxCSS-module_checkboxControl__UWcOY[data-invalid=true]:hover{background:var(--ps-danger-surface);border-color:var(--ps-danger-surface)}.checkboxCSS-module_checkboxControl__UWcOY[data-readonly=true]:hover{background-color:initial}");function s(e){const t=(0,a.g)(e),n=(0,a.c)(t);return{...n,input:{...n.input,...(0,o.c)("ps-checkbox-input",l)},checkboxContainer:{...n.checkboxContainer,...(0,o.c)("ps-checkbox-container",c)},checkboxControl:{...n.checkboxControl,...(0,o.c)("ps-checkbox-control",i)}}}},12942:function(e,t,n){n.d(t,{c:function(){return r},g:function(){return a}});var o=n(41800);function a(e){return{...(0,o.g)(e),indeterminate:(null==e?void 0:e.indeterminate)??!1}}function r(e){const t=(0,o.c)(e);return{iconOptions:{size:"s"},input:{...t.input,indeterminate:e.indeterminate.toString(),type:"checkbox"},checkboxContainer:{...t.container},checkboxControl:{...t.control}}}}}]);