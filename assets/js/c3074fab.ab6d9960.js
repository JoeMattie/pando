"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4873],{5098:function(e,t,n){const r=n(86521);t.Z=function(e){return(0,r.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",role:"img",fill:"currentColor",className:"ps-icon-svg","aria-label":"figma icon",...e,children:(0,r.jsx)("path",{fillRule:"evenodd",d:"M4.25 5.5A4.25 4.25 0 0 1 8.5 1.25h7A4.25 4.25 0 0 1 17.912 9a4.25 4.25 0 1 1-5.162 6.74v3.76A4.25 4.25 0 1 1 6.088 16a4.245 4.245 0 0 1-1.838-3.5c0-1.452.728-2.733 1.838-3.5A4.245 4.245 0 0 1 4.25 5.5Zm4.25 9.75h2.75v-5.5H8.5a2.75 2.75 0 1 0 0 5.5Zm2.75 1.5H8.5a2.75 2.75 0 1 0 2.75 2.75v-2.75Zm7-11.25a2.75 2.75 0 0 1-2.75 2.75h-2.75v-5.5h2.75a2.75 2.75 0 0 1 2.75 2.75ZM15.5 9.75a2.75 2.75 0 1 0 0 5.5 2.75 2.75 0 0 0 0-5.5Zm-7-1.5h2.75v-5.5H8.5a2.75 2.75 0 0 0 0 5.5Z",clipRule:"evenodd"})})}},34961:function(e,t,n){const r=n(86521);t.Z=function(e){return(0,r.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg","aria-label":"github logo",viewBox:"0 0 24 24",role:"img",fill:"currentColor",className:"ps-icon-svg",...e,children:(0,r.jsx)("path",{fillRule:"evenodd",d:"M2 12c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12a10 10 0 0 0-20 0Z",clipRule:"evenodd"})})}},15566:function(e,t,n){n.d(t,{dS:function(){return p},fK:function(){return s},C9:function(){return c},ZP:function(){return u}});var r=n(45721),a=n(84140),o="linkList_sLwJ",l="linkItem_ESvF";function i(e){return r.createElement("li",{className:l},r.createElement(a.Z,e,e.children))}function s(e){return r.createElement(i,{href:e.href},e.children??"View on Github")}function p(e){return r.createElement(i,{href:e.href},"View on Figma")}function c(e){return r.createElement("ul",{className:o},e.children)}function u(e){const{figma:t,github:n}=e;return r.createElement("ul",{className:o},n&&r.createElement(s,{href:n}),t&&r.createElement(p,{href:t}))}},45945:function(e,t,n){n(45721)},84140:function(e,t,n){n.d(t,{Z:function(){return s}});var r=n(45721),a=n(64112),o=n(83105),l=n(34961),i=n(5098);function s(e){const{href:t}=e,n=(0,o.L)({ariaHidden:!0,size:"s"}),s=t.includes("github")?l.Z:i.Z;return r.createElement(a.h,e,r.createElement(s,n),e.children)}},34005:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var r=n(81648),a=(n(45721),n(70167)),o=n(15566);n(45945);const l={tags:["dialog","user confirmation","prompt"],title:"Alert Dialog"},i=void 0,s={unversionedId:"reference/components/alert",id:"reference/components/alert",title:"Alert Dialog",description:"A composable solution to create different Alert Dialog components.",source:"@site/docs/reference/components/alert.mdx",sourceDirName:"reference/components",slug:"/reference/components/alert",permalink:"/docs/next/reference/components/alert",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/components/alert.mdx",tags:[{label:"dialog",permalink:"/docs/next/tags/dialog"},{label:"user confirmation",permalink:"/docs/next/tags/user-confirmation"},{label:"prompt",permalink:"/docs/next/tags/prompt"}],version:"current",lastUpdatedBy:"Casey Baggz",frontMatter:{tags:["dialog","user confirmation","prompt"],title:"Alert Dialog"},sidebar:"reference",previous:{title:"Admonition",permalink:"/docs/next/reference/components/admonition"},next:{title:"Avatar",permalink:"/docs/next/reference/components/avatar"}},p={},c=[{value:"Import",id:"import",level:2},{value:"Anatomy",id:"anatomy",level:2},{value:"Usage",id:"usage",level:2},{value:"Alert Backdrop",id:"alert-backdrop",level:3},{value:"Alert",id:"alert",level:3},{value:"Alert Header",id:"alert-header",level:3},{value:"Alert Heading",id:"alert-heading",level:3},{value:"Alert Body",id:"alert-body",level:3},{value:"Alert Text",id:"alert-text",level:3},{value:"Alert Label",id:"alert-label",level:3},{value:"Alert Input",id:"alert-input",level:3},{value:"Alert Footer",id:"alert-footer",level:3},{value:"Alert Cancel Button",id:"alert-cancel-button",level:3},{value:"Alert Confirm Button",id:"alert-confirm-button",level:3},{value:"Reference",id:"reference",level:2},{value:"getAlertBackdropProps",id:"getalertbackdropprops",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"getAlertProps",id:"getalertprops",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"getAlertHeaderProps",id:"getalertheaderprops",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"getAlertHeadingProps",id:"getalertheadingprops",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"getAlertBodyProps",id:"getalertbodyprops",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"getAlertLabelProps",id:"getalertlabelprops",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"getAlertInputProps",id:"getalertinputprops",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"getAlertFooterProps",id:"getalertfooterprops",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"getAlertCancelButtonProps",id:"getalertcancelbuttonprops",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"getAlertConfirmButtonProps",id:"getalertconfirmbuttonprops",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Behavior",id:"behavior",level:2},{value:"Patterns",id:"patterns",level:3},{value:"Usage",id:"usage-1",level:3},{value:"Accessibility",id:"accessibility",level:2}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",{className:"size-xxl"},"A composable solution to create different Alert Dialog components."),(0,a.kt)(o.ZP,{github:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/Alert",figma:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsLinkBar"}),(0,a.kt)("h2",{id:"import"},"Import"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import {\n  getAlertBackdropProps,\n  getAlertBodyProps,\n  getAlertCancelButtonProps,\n  getAlertConfirmButtonProps,\n  getAlertFooterProps,\n  getAlertHeaderProps,\n  getAlertHeadingProps,\n  getAlertInputProps,\n  getAlertLabelProps,\n  getAlertProps,\n} from '@pluralsight/headless-styles'\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import type { DialogOptions } from '@pluralsight/headless-styles/types'\n")),(0,a.kt)("h2",{id:"anatomy"},"Anatomy"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Container / Wrapper"),(0,a.kt)("li",{parentName:"ol"},"Header"),(0,a.kt)("li",{parentName:"ol"},"Heading"),(0,a.kt)("li",{parentName:"ol"},"Section"),(0,a.kt)("li",{parentName:"ol"},"Body"),(0,a.kt)("li",{parentName:"ol"},"Label (optional)"),(0,a.kt)("li",{parentName:"ol"},"Input (optional)"),(0,a.kt)("li",{parentName:"ol"},"Footer / Button Group"),(0,a.kt)("li",{parentName:"ol"},"Cancel Button"),(0,a.kt)("li",{parentName:"ol"},"Confirm Button"),(0,a.kt)("li",{parentName:"ol"},"Back Drop"),(0,a.kt)("li",{parentName:"ol"},"Focus Guards")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"The Alert Dialog is a composable solution to create different Alert Dialog components like the Confirm Dialog and Prompt Dialog by combining the different parts of the Alert Dialog API."),(0,a.kt)("p",null,"See the ",(0,a.kt)("a",{parentName:"p",href:"/docs/next/reference/components/confirm-dialog"},"Confirm Dialog")," and ",(0,a.kt)("a",{parentName:"p",href:"/docs/next/reference/components/prompt-dialog"},"Prompt Dialog")," for examples of how to use the Alert Dialog."),(0,a.kt)("h3",{id:"alert-backdrop"},"Alert Backdrop"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'showLineNumbers title="AlertBackdrop component"',showLineNumbers:!0,title:'"AlertBackdrop','component"':!0},"export function AlertBackdrop(props) {\n  const { onClose, ...alertOptions } = props\n  const wrapperRef = useRef(null)\n  const { focusGuard, ...backdropProps } = getAlertBackdropProps(alertOptions)\n\n  function handleBackdropClick(event) {\n    event.stopPropagation()\n    if (wrapperRef.current === event.target) {\n      onClose()\n    }\n  }\n\n  useEscToClose(onClose)\n\n  return (\n    <div {...backdropProps.backdrop}>\n      <div {...focusGuard} />\n      <div\n        {...backdropProps.wrapper}\n        ref={wrapperRef}\n        onClick={handleBackdropClick}\n      >\n        {props.children}\n      </div>\n      <div {...focusGuard} />\n    </div>\n  )\n}\n")),(0,a.kt)("h3",{id:"alert"},"Alert"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'showLineNumbers title="Alert component"',showLineNumbers:!0,title:'"Alert','component"':!0},"function AlertEl(props, triggerRef) {\n  const { onClose, children, ...alertBackdropOptions } = props\n  const alertProps = getAlertProps()\n  const { ref, onKeyDown } = useFocusTrap(triggerRef)\n\n  return (\n    <AlertBackdrop onClose={onClose} {...alertBackdropOptions}>\n      <section {...alertProps} ref={ref} onKeyDown={onKeyDown}>\n        {children}\n      </section>\n    </AlertBackdrop>\n  )\n}\n\nexport const Alert = memo(forwardRef(AlertEl))\n")),(0,a.kt)("h3",{id:"alert-header"},"Alert Header"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'showLineNumbers title="AlertHeader component"',showLineNumbers:!0,title:'"AlertHeader','component"':!0},"export function AlertHeader(props) {\n  const headerProps = getAlertHeaderProps(props.kind)\n\n  return (\n    <header {...headerProps.header}>\n      {props.kind === 'destructive' && (\n        <span {...headerProps.iconWrapper}>\n          <DangerDiamondFilledIcon {...getIconProps(headerProps.iconOptions)} />\n        </span>\n      )}\n      {props.children}\n    </header>\n  )\n}\n")),(0,a.kt)("h3",{id:"alert-heading"},"Alert Heading"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'showLineNumbers title="AlertHeading component"',showLineNumbers:!0,title:'"AlertHeading','component"':!0},"export function AlertHeading(props) {\n  const heading = getAlertHeadingProps(props.id)\n  return <h4 {...heading}>{props.children}</h4>\n}\n")),(0,a.kt)("h3",{id:"alert-body"},"Alert Body"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'showLineNumbers title="AlertBody component"',showLineNumbers:!0,title:'"AlertBody','component"':!0},"export function AlertBody(props) {\n  const body = getAlertBodyProps(props.id)\n  return <div {...body}>{props.children}</div>\n}\n")),(0,a.kt)("h3",{id:"alert-text"},"Alert Text"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'showLineNumbers title="AlertText component"',showLineNumbers:!0,title:'"AlertText','component"':!0},"export function AlertText(props) {\n  return <p>{props.children}</p>\n}\n")),(0,a.kt)("h3",{id:"alert-label"},"Alert Label"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'showLineNumbers title="AlertLabel component"',showLineNumbers:!0,title:'"AlertLabel','component"':!0},"export function AlertLabel(props) {\n  const label = getAlertLabelProps(props.htmlFor)\n  return <label {...label}>{props.children}</label>\n}\n")),(0,a.kt)("h3",{id:"alert-input"},"Alert Input"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'showLineNumbers title="AlertInput component"',showLineNumbers:!0,title:'"AlertInput','component"':!0},"export function AlertInput(props) {\n  const { onChange, ...inputOptions } = props\n  const { fieldOptions } = getFormControlProps({\n    invalid: Boolean(props.value) && props.value !== props.confirmKey,\n  })\n  const input = getAlertInputProps({\n    ...fieldOptions,\n    ...inputOptions,\n  })\n\n  return (\n    <div {...input.inputWrapper}>\n      <SingleInput {...input.inputOptions} onChange={onChange} />\n    </div>\n  )\n}\n")),(0,a.kt)("h3",{id:"alert-footer"},"Alert Footer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'showLineNumbers title="AlertFooter component"',showLineNumbers:!0,title:'"AlertFooter','component"':!0},"export function AlertFooter(props) {\n  const footer = getAlertFooterProps()\n  return <footer {...footer}>{props.children}</footer>\n}\n")),(0,a.kt)("h3",{id:"alert-cancel-button"},"Alert Cancel Button"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'showLineNumbers title="AlertCancelButton component"',showLineNumbers:!0,title:'"AlertCancelButton','component"':!0},"export function AlertCancelButton(props) {\n  const { children, ...nativeBtnProps } = props\n  const btnProps = getAlertCancelButtonProps()\n\n  return (\n    <span {...btnProps.button}>\n      <button\n        {...getButtonProps(btnProps.btnOptions).button}\n        {...nativeBtnProps}\n      >\n        {children}\n      </button>\n    </span>\n  )\n}\n")),(0,a.kt)("h3",{id:"alert-confirm-button"},"Alert Confirm Button"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'showLineNumbers title="AlertConfirmButton component"',showLineNumbers:!0,title:'"AlertConfirmButton','component"':!0},"export function AlertActionButton(props) {\n  const { kind, ...nativeBtnProps } = props\n  const btnProps = getAlertConfirmButtonProps(kind)\n\n  return (\n    <button {...getButtonProps(btnProps.btnOptions).button} {...nativeBtnProps}>\n      {props.children}\n    </button>\n  )\n}\n")),(0,a.kt)("h2",{id:"reference"},"Reference"),(0,a.kt)("h3",{id:"getalertbackdropprops"},"getAlertBackdropProps"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getAlertBackdropProps(options: DialogOptions): ReturnProps\n")),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"interface DialogOptions {\n  bodyId: string\n  headingId?: string\n  id: string\n}\n")),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"An Object containing the ",(0,a.kt)("a",{parentName:"li",href:"#anatomy"},"anatomy")," parts of the Alert Dialog containing the Backdrop, Focus Guards, and Wrapper."),(0,a.kt)("li",{parentName:"ol"},"A className list for each anatomy part (#1) which includes an unused class consisting of the naming pattern ",(0,a.kt)("inlineCode",{parentName:"li"},"pando-alert-${anatomyPart}"),"."),(0,a.kt)("li",{parentName:"ol"},"A11y properties for each anatomy part (#1).")),(0,a.kt)("h3",{id:"getalertprops"},"getAlertProps"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getAlertProps(): ReturnProps\n")),(0,a.kt)("h4",{id:"parameters-1"},"Parameters"),(0,a.kt)("p",null,"This function does not accept any parameters."),(0,a.kt)("h4",{id:"returns-1"},"Returns"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"An Object containing the a11y properties and a className list which includes an unused class consisting of the naming pattern ",(0,a.kt)("inlineCode",{parentName:"li"},"pando-alert-section"),".")),(0,a.kt)("h3",{id:"getalertheaderprops"},"getAlertHeaderProps"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getAlertHeaderProps(kind: ConfirmDialogKind): ReturnProps\n")),(0,a.kt)("h4",{id:"parameters-2"},"Parameters"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"type ConfirmDialogKind = 'non-destructive' | 'destructive'\n")),(0,a.kt)("h4",{id:"returns-2"},"Returns"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"An Object containing a header Property which is an Object containing the a11y properties and a className list which includes an unused class consisting of the naming pattern ",(0,a.kt)("inlineCode",{parentName:"li"},"pando-alert-header"),"."),(0,a.kt)("li",{parentName:"ol"},"An optional iconOptions property which is an Object containing the preset options for the Icon API."),(0,a.kt)("li",{parentName:"ol"},"An optional iconWrapper Property which is an Object containing the className list which includes an unused class consisting of the naming pattern ",(0,a.kt)("inlineCode",{parentName:"li"},"pando-alert-icon"),".")),(0,a.kt)("h3",{id:"getalertheadingprops"},"getAlertHeadingProps"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getAlertHeadingProps(id: string): ReturnProps\n")),(0,a.kt)("h4",{id:"parameters-3"},"Parameters"),(0,a.kt)("p",null,"This function accepts a string parameter which is the id of the heading element."),(0,a.kt)("h4",{id:"returns-3"},"Returns"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"An Object containing the a11y properties and a className list which includes an unused class consisting of the naming pattern ",(0,a.kt)("inlineCode",{parentName:"li"},"pando-alert-heading"),".")),(0,a.kt)("h3",{id:"getalertbodyprops"},"getAlertBodyProps"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getAlertBodyProps(id: string): ReturnProps\n")),(0,a.kt)("h4",{id:"parameters-4"},"Parameters"),(0,a.kt)("p",null,"This function accepts a string parameter which is the id of the body element."),(0,a.kt)("h4",{id:"returns-4"},"Returns"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"An Object containing the a11y properties and a className list which includes an unused class consisting of the naming pattern ",(0,a.kt)("inlineCode",{parentName:"li"},"pando-alert-body"),".")),(0,a.kt)("h3",{id:"getalertlabelprops"},"getAlertLabelProps"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getAlertLabelProps(htmlFor: string): ReturnProps\n")),(0,a.kt)("h4",{id:"parameters-5"},"Parameters"),(0,a.kt)("p",null,"This function accepts a string parameter which is the htmlFor of the label element."),(0,a.kt)("h4",{id:"returns-5"},"Returns"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"An Object containing the a11y properties and a className list which includes an unused class consisting of the naming pattern ",(0,a.kt)("inlineCode",{parentName:"li"},"pando-alert-label"),".")),(0,a.kt)("h3",{id:"getalertinputprops"},"getAlertInputProps"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getAlertInputProps(options: InputOptions): ReturnProps\n")),(0,a.kt)("h4",{id:"parameters-6"},"Parameters"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"./input#import"},"See InputOptions")),(0,a.kt)("h4",{id:"returns-6"},"Returns"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"An inputOptions property containing the preset options for the Input API."),(0,a.kt)("li",{parentName:"ol"},"An inputWrapper properity containing an of the a11y properties and a className list which includes an unused class consisting of the naming pattern ",(0,a.kt)("inlineCode",{parentName:"li"},"pando-alert-input-wrapper"),".")),(0,a.kt)("h3",{id:"getalertfooterprops"},"getAlertFooterProps"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getAlertFooterProps(): ReturnProps\n")),(0,a.kt)("h4",{id:"parameters-7"},"Parameters"),(0,a.kt)("p",null,"This function does not accept any parameters."),(0,a.kt)("h4",{id:"returns-7"},"Returns"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"An Object containing the a11y properties and a className list which includes an unused class consisting of the naming pattern ",(0,a.kt)("inlineCode",{parentName:"li"},"pando-alert-footer"),".")),(0,a.kt)("h3",{id:"getalertcancelbuttonprops"},"getAlertCancelButtonProps"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getAlertCancelButtonProps(): ReturnProps\n")),(0,a.kt)("h4",{id:"parameters-8"},"Parameters"),(0,a.kt)("p",null,"This function does not accept any parameters."),(0,a.kt)("h4",{id:"returns-8"},"Returns"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"A buttonOptions property containing the preset options for the Button API."),(0,a.kt)("li",{parentName:"ol"},"A button property containing the a11y properties and a className list which includes an unused class consisting of the naming pattern ",(0,a.kt)("inlineCode",{parentName:"li"},"pando-alert-cancel"),".")),(0,a.kt)("h3",{id:"getalertconfirmbuttonprops"},"getAlertConfirmButtonProps"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getAlertConfirmButtonProps(kind: ConfirmDialogKind): ReturnProps\n")),(0,a.kt)("h4",{id:"parameters-9"},"Parameters"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"type ConfirmDialogKind = 'non-destructive' | 'destructive'\n")),(0,a.kt)("h4",{id:"returns-9"},"Returns"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"A buttonOptions property containing the preset options for the Button API."),(0,a.kt)("li",{parentName:"ol"},"A button property containing the a11y properties and a className list which includes an unused class consisting of the naming pattern ",(0,a.kt)("inlineCode",{parentName:"li"},"pando-alert-confirm"),".")),(0,a.kt)("h2",{id:"behavior"},"Behavior"),(0,a.kt)("p",null,"Alert dialogs are to be used to interrupt the user's task with important, critical, or warning information. This is the Pluralsight themed versions of any browser's native alert dialog functions."),(0,a.kt)("h3",{id:"patterns"},"Patterns"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Do")," use the Alert Dialog parts to create any type of Alert Dialog you need."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Don't")," use Alert Dialog parts to create a Modal."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Do")," only use the Alert Dialog parts that are necessary for your Dialog."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Don't")," manipulate or add any additional components outside of what is provided in the Alert Dialog."),(0,a.kt)("h3",{id:"usage-1"},"Usage"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Do")," use sparingly in a user experience."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Don't")," abuse the use of this Dialog by using multiple times within a page."),(0,a.kt)("h2",{id:"accessibility"},"Accessibility"),(0,a.kt)("p",null,"The Pando Alert Dialog, Button, and Icon APIs combined with semantic HTML allow the Alert Dialog to be fully accessible and screen-readable."))}d.isMDXComponent=!0}}]);