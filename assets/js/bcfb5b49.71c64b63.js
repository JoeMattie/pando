"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4385],{7426:function(e,t,n){n.d(t,{Z:function(){return C}});var a=n(45721),o=n(2985),r=n(40736),i=n(81648),l=n(35311),c=n(82937),s=n(47564),u=n(75046),d=n(95049),m=n(48089);function p(e){const{onClick:t,indeterminate:n}=e,r=(0,o.Y)({disabled:e.disabled,invalid:e.invalid,readOnly:e.readOnly,required:e.required}),p=(0,l.A)({...e,...r}),{checked:h,...k}=p.input;return a.createElement("div",p.checkboxContainer,t&&a.createElement("input",(0,i.Z)({},k,{checked:h,onChange:e.onClick})),!t&&a.createElement("input",(0,i.Z)({},k,{defaultChecked:h})),a.createElement("span",p.checkboxControl,a.createElement(c.d,{when:h&&!n,fallback:null},a.createElement(s.J,{icon:d.Z,size:"s"})),a.createElement(c.d,{when:n&&h,fallback:null},a.createElement(s.J,{icon:m.Z,size:"s"}))),a.createElement(u._,{htmlFor:p.id},e.label))}const h={justifyContent:"space-between",width:"100%"};function k(){return a.createElement(o.s,null,a.createElement("div",{style:{...h}},a.createElement(p,{checked:!0,id:"checked",label:"Checked"})))}function b(){return a.createElement(o.s,null,a.createElement("div",{style:{...h}},a.createElement(p,{checked:!0,indeterminate:!0,id:"indeterminate",label:"Indeterminate"})))}function f(){return a.createElement(o.s,{disabled:!0},a.createElement("div",{style:{...h}},a.createElement(p,{checked:!0,id:"disabled",label:"Disabled"})))}function g(){return a.createElement(o.s,{invalid:!0},a.createElement("div",{style:{...h}},a.createElement(p,{checked:!0,id:"invalid",label:"Invalid"})))}function v(){return a.createElement(o.s,{readOnly:!0},a.createElement("div",{style:{...h}},a.createElement(p,{checked:!0,id:"readOnly",label:"Read only"})))}function x(){return a.createElement(o.s,{required:!0},a.createElement("div",{style:{...h}},a.createElement(p,{checked:!0,id:"required",label:"Required"})))}var C=function(){return a.createElement(r.Z,null,a.createElement("div",{style:{display:"grid",gridTemplateColumns:"1fr 1fr",gap:"1rem 5rem",width:"75%"}},a.createElement(k,null),a.createElement(f,null),a.createElement(g,null),a.createElement(v,null),a.createElement(x,null),a.createElement(b,null)))}},40736:function(e,t,n){n.d(t,{Z:function(){return i}});var a=n(45721),o={base:"base_M3w8",column:"column_mb9C base_M3w8",grid:"grid_EiLr base_M3w8"};const r={alignItems:"center",column:!1,gridCols:0,justifyContent:"space-between",textAlign:"center",type:"base"};function i(e){void 0===e&&(e=r);const t=e.type??r.type,n=e.gridColumns?`repeat(${e.gridColumns}, minmax(auto, max-content))`:"initial",i={alignItems:e.alignItems,gridTemplateColumns:n,justifyContent:e.justifyContent,textAlign:e.textAlign??"center",gap:e.gap??"1rem",columnGap:e.columnGap};return a.createElement("div",{className:o[t],style:i},e.children)}},15566:function(e,t,n){n.d(t,{dS:function(){return s},fK:function(){return c},C9:function(){return u},ZP:function(){return d}});var a=n(45721),o=n(84140),r="linkList_sLwJ",i="linkItem_ESvF";function l(e){return a.createElement("li",{className:i},a.createElement(o.Z,e,e.children))}function c(e){return a.createElement(l,{href:e.href},e.children??"View on Github")}function s(e){return a.createElement(l,{href:e.href},"View on Figma")}function u(e){return a.createElement("ul",{className:r},e.children)}function d(e){const{figma:t,github:n}=e;return a.createElement("ul",{className:r},n&&a.createElement(c,{href:n}),t&&a.createElement(s,{href:t}))}},45945:function(e,t,n){n(45721)},84140:function(e,t,n){n.d(t,{Z:function(){return c}});var a=n(45721),o=n(32469),r=n(63069),i=n(7363),l=n(65046);function c(e){const{href:t}=e,n=(0,r.L)({ariaHidden:!0,size:"s"}),c=t.includes("github")?i.Z:l.Z;return a.createElement(o.h,e,a.createElement(c,n),e.children)}},72753:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d}});var a=n(81648),o=(n(45721),n(70167)),r=n(7426),i=n(15566);n(45945);const l={tags:["multi-select","field","form"],title:"Checkbox"},c=void 0,s={unversionedId:"reference/components/checkbox",id:"version-0.4.1/reference/components/checkbox",title:"Checkbox",description:"Used when a user needs to select multiple values from options in a form.",source:"@site/versioned_docs/version-0.4.1/reference/components/checkbox.mdx",sourceDirName:"reference/components",slug:"/reference/components/checkbox",permalink:"/docs/reference/components/checkbox",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/versioned_docs/version-0.4.1/reference/components/checkbox.mdx",tags:[{label:"multi-select",permalink:"/docs/tags/multi-select"},{label:"field",permalink:"/docs/tags/field"},{label:"form",permalink:"/docs/tags/form"}],version:"0.4.1",lastUpdatedBy:"Casey Baggz",frontMatter:{tags:["multi-select","field","form"],title:"Checkbox"},sidebar:"reference",previous:{title:"Button",permalink:"/docs/reference/components/button"},next:{title:"Circular Progress",permalink:"/docs/reference/components/circular-progress"}},u={},d=[{value:"Import",id:"import",level:2},{value:"Anatomy",id:"anatomy",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Checkbox",id:"basic-checkbox",level:3},{value:"Indeterminate Checkbox",id:"indeterminate-checkbox",level:3},{value:"States",id:"states",level:3},{value:"Reference",id:"reference",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Behavior",id:"behavior",level:2},{value:"Layout",id:"layout",level:3},{value:"Usage",id:"usage-1",level:3},{value:"Interactions",id:"interactions",level:3},{value:"Accessibility",id:"accessibility",level:2}],m={toc:d};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",{className:"size-xxl"},"Used when a user needs to select multiple values from options in a form."),(0,o.kt)(i.ZP,{github:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/Checkbox",figma:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsLinkBar"}),(0,o.kt)("h2",{id:"import"},"Import"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { getCheckboxProps } from '@pluralsight/headless-styles'\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface CheckboxOptions {\n  checked: boolean\n  disabled?: boolean\n  id: string\n  indeterminate?: boolean\n  invalid?: boolean\n  name: string\n  readOnly?: boolean\n  required?: boolean\n  value: string\n}\n\ngetCheckboxProps(options?: CheckboxOptions)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import type { CheckboxOptions } from '@pluralsight/headless-styles/types'\n")),(0,o.kt)("h2",{id:"anatomy"},"Anatomy"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Container"),(0,o.kt)("li",{parentName:"ol"},"Control"),(0,o.kt)("li",{parentName:"ol"},"Input"),(0,o.kt)("li",{parentName:"ol"},"Label")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("h3",{id:"basic-checkbox"},"Basic Checkbox"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function BasicCheckbox() {\n  const [checked, setChecked] = useState(false)\n  const { fieldOptions } = getFormControlProps()\n  const checkbox = getCheckboxProps({ ...fieldOptions, checked })\n  const { value, ...labelProps } = getFormLabelProps({\n    value: 'Sign up for something.',\n  })\n  const icon = getIconProps(checkbox.iconOptions)\n\n  function handleChange() {\n    setChecked((prev) => !prev)\n  }\n\n  return (\n    <label {...checkbox.checkboxContainer}>\n      <input {...checkbox.input} onChange={handleChange} />\n      <span {...checkbox.checkboxControl}>\n        {checkbox.input.checked && <CheckIcon {...icon} />}\n      </span>\n      <span {...labelProps}>{value}</span>\n    </label>\n  )\n}\n")),(0,o.kt)("h3",{id:"indeterminate-checkbox"},"Indeterminate Checkbox"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function IndeterminateCheckbox() {\n  const { fieldOptions } = getFormControlProps()\n  const checkbox = getCheckboxProps({\n    ...fieldOptions,\n    indeterminate: true,\n    checked: true,\n  })\n  const { value, ...labelProps } = getFormLabelProps({\n    value: 'Sign up for something.',\n  })\n  const icon = getIconProps(checkbox.iconOptions)\n\n  return (\n    <label {...checkbox.checkboxContainer}>\n      <input {...checkbox.input} onChange={() => null} />\n      <span {...checkbox.checkboxControl}>\n        {checkbox.input.checked && <IndeterminateIcon {...icon} />}\n      </span>\n    </label>\n  )\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'showLineNumbers title="How to determine Indeterminate."',showLineNumbers:!0,title:'"How',to:!0,determine:!0,'Indeterminate."':!0},"const [checkboxOptions, setCheckboxOptions] = useState({\n  email: false,\n  sms: false,\n  phone: false\n})\nconst checkedItems = Object.keys(checkboxOptions).map((optionItem) => (\n  return checkboxOptions[optionItem]\n))\nconst allChecked = checkedItems.every(Boolean)\nconst isIndeterminate = checkedItems.some(Boolean) && !allChecked\n")),(0,o.kt)("h3",{id:"states"},"States"),(0,o.kt)(r.Z,{mdxType:"CheckboxStates"}),(0,o.kt)("admonition",{title:"Form field and state",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"In order to easily manage the state and maintain Accessibility of your form field, the basic state statuses should come from the result of the FormControl API.")),(0,o.kt)("h2",{id:"reference"},"Reference"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"getCheckboxProps(options?: CheckboxOptions)\n")),(0,o.kt)("h3",{id:"parameters"},"Parameters"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"options"),": An Object containing properties derived from the FormControl.fieldOptions results (disabled, invalid, readOnly, required) to determine the styling of the Checkbox state. An id and optional name property that accept a String value which connect Accessibility properties from the label to the Checkbox. A checked and optional indeterminate property that accept a Boolean value to determine the styling of the Checkbox state. A value property that accepts a String for form submission.")),(0,o.kt)("h3",{id:"returns"},"Returns"),(0,o.kt)("p",null,"An Object matching the ",(0,o.kt)("a",{parentName:"p",href:"#anatomy"},"Anatomy")," containing ",(0,o.kt)("inlineCode",{parentName:"p"},"className")," and a11y properties relevant to each element/section. Additionally, it returns an ",(0,o.kt)("inlineCode",{parentName:"p"},"iconOptions")," Object to use as the parameters for the Icon API."),(0,o.kt)("h2",{id:"behavior"},"Behavior"),(0,o.kt)("h3",{id:"layout"},"Layout"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Do")," use multiple Checkboxes in a vertical list."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Don't")," use multiple Checkboxes in a single row."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Do")," provide a Label with a Checkbox."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Don't")," use a Checkbox inline without a Label."),(0,o.kt)("h3",{id:"usage-1"},"Usage"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Do"),' use a Checkbox for giving users an option to "opt-in" to a choice.'),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Don't")," use a Checkbox for showing/hiding content."),(0,o.kt)("h3",{id:"interactions"},"Interactions"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Do")," use the indeterminate state for a parent option of a nested group."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Don't")," use the indeterminate state for a single option within a group."),(0,o.kt)("h2",{id:"accessibility"},"Accessibility"),(0,o.kt)("p",null,"The Pando Checkbox, and Icon APIs combined with semantic HTML allow the Checkbox to be fully accessible and screen-readable."))}p.isMDXComponent=!0}}]);