"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1182],{85640:function(e,t,n){n.d(t,{Vx:function(){return s},fx:function(){return p},xE:function(){return c}});n(55795),n(95070),n(98082),n(80881),n(77562),n(35578),n(86236),n(85959),n(85393),n(15401),n(80893),n(79162),n(97290),n(94652),n(99459),n(11737),n(47924);var i=n(89205);function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==r(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,t||"default");if("object"!==r(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===r(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e){var t;return o(o({},(0,i.Tz)(e)),{},{size:null!==(t=null==e?void 0:e.size)&&void 0!==t?t:"m"})}function c(e){return{thumbClass:"pando_".concat(e,"SwitchThumb"),trackClass:"pando_".concat(e,"SwitchTrack")}}function p(e){var t=(0,i.LA)(e);return{wrapper:{},input:o(o({},t.input),{},{role:"switch",type:"checkbox"}),switchContainer:{},switchTrack:o({},t.control),switchThumb:o({},t.container)}}},98314:function(e,t,n){n.d(t,{_:function(){return p}});n(55795),n(95070),n(98082),n(80881),n(77562),n(35578),n(86236),n(85959),n(85393),n(15401),n(80893),n(79162),n(97290),n(94652),n(99459),n(11737),n(47924);var i=n(83314),r=n(85640);function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==a(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,t||"default");if("object"!==a(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===a(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var c="pando-switch";function p(e){var t=(0,r.Vx)(e),n=t.size,a=(0,r.fx)(t),o=(0,r.xE)(n),s=o.thumbClass,p=o.trackClass;return l(l({},a),{},{wrapper:(0,i.zW)("".concat(c,"-wrapper"),"pando_switchWrapper"),input:l(l({},a.input),(0,i.zW)("".concat(c,"-input"),"pando_switchInput")),switchContainer:(0,i.zW)("".concat(c,"-container"),"pando_switchContainer"),switchTrack:l(l({},a.switchTrack),(0,i.zW)("".concat(c,"-track"),p)),switchThumb:l(l({},a.switchThumb),(0,i.zW)("".concat(c,"-thumb"),s))})}},11620:function(e,t,n){const i=n(86521);t.Z=function(e){return(0,i.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",role:"img",fill:"currentColor",className:"ps-icon-svg","aria-label":"figma icon",...e,children:(0,i.jsx)("path",{fillRule:"evenodd",d:"M4.25 5.5A4.25 4.25 0 0 1 8.5 1.25h7A4.25 4.25 0 0 1 17.912 9a4.25 4.25 0 1 1-5.162 6.74v3.76A4.25 4.25 0 1 1 6.088 16a4.245 4.245 0 0 1-1.838-3.5c0-1.452.728-2.733 1.838-3.5A4.245 4.245 0 0 1 4.25 5.5Zm4.25 9.75h2.75v-5.5H8.5a2.75 2.75 0 1 0 0 5.5Zm2.75 1.5H8.5a2.75 2.75 0 1 0 2.75 2.75v-2.75Zm7-11.25a2.75 2.75 0 0 1-2.75 2.75h-2.75v-5.5h2.75a2.75 2.75 0 0 1 2.75 2.75ZM15.5 9.75a2.75 2.75 0 1 0 0 5.5 2.75 2.75 0 0 0 0-5.5Zm-7-1.5h2.75v-5.5H8.5a2.75 2.75 0 0 0 0 5.5Z",clipRule:"evenodd"})})}},22153:function(e,t,n){const i=n(86521);t.Z=function(e){return(0,i.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg","aria-label":"github logo",viewBox:"0 0 24 24",role:"img",fill:"currentColor",className:"ps-icon-svg",...e,children:(0,i.jsx)("path",{fillRule:"evenodd",d:"M2 12c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12a10 10 0 0 0-20 0Z",clipRule:"evenodd"})})}},40736:function(e,t,n){n.d(t,{Z:function(){return o}});var i=n(45721),r={base:"base_M3w8",column:"column_mb9C base_M3w8",grid:"grid_EiLr base_M3w8"};const a={alignItems:"center",column:!1,gridCols:0,justifyContent:"space-between",textAlign:"center",type:"base"};function o(e){void 0===e&&(e=a);const t=e.type??a.type,n=e.gridColumns?`repeat(${e.gridColumns}, minmax(auto, max-content))`:"initial",o={alignItems:e.alignItems,gridTemplateColumns:n,justifyContent:e.justifyContent,textAlign:e.textAlign??"center",gap:e.gap??"1rem",columnGap:e.columnGap};return i.createElement("div",{className:r[t],style:o},e.children)}},15566:function(e,t,n){n.d(t,{dS:function(){return p},fK:function(){return c},C9:function(){return u},ZP:function(){return m}});var i=n(81648),r=n(45721),a=n(34989),o=n(84140),l="grid_cC7H";function s(e){return r.createElement("li",(0,a.n)({colSpan:3}),r.createElement(o.Z,e,e.children))}function c(e){return r.createElement(s,{href:e.href},e.children??"View on Github")}function p(e){return r.createElement(s,{href:e.href},"View on Figma")}function u(e){const{className:t,...n}=(0,a.X)({cols:12,gap:8});return r.createElement("ul",(0,i.Z)({className:`${t} ${l}`},n),e.children)}function m(e){const{figma:t,github:n}=e,{className:o,...s}=(0,a.X)({cols:12,gap:8});return r.createElement("ul",(0,i.Z)({className:`${o} ${l}`},s),n&&r.createElement(c,{href:n}),t&&r.createElement(p,{href:t}))}},45945:function(e,t,n){n(45721)},34745:function(e,t,n){n.d(t,{Z:function(){return p}});var i=n(45721),r=n(40736),a=n(81648),o=n(32750),l=n(98314),s=n(84975);var c=function(e){const{control:t,fieldOptions:n}=(0,o.N)(e),r=(0,l._)({...e,...n}),{value:c,...p}=(0,s.H)({...n,htmlFor:e.id,size:e.size,value:e.label});return i.createElement("div",t,i.createElement("div",r.wrapper,i.createElement("label",p,c),i.createElement("label",r.switchContainer,i.createElement("input",(0,a.Z)({},r.input,{onClick:e.onClick})),i.createElement("span",r.switchTrack,i.createElement("span",r.switchThumb)))))};var p=function(){const[e,t]=(0,i.useState)(!1);return i.createElement(r.Z,{type:"grid",gridColumns:"2",columnGap:"5rem",justifyContent:"start"},i.createElement(c,{id:"checked-example",label:"checked:",checked:!0}),i.createElement(c,{id:"disabled-example",label:"disabled:",disabled:!0}),i.createElement(c,{id:"invalid-example",label:"invalid:",invalid:!0}),i.createElement(c,{id:"readonly-example",label:"readonly:",readonly:!0}),i.createElement(c,{id:"required-example",label:"required:",required:!0,checked:e,onClick:function(e){t(e.target.checked)}}))}},84140:function(e,t,n){n.d(t,{Z:function(){return s}});var i=n(45721),r=n(11697),a=n(17062),o=n(22153),l=n(11620);function s(e){const{href:t}=e,n=(0,a.L)({ariaHidden:!0,size:"s"}),s=t.includes("github")?o.Z:l.Z;return i.createElement(r.h,e,i.createElement(s,n),e.children)}},23019:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var i=n(81648),r=(n(45721),n(70167)),a=n(34745),o=n(15566);n(45945);const l={tags:["toggle","single-select","field","form"],title:"Switch"},s=void 0,c={unversionedId:"reference/components/switch",id:"reference/components/switch",title:"Switch",description:"Used as an alternative to the Checkbox for choosing between enabled and",source:"@site/docs/reference/components/switch.mdx",sourceDirName:"reference/components",slug:"/reference/components/switch",permalink:"/docs/next/reference/components/switch",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/components/switch.mdx",tags:[{label:"toggle",permalink:"/docs/next/tags/toggle"},{label:"single-select",permalink:"/docs/next/tags/single-select"},{label:"field",permalink:"/docs/next/tags/field"},{label:"form",permalink:"/docs/next/tags/form"}],version:"current",lastUpdatedBy:"Tom Pietrosanti",frontMatter:{tags:["toggle","single-select","field","form"],title:"Switch"},sidebar:"reference",previous:{title:"Skeleton",permalink:"/docs/next/reference/components/skeleton"},next:{title:"Table",permalink:"/docs/next/reference/components/table"}},p={},u=[{value:"Import",id:"import",level:2},{value:"Anatomy",id:"anatomy",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Switch",id:"basic-switch",level:3},{value:"Sizes",id:"sizes",level:3},{value:"Size Mapping",id:"size-mapping",level:4},{value:"States",id:"states",level:3},{value:"Reference",id:"reference",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Behavior",id:"behavior",level:2},{value:"Layout",id:"layout",level:3},{value:"Usage",id:"usage-1",level:3},{value:"Accessibility",id:"accessibility",level:2}],m={toc:u};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",{className:"size-xxl"},"Used as an alternative to the Checkbox for choosing between enabled and disabled states."),(0,r.kt)(o.ZP,{github:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/Switch",figma:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsLinkBar"}),(0,r.kt)("h2",{id:"import"},"Import"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { getSwitchProps } from '@pluralsight/headless-styles'\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"interface SwitchOptions {\n  checked: boolean\n  disabled?: boolean\n  id: string\n  indeterminate?: boolean\n  invalid?: boolean\n  name: string\n  readOnly?: boolean\n  required?: boolean\n  size?: 's' | 'm'\n  value: string\n}\n\ngetSwitchProps(options?: SwitchOptions)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import type { SwitchOptions } from '@pluralsight/headless-styles/types'\n")),(0,r.kt)("h2",{id:"anatomy"},"Anatomy"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Container"),(0,r.kt)("li",{parentName:"ol"},"Input"),(0,r.kt)("li",{parentName:"ol"},"Track"),(0,r.kt)("li",{parentName:"ol"},"Thumb"),(0,r.kt)("li",{parentName:"ol"},"Label")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("h3",{id:"basic-switch"},"Basic Switch"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function BasicSwitch() {\n  const [checked, setChecked] = useState(false)\n  const { control, fieldOptions } = getFormControlProps()\n  const switchProps = getSwitchProps({\n    ...fieldOptions,\n    checked,\n    id: 'notfications',\n    name: 'add_notifications',\n  })\n  const { value, ...labelProps } = getFormLabelProps({\n    htmlFor: 'notifications',\n    value: 'Sign up for notifications',\n  })\n\n  function handleChange() {\n    setChecked((prev) => !prev)\n  }\n\n  return (\n    <div {...control}>\n      <div {...switchProps.wrapper}>\n        <label {...labelProps}>{value}</label>\n        <label {...switchProps.switchContainer}>\n          <input {...switchProps.input} onClick={handleChange} />\n          <span {...switchProps.switchTrack}>\n            <span {...switchProps.switchThumb} />\n          </span>\n        </label>\n      </div>\n    </div>\n  )\n}\n")),(0,r.kt)("h3",{id:"sizes"},"Sizes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function SwitchSizes() {\n  const [checked, setChecked] = useState(false)\n  const { fieldOptions } = getFormControlProps()\n  const switchProps = getSwitchProps({\n    ...fieldOptions,\n    checked,\n    id: 'notfications',\n    name: 'add_notifications',\n  })\n  const { value, ...labelProps } = getFormLabelProps({\n    htmlFor: 'notifications',\n    value: 'Sign up for notifications',\n  })\n  const smallSwitchProps = getSwitchProps({\n    ...fieldOptions,\n    checked,\n    id: 'notfications',\n    name: 'add_notifications',\n    size: 's',\n  })\n  const smallLabelProps = getFormLabelProps({\n    htmlFor: 'notifications',\n    value: 'Sign up for notifications',\n  })\n\n  function handleChange() {\n    setChecked((prev) => !prev)\n  }\n\n  return (\n    <form>\n      <div {...switchProps.wrapper}>\n        <label {...labelProps}>{value}</label>\n        <label {...switchProps.switchContainer}>\n          <input {...switchProps.input} onClick={handleChange} />\n          <span {...switchProps.switchTrack}>\n            <span {...switchProps.switchThumb} />\n          </span>\n        </label>\n      </div>\n\n      <div {...smallSwitchProps.wrapper}>\n        <label {...smallLabelProps}>{smallLabelProps.value}</label>\n        <label {...smallSwitchProps.switchContainer}>\n          <input {...smallSwitchProps.input} onClick={handleChange} />\n          <span {...smallSwitchProps.switchTrack}>\n            <span {...smallSwitchProps.switchThumb} />\n          </span>\n        </label>\n      </div>\n    </form>\n  )\n}\n")),(0,r.kt)("h4",{id:"size-mapping"},"Size Mapping"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Switch size rules."',title:'"Switch',size:!0,'rules."':!0},"{\n  s: 'Use in condensed areas where the default size is too large.',\n  m: 'Should be used in most, if not all cases.'\n}\n")),(0,r.kt)("h3",{id:"states"},"States"),(0,r.kt)(a.Z,{mdxType:"SwitchStates"}),(0,r.kt)("admonition",{title:"Form field and state",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"In order to easily manage the state and maintain Accessibility of your form field, the basic state statuses should come from the result of the FormControl API.")),(0,r.kt)("h2",{id:"reference"},"Reference"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"getSwitchProps(options?: SwitchOptions)\n")),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),": An Object containing properties derived from the FormControl.fieldOptions results (disabled, invalid, readOnly, required) to determine the styling of the Switch state. An id and optional name property that accept a String value which connected Accessibility properties from the label to the Switch. A checked and optional indeterminate property that accept a Boolean value to determine the styling of the Switch state. A value property that accepts a String for form submission. An optional size property that accepts a String value of ",(0,r.kt)("inlineCode",{parentName:"li"},"'s' | 'm'")," to determine the styling of the Switch elements relative to the size.")),(0,r.kt)("h3",{id:"returns"},"Returns"),(0,r.kt)("p",null,"An Object matching the ",(0,r.kt)("a",{parentName:"p",href:"#anatomy"},"Anatomy")," containing ",(0,r.kt)("inlineCode",{parentName:"p"},"className")," and a11y properties relevant to each element/section."),(0,r.kt)("h2",{id:"behavior"},"Behavior"),(0,r.kt)("h3",{id:"layout"},"Layout"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Do")," use multiple Switches in a vertical list."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Don't")," use multiple Switches in a single row."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Do")," provide a Label with a Switch."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Don't")," use a Switch inline without a Label. Instead use a hidden Label."),(0,r.kt)("h3",{id:"usage-1"},"Usage"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Do")," use a Switch for giving users an way to opt-in to an optional feature."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Don't")," use a Switch for collecting consent. Instead us a ",(0,r.kt)("a",{parentName:"p",href:"/docs/next/reference/components/checkbox"},"Checkbox"),"."),(0,r.kt)("h2",{id:"accessibility"},"Accessibility"),(0,r.kt)("p",null,"The Pando Switch API combined with semantic HTML allow the Switch to be fully accessible and screen-readable."))}d.isMDXComponent=!0}}]);