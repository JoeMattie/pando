"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8916],{6115:function(e,t,s){const r=s(86521);t.Z=function(e){return(0,r.jsx)("svg",{viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",role:"img",fill:"currentColor",className:"ps-icon-svg","aria-label":"figma icon",...e,children:(0,r.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M4.25 5.5A4.25 4.25 0 0 1 8.5 1.25h7A4.25 4.25 0 0 1 17.912 9a4.25 4.25 0 1 1-5.162 6.74v3.76A4.25 4.25 0 1 1 6.088 16a4.245 4.245 0 0 1-1.838-3.5c0-1.452.728-2.733 1.838-3.5A4.245 4.245 0 0 1 4.25 5.5Zm4.25 9.75h2.75v-5.5H8.5a2.75 2.75 0 1 0 0 5.5Zm2.75 1.5H8.5a2.75 2.75 0 1 0 2.75 2.75v-2.75Zm7-11.25a2.75 2.75 0 0 1-2.75 2.75h-2.75v-5.5h2.75a2.75 2.75 0 0 1 2.75 2.75ZM15.5 9.75a2.75 2.75 0 1 0 0 5.5 2.75 2.75 0 0 0 0-5.5Zm-7-1.5h2.75v-5.5H8.5a2.75 2.75 0 0 0 0 5.5Z"})})}},31026:function(e,t,s){const r=s(86521);t.Z=function(e){return(0,r.jsx)("svg",{"aria-label":"github logo",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",role:"img",fill:"currentColor",className:"ps-icon-svg",...e,children:(0,r.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M2 12c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12a10 10 0 0 0-20 0Z"})})}},95428:function(e,t,s){s.d(t,{Z:function(){return p}});var r=s(81648),n=s(45721),a=s(49807),i=s(69477),o="grid_cC7H";function l(e){return n.createElement("li",(0,a.a)({colSpan:2}),n.createElement(i.Z,e,e.children))}function p(e){const{figma:t,github:s}=e,{className:i,...p}=(0,a.g)({cols:12,gap:8});return n.createElement("ul",(0,r.Z)({className:`${i} ${o}`},p),s&&n.createElement(l,{href:s},"View on Github"),t&&n.createElement(l,{href:t},"Figma Design"))}},25302:function(e,t,s){s(45721)},69477:function(e,t,s){s.d(t,{Z:function(){return l}});var r=s(45721),n=s(91270),a=s(6214),i=s(31026),o=s(6115);function l(e){const{href:t}=e,s=(0,n.g)({href:t}),l=(0,a.g)(s.iconOptions),p=t.includes("github")?i.Z:o.Z;return r.createElement("a",s.link,r.createElement(p,l),e.children)}},34706:function(e,t,s){s.r(t),s.d(t,{assets:function(){return p},contentTitle:function(){return o},default:function(){return u},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return c}});var r=s(81648),n=(s(45721),s(70167)),a=s(95428);s(25302);const i={tags:["linear progress"],title:"Progress"},o=void 0,l={unversionedId:"reference/components/progress",id:"reference/components/progress",title:"Progress",description:"Used to display the progress status for a task that takes a long time or",source:"@site/docs/reference/components/progress.mdx",sourceDirName:"reference/components",slug:"/reference/components/progress",permalink:"/docs/next/reference/components/progress",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/components/progress.mdx",tags:[{label:"linear progress",permalink:"/docs/next/tags/linear-progress"}],version:"current",lastUpdatedBy:"tim-roberts1",frontMatter:{tags:["linear progress"],title:"Progress"},sidebar:"reference",previous:{title:"Popover",permalink:"/docs/next/reference/components/popover"},next:{title:"Radio",permalink:"/docs/next/reference/components/radio"}},p={},c=[{value:"Import",id:"import",level:2},{value:"Anatomy",id:"anatomy",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Progress",id:"basic-progress",level:3},{value:"Sizes",id:"sizes",level:3},{value:"Size Mapping",id:"size-mapping",level:4},{value:"Reference",id:"reference",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Behavior",id:"behavior",level:2},{value:"Loading",id:"loading",level:3},{value:"Text",id:"text",level:3},{value:"Sizing",id:"sizing",level:3},{value:"Accessbility",id:"accessbility",level:2}],g={toc:c};function u(e){let{components:t,...s}=e;return(0,n.kt)("wrapper",(0,r.Z)({},g,s,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",{className:"size-xxl"},"Used to display the progress status for a task that takes a long time or consists of several steps."),(0,n.kt)(a.Z,{github:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/Progress",figma:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsLinkBar"}),(0,n.kt)("h2",{id:"import"},"Import"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"import { getProgressProps } from '@pluralsight/headless-styles'\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"interface ProgressOptions {\n  ariaLabel: string\n  kind?: 'linear' | 'inset'\n  max?: number\n  min?: number\n  now?: number\n  size?: 'xs' | 's'\n}\n\ngetProgressProps(options?: ProgressOptions)\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"import type { ProgressOptions } from '@pluralsight/headless-styles/types'\n")),(0,n.kt)("h2",{id:"anatomy"},"Anatomy"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Container"),(0,n.kt)("li",{parentName:"ol"},"Bar")),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("h3",{id:"basic-progress"},"Basic Progress"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function BasicProgress() {\n  const progress = getProgressProps({\n    ariaLabel: 'default basic progress example',\n    now: 50,\n  })\n  const insetProgress = getProgressProps({\n    ariaLabel: 'inset basic progress example',\n    kind: 'inset',\n    now: 60,\n  })\n\n  return (\n    <div>\n      <div {...progress.wrapper} style={{ marginBottom: '1rem' }}>\n        <div {...progress.bar} />\n      </div>\n      <div {...insetProgress.wrapper}>\n        <div {...insetProgress.bar} />\n      </div>\n    </div>\n  )\n}\n")),(0,n.kt)("h3",{id:"sizes"},"Sizes"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function BasicProgress() {\n  const progress = getProgressProps({\n    ariaLabel: 'default basic progress example',\n    now: 50,\n    size: 'xs',\n  })\n  const insetProgress = getProgressProps({\n    ariaLabel: 'inset basic progress example',\n    kind: 'inset',\n    now: 60,\n    size: 's',\n  })\n\n  return (\n    <div>\n      <div {...progress.wrapper} style={{ marginBottom: '1rem' }}>\n        <div {...progress.bar} />\n      </div>\n      <div {...insetProgress.wrapper}>\n        <div {...insetProgress.bar} />\n      </div>\n    </div>\n  )\n}\n")),(0,n.kt)("h4",{id:"size-mapping"},"Size Mapping"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Circular Progress size rules."',title:'"Circular',Progress:!0,size:!0,'rules."':!0},"{\n  xs: 'Should only be used when the default size (s) is too large.',\n  s: 'Should be used in most, if not all cases.'\n}\n")),(0,n.kt)("h2",{id:"reference"},"Reference"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"getProgressProps(options?: ProgressOptions)\n")),(0,n.kt)("h3",{id:"parameters"},"Parameters"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"options"),": An ariaLabel property that accepts a String value to add accessbility support to the elements. An optional kind property that accepts a String value of ",(0,n.kt)("inlineCode",{parentName:"li"},"'linear' | 'inset'")," to determine the animation of the SVG progress elements. Optional min, max, or now properties that accept a Number value to set the parameters for styling the progress amount. An optional size property that accepts a String value of ",(0,n.kt)("inlineCode",{parentName:"li"},"'xs' | 's'")," to determine the size styling of the Progress.")),(0,n.kt)("h3",{id:"returns"},"Returns"),(0,n.kt)("p",null,"An Object matching the ",(0,n.kt)("a",{parentName:"p",href:"#anatomy"},"Anatomy")," containing ",(0,n.kt)("inlineCode",{parentName:"p"},"className")," and a11y properties relevant to each element/section."),(0,n.kt)("h2",{id:"behavior"},"Behavior"),(0,n.kt)("h3",{id:"loading"},"Loading"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Do")," use Progress to display an update of information to a ",(0,n.kt)("strong",{parentName:"p"},"specific part of a previously loaded page"),", like a video."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Don't")," use the Progress to show page load progress. Instead, use a Skeleton."),(0,n.kt)("h3",{id:"text"},"Text"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Do")," use text describing the progress in close proximity."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Don't")," use text or other elements within the Progress."),(0,n.kt)("h3",{id:"sizing"},"Sizing"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Do")," use the default size for all use cases where possible of the Progress."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Don't"),' use the "xs" size ',(0,n.kt)("em",{parentName:"p"},"unless")," it is a ",(0,n.kt)("strong",{parentName:"p"},"last resort"),"."),(0,n.kt)("h2",{id:"accessbility"},"Accessbility"),(0,n.kt)("p",null,"The Pando Progress combined with semantic HTML allow the Progress to be fully accessible and screen-readable."))}u.isMDXComponent=!0}}]);