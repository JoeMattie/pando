"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[313],{70167:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(45721);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,g=d["".concat(i,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(g,l(l({ref:t},p),{},{components:n})):r.createElement(g,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},24217:function(e,t,n){const r=n(86521);t.Z=function(e){return(0,r.jsx)("svg",{"aria-label":"github logo",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",role:"img",fill:"currentColor",className:"ps-icon-svg",...e,children:(0,r.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M2 12c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12a10 10 0 0 0-20 0Z"})})}},96122:function(e,t,n){const r=n(86521);t.Z=function(e){return(0,r.jsx)("svg",{"aria-label":"NPM logo",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",role:"img",fill:"currentColor",className:"ps-icon-svg",...e,children:(0,r.jsx)("path",{d:"M12 12.444h-1.111v-2.222H12v2.222ZM22 8v6.667H12v1.11H7.556v-1.11H2V8h20ZM7.556 9.111H3.11v4.445h2.222v-3.334h1.111v3.334h1.112V9.11Zm5.555 0H8.667v5.556h2.222v-1.111h2.222V9.11Zm7.778 0h-6.667v4.445h2.222v-3.334h1.112v3.334h1.11v-3.334h1.112v3.334h1.11V9.11Z"})})}},94880:function(e,t,n){n.d(t,{Z:function(){return s}});var r=n(45721),a=n(83864),o=n(24217),l=n(96122);function s(e){var t=e.href,n=(0,a.j8)({href:t}),s=(0,a.L1)(n.iconOptions),i=t.includes("github")?o.Z:l.Z;return r.createElement("a",n.link,r.createElement(i,s),e.children)}},60047:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return g},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return d}});var r=n(60953),a=n(59005),o=(n(45721),n(70167)),l=n(94880),s=["components"],i={tags:["Development","Packages","React","React utils","usePreloadedImage","hooks"]},u="usePreloadedImage",p={unversionedId:"development/react-utils/use-preloaded-img",id:"development/react-utils/use-preloaded-img",title:"usePreloadedImage",description:"A custom hook for trapping focus within Modal and Dialog components.",source:"@site/docs/development/react-utils/use-preloaded-img.mdx",sourceDirName:"development/react-utils",slug:"/development/react-utils/use-preloaded-img",permalink:"/docs/next/development/react-utils/use-preloaded-img",draft:!1,editUrl:"https://github.com/pluralsight/tva/edit/main/website/docs/development/react-utils/use-preloaded-img.mdx",tags:[{label:"Development",permalink:"/docs/next/tags/development"},{label:"Packages",permalink:"/docs/next/tags/packages"},{label:"React",permalink:"/docs/next/tags/react"},{label:"React utils",permalink:"/docs/next/tags/react-utils"},{label:"usePreloadedImage",permalink:"/docs/next/tags/use-preloaded-image"},{label:"hooks",permalink:"/docs/next/tags/hooks"}],version:"current",lastUpdatedBy:"Brad Bice",frontMatter:{tags:["Development","Packages","React","React utils","usePreloadedImage","hooks"]},sidebar:"development",previous:{title:"useFocusTrap",permalink:"/docs/next/development/react-utils/use-focus-trap"},next:{title:"useTabs",permalink:"/docs/next/development/react-utils/use-tabs"}},c={},d=[{value:"Import",id:"import",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Best usage",id:"best-usage",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Props",id:"props",level:2},{value:"Resource",id:"resource",level:3},{value:"Types",id:"types",level:2}],m={toc:d};function g(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"usepreloadedimage"},"usePreloadedImage"),(0,o.kt)("p",null,"A custom hook for trapping focus within Modal and Dialog components."),(0,o.kt)(l.Z,{icon:"github",href:"https://github.com/pluralsight/tva/blob/main/packages/react-utils/src/hooks/usePreloadedImg.ts",mdxType:"ViewSourceLink"},"View source"),(0,o.kt)("h2",{id:"import"},"Import"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { usePreloadedImg } from '@pluralsight/react-utils'\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},'This hook requires the use of React 18 in your project. It is also recommend that you use the "concurrent mode" feature for a better overall user experience.')),(0,o.kt)("h2",{id:"basic-usage"},"Basic Usage"),(0,o.kt)("p",null,"To use ",(0,o.kt)("inlineCode",{parentName:"p"},"usePreloadedImg")," you only need to pass in ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes"},"image attributes")," which will cache (client side) and preload your images."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"const resource = usePreloadedImg({ alt: '', src: '' })\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"This hook supports the ",(0,o.kt)("inlineCode",{parentName:"p"},"srcSet")," attribute. \ud83c\udf89")),(0,o.kt)("h2",{id:"best-usage"},"Best usage"),(0,o.kt)("p",null,"For the best overall user experience, combine this hook with a custom ",(0,o.kt)("inlineCode",{parentName:"p"},"ErrorBoundary")," and the React ",(0,o.kt)("inlineCode",{parentName:"p"},"Suspense")," component for displaying a Fallback component using the Headless-styles ",(0,o.kt)("a",{parentName:"p",href:"/docs/next/development/headless-styles/Skeleton"},"Skeleton API"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Supsense } from 'react'\nimport { getSkeletonProps } from '@pluralsight/headless-styles'\nimport { usePreloadedImg } from '@pluralsight/react-utils'\n\nfunction Fallback() {\n  return (\n    <div {...getSkeletonProps()}>\n      <div style={imgMimicStyles} />\n    </div>\n  )\n}\n\nfunction Image(props) {\n  const img = props.imgData.read()\n  return (\n    <div>\n      <img {...img} />\n    </div>\n  )\n}\n\nexport default function PreloadedImg() {\n  const resource = usePreloadedImg({\n    alt: 'random image',\n    src: 'https://source.unsplash.com/random/?face&fit=facearea&facepad=2&w=256&h=256&q=80',\n  })\n\n  return (\n    <div className=\"App-container\">\n      {resource && (\n        <Suspense fallback={<Fallback />}>\n          <Image alt=\"test image\" imgData={resource.img} />\n        </Suspense>\n      )}\n      {!resource && null}\n    </div>\n  )\n}\n")),(0,o.kt)("h2",{id:"return-value"},"Return Value"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"usePreloadedImg")," hook returns an Object with the following properties"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"data"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"#resource"},(0,o.kt)("inlineCode",{parentName:"a"},"Resource"))),(0,o.kt)("td",{parentName:"tr",align:null},"A promise-based status of the preload ",(0,o.kt)("inlineCode",{parentName:"td"},"link")," state.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"img"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"#resource"},(0,o.kt)("inlineCode",{parentName:"a"},"Resource"))),(0,o.kt)("td",{parentName:"tr",align:null},"A promise-based status of the loading state and ",(0,o.kt)("strong",{parentName:"td"},"returns all the img attributes")," on resolve.")))),(0,o.kt)("h2",{id:"props"},"Props"),(0,o.kt)("h3",{id:"resource"},"Resource"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface Resource {\n  read: () => Promise<void>\n}\n")),(0,o.kt)("h2",{id:"types"},"Types"),(0,o.kt)("p",null,"This helper exports some types that are relevant to using in Typescript:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import type {\n  ImgProps,\n  PreloadedImgProps,\n} from '@pluralsight/react-utils/types'\n")))}g.isMDXComponent=!0}}]);