"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3632],{70167:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(45721);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),m=u(n),d=o,h=m["".concat(l,".").concat(d)]||m[d]||p[d]||s;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,i=new Array(s);i[0]=m;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r.mdxType="string"==typeof e?e:o,i[1]=r;for(var u=2;u<s;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},88677:function(e,t,n){n.d(t,{Z:function(){return i}});var a=n(45721),o=n(88795),s="tabItem_JKlK";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(s,i),hidden:n},t)}},58077:function(e,t,n){n.d(t,{Z:function(){return S}});var a=n(81648),o=n(45721),s=n(88795),i=n(86258),r=n(2230),l=n(49765),u=n(41927);function c(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:o}}=e;return{value:t,label:n,attributes:a,default:o}}))}function p(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,l.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function d(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,r._X)(s),(0,o.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,s=p(e),[i,r]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[l,c]=d({queryString:n,groupId:a}),[h,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,s]=(0,u.Nk)(n);return[a,(0,o.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:a}),k=(()=>{const e=l??h;return m({value:e,tabValues:s})?e:null})();(0,o.useLayoutEffect)((()=>{k&&r(k)}),[k]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);r(e),c(e),g(e)}),[c,g,s]),tabValues:s}}var g=n(55302),k=n(90757),f="tabList_Dfv0",y="tabItem_EznL";function b(e){let{className:t,block:n,selectedValue:i,selectValue:r,tabValues:l}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,g.o5)(),p=e=>{const t=e.currentTarget,n=u.indexOf(t),a=l[n].value;a!==i&&(c(t),r(a))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t)},l.map((e=>{let{value:t,label:n,attributes:r}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:p},r,{className:(0,s.Z)("tabs__item",y,r?.className,{"tabs__item--active":i===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=h(e);return o.createElement("div",{className:(0,s.Z)("tabs-container",f)},o.createElement(b,(0,a.Z)({},e,t)),o.createElement(v,(0,a.Z)({},e,t)))}function S(e){const t=(0,k.Z)();return o.createElement(w,(0,a.Z)({key:String(t)},e))}},85104:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return r},metadata:function(){return u},toc:function(){return p}});var a=n(81648),o=(n(45721),n(70167)),s=n(58077),i=n(88677);const r={sidebar_position:2,tags:["Design Tokens","Extending Themes"],title:"Customizing Themes"},l=void 0,u={unversionedId:"reference/general/themes/customizing",id:"reference/general/themes/customizing",title:"Customizing Themes",description:"Our semantic token system allows for easily customizing the themes depending on your use case.",source:"@site/docs/reference/general/themes/customizing.md",sourceDirName:"reference/general/themes",slug:"/reference/general/themes/customizing",permalink:"/docs/next/reference/general/themes/customizing",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/general/themes/customizing.md",tags:[{label:"Design Tokens",permalink:"/docs/next/tags/design-tokens"},{label:"Extending Themes",permalink:"/docs/next/tags/extending-themes"}],version:"current",lastUpdatedBy:"Tom Pietrosanti",sidebarPosition:2,frontMatter:{sidebar_position:2,tags:["Design Tokens","Extending Themes"],title:"Customizing Themes"},sidebar:"reference",previous:{title:"Token List",permalink:"/docs/next/reference/general/themes/token-list"},next:{title:"Icons",permalink:"/docs/next/reference/general/icons"}},c={},p=[{value:"Customizing with CSS",id:"customizing-with-css",level:2},{value:"Class level customizing",id:"class-level-customizing",level:3},{value:"Customizing with Javascript",id:"customizing-with-javascript",level:2},{value:"Style Objects",id:"style-objects",level:3},{value:"String Value Tokens",id:"string-value-tokens",level:3},{value:"Using Design-tokens",id:"using-design-tokens",level:2},{value:"Web",id:"web",level:3},{value:"CSS Usage",id:"css-usage",level:4},{value:"With the initial setup",id:"with-the-initial-setup",level:5},{value:"Manually importing",id:"manually-importing",level:5},{value:"SCSS",id:"scss",level:4},{value:"Javascript Tokens",id:"javascript-tokens",level:4},{value:"1. Using the tokens meta-data with initial (recommended)",id:"1-using-the-tokens-meta-data-with-initial-recommended",level:5},{value:"2. Using the tokens without the initial setup",id:"2-using-the-tokens-without-the-initial-setup",level:5},{value:"3. Using tokens with inline styles",id:"3-using-tokens-with-inline-styles",level:5},{value:"Web Meta",id:"web-meta",level:3},{value:"CSS Properties",id:"css-properties",level:4},{value:"Normalized data",id:"normalized-data",level:4},{value:"Mobile",id:"mobile",level:3},{value:"Android",id:"android",level:4},{value:"iOS / Swift",id:"ios--swift",level:4}],m={toc:p};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Our semantic token system allows for easily customizing the themes depending on your use case."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"This page assumes you are using the ",(0,o.kt)("a",{parentName:"p",href:"/docs/next/learn/get-started/installation/add-to-website"},"initial setup"),". If you would like to have access to the Pando themes without using the setup, see the ",(0,o.kt)("a",{parentName:"p",href:"#using-design-tokens"},"Using design-tokens section"),".")),(0,o.kt)("h2",{id:"customizing-with-css"},"Customizing with CSS"),(0,o.kt)("p",null,"In CSS, we set the default theme in the ",(0,o.kt)("inlineCode",{parentName:"p"},":root")," selector via our ",(0,o.kt)("a",{parentName:"p",href:"/docs/next/learn/get-started/installation/add-to-website"},"initial setup"),", so all you need to do is overwrite the tokens you want to customize in the ",(0,o.kt)("inlineCode",{parentName:"p"},":root")," CSS selector of your project."),(0,o.kt)("p",null,"For example, in your root CSS file, add this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="Updating the default/text token in your project."',title:'"Updating',the:!0,"default/text":!0,token:!0,in:!0,your:!0,'project."':!0},":root {\n  --ps-text: #fff;\n}\n")),(0,o.kt)("p",null,"To customize a specific theme in Pando (i.e. light, dark, etc.), you need to target the corresponding selectors."),(0,o.kt)("p",null,'For example, to modify the "light" theme, add this to your CSS:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="Updating the default/text token for only the light theme in your project."',title:'"Updating',the:!0,"default/text":!0,token:!0,for:!0,only:!0,light:!0,theme:!0,in:!0,your:!0,'project."':!0},"html[data-theme='light'],\n.pando-light {\n  --ps-text: #000;\n}\n")),(0,o.kt)("h3",{id:"class-level-customizing"},"Class level customizing"),(0,o.kt)("p",null,"In rare cases, you may only need to update a token value for a specific component. For this scenario, update the token within the specific class scope you need."),(0,o.kt)("p",null,"In this example, we are updating the default/text token for a component using the ",(0,o.kt)("inlineCode",{parentName:"p"},".card")," class:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="Updating the default/text token only for a component using the this class."',title:'"Updating',the:!0,"default/text":!0,token:!0,only:!0,for:!0,a:!0,component:!0,using:!0,this:!0,'class."':!0},".card {\n  --ps-text: #fff;\n  color: var(--ps-text);\n}\n")),(0,o.kt)("h2",{id:"customizing-with-javascript"},"Customizing with Javascript"),(0,o.kt)("p",null,"If you are using a CSS-in-JS styling solution, you can easily extend our themes depending on your technology choice."),(0,o.kt)("h3",{id:"style-objects"},"Style Objects"),(0,o.kt)("p",null,"If you are using a technology that utilizes Javascript Objects for styles and only need the styles from Pando components, you can use our Style Objects."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="Naming convention used for Style Objects"',title:'"Naming',convention:!0,used:!0,for:!0,Style:!0,'Objects"':!0},"import { <component>Styles } from '@pluralsight/headless-styles/styles'\n")),(0,o.kt)("p",null,"Here is an example where we are using Style Objects to ",(0,o.kt)("a",{parentName:"p",href:"https://chakra-ui.com/docs/styled-system/customize-theme#customizing-component-styles"},"extend a Chakra Button"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"showLineNumbers {3,8}",showLineNumbers:!0,"{3,8}":!0},"import { extendTheme } from '@chakra-ui/react'\nimport type { StyleFunctionProps } from '@chakra-ui/styled-system'\nimport { buttonStyles } from '@pluralsight/headless-styles/styles'\n\nconst theme = extendTheme({\n  components: {\n    Button: {\n      baseStyle: buttonStyles.pando_actionButton,\n      defaultProps: {\n        ...\n      },\n    },\n  },\n})\n\nexport default theme\n")),(0,o.kt)("admonition",{title:"Style Objects use nested properties",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"All of our component Style Objects use the nested property syntax supported by emotion and styled-components. If your tech uses any other syntax (like Chakra), you will need to add the additional styles to your theme with Object Spreading from the Style Object properties.")),(0,o.kt)("h3",{id:"string-value-tokens"},"String Value Tokens"),(0,o.kt)("p",null,"You can use a string value of the CSS token and it will automagically work! This is because browsers will map the token value from the Style Object to the CSS variable."),(0,o.kt)("p",null,"In this example, we use Emotion to update a Link to use the Pando Link token:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'showLineNumbers title="Example of using a Emotion with Pando."',showLineNumbers:!0,title:'"Example',of:!0,using:!0,a:!0,Emotion:!0,with:!0,'Pando."':!0},"import styled from '@emotion/styled'\n\nconst TextLink = styled.a({\n  color: 'var(--ps-action-navigation)',\n})\n")),(0,o.kt)("h2",{id:"using-design-tokens"},"Using Design-tokens"),(0,o.kt)("p",null,"If you would like access to all of our design tokens without using our CSS Reset, you can install the Design-tokens package, which will deliver Javascript variables for all of the tokens:"),(0,o.kt)(s.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @pluralsight/design-tokens\n"))),(0,o.kt)(i.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @pluralsight/design-tokens\n"))),(0,o.kt)(i.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add @pluralsight/design-tokens\n")))),(0,o.kt)("p",null,"The design-tokens package is the single source of truth for themes in the Pando ecosystem."),(0,o.kt)("h3",{id:"web"},"Web"),(0,o.kt)("p",null,"We ship CSS custom properties, SCSS variables, JS es6/commonJS modules, and meta-data for web projects. This way, you can choose whichever solution works best for your project."),(0,o.kt)("h4",{id:"css-usage"},"CSS Usage"),(0,o.kt)("p",null,"There are two ways to use the tokens via CSS"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"With the initial setup (recommended)"),(0,o.kt)("li",{parentName:"ol"},"Manually importing")),(0,o.kt)("h5",{id:"with-the-initial-setup"},"With the initial setup"),(0,o.kt)("p",null,"We ship all the tokens and themes in our initial setup - so there is no additional work for you to do. After you have completed the setup you will be able to reference the tokens in your CSS files."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="CSS usage example" showLineNumbers',title:'"CSS',usage:!0,'example"':!0,showLineNumbers:!0},"button {\n  background-color: var(--ps-action-background);\n  color: var(--ps-action-text);\n}\n\nbutton:hover {\n  background-color: var(--ps-action-background-hover);\n}\n")),(0,o.kt)("h5",{id:"manually-importing"},"Manually importing"),(0,o.kt)("p",null,"If you would prefer to opt-out of our initial setup, you can import the tokens in your root CSS file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="CSS manual import example (opt-out of initial setup)"',title:'"CSS',manual:!0,import:!0,example:!0,"(opt-out":!0,of:!0,initial:!0,'setup)"':!0},"@import url('@pluralsight/design-tokens/npm/css/variables.css');\n@import url('@pluralsight/design-tokens/npm/themes/light.css');\n")),(0,o.kt)("h4",{id:"scss"},"SCSS"),(0,o.kt)("p",null,"If you use SCSS in your project, you can import our SCSS variables."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scss",metastring:'title="Importing tokens into your SCSS"',title:'"Importing',tokens:!0,into:!0,your:!0,'SCSS"':!0},"@use '@pluralsight/design-tokens/npm/scss/_dark-variables.scss';\n@use '@pluralsight/design-tokens/npm/scss/_light-variables.scss';\n")),(0,o.kt)("p",null,"Then, use them as normal."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scss",metastring:'title="SCSS usage example" showLineNumbers',title:'"SCSS',usage:!0,'example"':!0,showLineNumbers:!0},"button {\n  background-color: $ps-action-background;\n  color: $ps-action-text;\n}\n")),(0,o.kt)("h4",{id:"javascript-tokens"},"Javascript Tokens"),(0,o.kt)("p",null,"There are a few ways you can utilize the Javascript tokens:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Using the ",(0,o.kt)("a",{parentName:"li",href:"#css-properties"},"tokens meta-data")," combined with the initial setup (recommended)"),(0,o.kt)("li",{parentName:"ol"},"Using the tokens without the initial setup"),(0,o.kt)("li",{parentName:"ol"},"Using the tokens with inline styles")),(0,o.kt)("h5",{id:"1-using-the-tokens-meta-data-with-initial-recommended"},"1. Using the tokens meta-data with initial (recommended)"),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"#css-properties"},"CSS Properties section"),"."),(0,o.kt)("h5",{id:"2-using-the-tokens-without-the-initial-setup"},"2. Using the tokens without the initial setup"),(0,o.kt)("p",null,"If you choose to opt-out of using the initial setup, you will only have ",(0,o.kt)("strong",{parentName:"p"},"static tokens")," available for use."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="Example use without the initial setup" showLineNumbers',title:'"Example',use:!0,without:!0,the:!0,initial:!0,'setup"':!0,showLineNumbers:!0},"// theme.js\nimport { psBackground } from '@pluralsight/design-tokens'\nimport { psBackgroundLight } from '@pluralsight/design-tokens/light'\n\nconst darkTheme = {\n  background: psBackground\n}\n\nconst lightTheme = {\n  background: psBackgroundLight\n}\n\n// Some component\nconst styles = css((theme) => {\n  backgroundColor: theme.background,\n})\n")),(0,o.kt)("h5",{id:"3-using-tokens-with-inline-styles"},"3. Using tokens with inline styles"),(0,o.kt)("p",null,"You can also use the static JS tokens inline as well."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Example using inline styles"',title:'"Example',using:!0,inline:!0,'styles"':!0},"<button\n  style={{\n    backgroundColor: psActionBackground,\n  }}\n/>\n")),(0,o.kt)("h3",{id:"web-meta"},"Web Meta"),(0,o.kt)("p",null,"Sometimes you need something more than just a token. We provide two meta-data files for these use cases."),(0,o.kt)("h4",{id:"css-properties"},"CSS Properties"),(0,o.kt)("p",null,"If you are looking for a seamless JS integration with the Normalize setup or single-source-of-truth, we provide a module that exports JS tokens that have the CSS token names for the values."),(0,o.kt)("p",null,'When you combine this with CSS definitions, it "just works".'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="Example of what CSSProperties exports" showLineNumbers',title:'"Example',of:!0,what:!0,CSSProperties:!0,'exports"':!0,showLineNumbers:!0},"export const psBackground = 'var(--ps-background)'\n")),(0,o.kt)("p",null,"This is much more performant if you are using a solution that creates CSS files from your JS defintions (i.e. ",(0,o.kt)("a",{parentName:"p",href:"https://styled-components.com/"},"styled-components"),")."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="Usage example" showLineNumbers',title:'"Usage','example"':!0,showLineNumbers:!0},"import styled from 'styled-components'\nimport { psBackground } from '@pluralsight/design-tokens/meta/cssProperties'\n\nconst Button = styled(Button)`\n  background-color: ${psBackground};\n`\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"If you combine this with the ",(0,o.kt)("a",{parentName:"p",href:"/docs/next/learn/get-started/installation/add-to-website"},"initial setup"),", theming will be instantly avialable in your CSS-in-JS styles!")),(0,o.kt)("h4",{id:"normalized-data"},"Normalized data"),(0,o.kt)("p",null,"If you need some raw normalized data, we also have you covered in our normalize.json file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Example of normalized data" showLineNumbers',title:'"Example',of:!0,normalized:!0,'data"':!0,showLineNumbers:!0},'{\n  "groupItems": ["default", "action", "danger", "info", "success", "warning"],\n  "groups": {\n    "action": {\n      "psActionBackground": {\n        "id": "psActionBackground",\n        "cssName": "--ps-action-background",\n        "sassName": "$ps-action-background",\n        "jsName": "psActionBackground",\n        "value": "#4A33D1"\n      }\n    },\n    ...\n  }\n}\n')),(0,o.kt)("p",null,"To use, import it into your project via a bundler that supports JSON:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import tokenData from '@pluralsight/design-tokens/meta/normalize.json'\n")),(0,o.kt)("h3",{id:"mobile"},"Mobile"),(0,o.kt)("p",null,"We offer both android and iOS solutions for mobile platforms. All mobile tokens can be found in our Github repo ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/pluralsight/pando/tree/main/packages/design-tokens/build-mobile"},"mobile tokens location"),"."),(0,o.kt)("h4",{id:"android"},"Android"),(0,o.kt)("p",null,"For Android, we ship the tokens as ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/pluralsight/pando/tree/main/packages/design-tokens/build-mobile/compose"},"Compose colors"),"."),(0,o.kt)("h4",{id:"ios--swift"},"iOS / Swift"),(0,o.kt)("p",null,"We support iOS platforms via an ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/pluralsight/pando/tree/main/packages/design-tokens/build-mobile/iOS/Assets.xcassets"},"Asset Catalog"),"."))}d.isMDXComponent=!0}}]);