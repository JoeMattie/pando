"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6636],{72032:function(n,t,e){e.d(t,{Z:function(){return u}});var o=e(81648),a=e(45721),i=e(71397),r=e(61471),s="grid_cC7H";function l(n){return a.createElement("li",(0,i.a)({colSpan:2}),a.createElement(r.Z,n,n.children))}function u(n){const{figma:t,github:e}=n,{className:r,...u}=(0,i.g)({cols:12,gap:8});return a.createElement("ul",(0,o.Z)({className:`${r} ${s}`},u),e&&a.createElement(l,{href:e},"View on Github"),t&&a.createElement(l,{href:t},"Figma Design"))}},27505:function(n,t,e){e(45721)},61471:function(n,t,e){e.d(t,{Z:function(){return l}});var o=e(45721),a=e(64965),i=e(4094),r=e(31026),s=e(6115);function l(n){const{href:t}=n,e=(0,a.g)({href:t}),l=(0,i.g)(e.iconOptions),u=t.includes("github")?r.Z:s.Z;return o.createElement("a",e.link,o.createElement(u,l),n.children)}},83404:function(n,t,e){e.r(t),e.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return r},metadata:function(){return l},toc:function(){return c}});var o=e(81648),a=(e(45721),e(70167)),i=e(72032);e(27505);const r={tags:[],title:"Icon Button"},s=void 0,l={unversionedId:"reference/components/icon-button",id:"reference/components/icon-button",title:"Icon Button",description:"Used to perform an action, such as submitting a form, opening/closing a",source:"@site/docs/reference/components/icon-button.mdx",sourceDirName:"reference/components",slug:"/reference/components/icon-button",permalink:"/docs/next/reference/components/icon-button",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/components/icon-button.mdx",tags:[],version:"current",lastUpdatedBy:"Tom Pietrosanti",frontMatter:{tags:[],title:"Icon Button"},sidebar:"reference",previous:{title:"Grid",permalink:"/docs/next/reference/components/grid"},next:{title:"Icon",permalink:"/docs/next/reference/components/icon"}},u={},c=[{value:"Anatomy",id:"anatomy",level:2},{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Buttons",id:"basic-buttons",level:3},{value:"Round Buttons",id:"round-buttons",level:3},{value:"Text Buttons",id:"text-buttons",level:3},{value:"Sizes",id:"sizes",level:3},{value:"Size Mapping",id:"size-mapping",level:4},{value:"Reference",id:"reference",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Behavior",id:"behavior",level:2},{value:"Patterns",id:"patterns",level:3},{value:"Sentiment",id:"sentiment",level:3},{value:"Usage",id:"usage-1",level:3},{value:"Sizing",id:"sizing",level:3},{value:"Accessbility",id:"accessbility",level:2}],p={toc:c};function d(n){let{components:t,...e}=n;return(0,a.kt)("wrapper",(0,o.Z)({},p,e,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",{className:"size-xxl"},"Used to perform an action, such as submitting a form, opening/closing a dialog, or using a cancel action."),(0,a.kt)(i.Z,{github:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/IconButton",figma:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsLinkBar"}),(0,a.kt)("h2",{id:"anatomy"},"Anatomy"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Button"),(0,a.kt)("li",{parentName:"ol"},"Icon")),(0,a.kt)("h2",{id:"import"},"Import"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import { getIconButtonProps } from '@pluralsight/headless-styles'\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import type { IconButtonOptions } from '@pluralsight/headless-styles/types'\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("h3",{id:"basic-buttons"},"Basic Buttons"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function BasicIconButtons() {\n  const gridItem = getGridItemProps({ colSpan: 1 })\n  const actionBtn = getIconButtonProps({\n    ariaLabel: 'action icon button example',\n  })\n  const defaultBtn = getIconButtonProps({\n    ariaLabel: 'default icon button example',\n    sentiment: 'default',\n  })\n  const dangerBtn = getIconButtonProps({\n    ariaLabel: 'danger icon button example',\n    sentiment: 'danger',\n  })\n  const disabledBtn = getIconButtonProps({\n    ariaLabel: 'disabled icon button example',\n    disabled: true,\n  })\n\n  return (\n    <div {...getGridProps({ cols: 12, gap: 8 })}>\n      <div {...gridItem}>\n        <button {...actionBtn.button}>\n          <PlaceholderIcon {...getIconProps(actionBtn.iconOptions)} />\n        </button>\n      </div>\n\n      <div {...gridItem}>\n        <button {...defaultBtn.button}>\n          <PlaceholderIcon {...getIconProps(defaultBtn.iconOptions)} />\n        </button>\n      </div>\n\n      <div {...gridItem}>\n        <button {...dangerBtn.button}>\n          <PlaceholderIcon {...getIconProps(dangerBtn.iconOptions)} />\n        </button>\n      </div>\n\n      <div {...gridItem}>\n        <button {...disabledBtn.button}>\n          <PlaceholderIcon {...getIconProps(disabledBtn.iconOptions)} />\n        </button>\n      </div>\n    </div>\n  )\n}\n")),(0,a.kt)("h3",{id:"round-buttons"},"Round Buttons"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function RoundIconButtons() {\n  const gridItem = getGridItemProps({ colSpan: 1 })\n  const actionBtn = getIconButtonProps({\n    ariaLabel: 'action round icon button example',\n    sentiment: 'action',\n    usage: 'round',\n  })\n  const defaultBtn = getIconButtonProps({\n    ariaLabel: 'default round icon button example',\n    sentiment: 'default',\n    usage: 'round',\n  })\n  const dangerBtn = getIconButtonProps({\n    ariaLabel: 'danger round icon button example',\n    sentiment: 'danger',\n    usage: 'round',\n  })\n\n  return (\n    <div {...getGridProps({ cols: 12, gap: 8 })}>\n      <div {...gridItem}>\n        <button {...actionBtn.button}>\n          <PlaceholderIcon {...getIconProps(actionBtn.iconOptions)} />\n        </button>\n      </div>\n\n      <div {...gridItem}>\n        <button {...defaultBtn.button}>\n          <PlaceholderIcon {...getIconProps(defaultBtn.iconOptions)} />\n        </button>\n      </div>\n\n      <div {...gridItem}>\n        <button {...dangerBtn.button}>\n          <PlaceholderIcon {...getIconProps(dangerBtn.iconOptions)} />\n        </button>\n      </div>\n    </div>\n  )\n}\n")),(0,a.kt)("h3",{id:"text-buttons"},"Text Buttons"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function TextIconButtons() {\n  const gridItem = getGridItemProps({ colSpan: 1 })\n  const actionBtn = getIconButtonProps({\n    ariaLabel: 'action text icon button example',\n    sentiment: 'action',\n    usage: 'text',\n  })\n  const defaultBtn = getIconButtonProps({\n    ariaLabel: 'default text icon button example',\n    sentiment: 'default',\n    usage: 'text',\n  })\n  const dangerBtn = getIconButtonProps({\n    ariaLabel: 'danger text icon button example',\n    sentiment: 'danger',\n    usage: 'text',\n  })\n\n  return (\n    <div {...getGridProps({ cols: 12, gap: 8 })}>\n      <div {...gridItem}>\n        <button {...actionBtn.button}>\n          <PlaceholderIcon {...getIconProps(actionBtn.iconOptions)} />\n        </button>\n      </div>\n\n      <div {...gridItem}>\n        <button {...defaultBtn.button}>\n          <PlaceholderIcon {...getIconProps(defaultBtn.iconOptions)} />\n        </button>\n      </div>\n\n      <div {...gridItem}>\n        <button {...dangerBtn.button}>\n          <PlaceholderIcon {...getIconProps(dangerBtn.iconOptions)} />\n        </button>\n      </div>\n    </div>\n  )\n}\n")),(0,a.kt)("h3",{id:"sizes"},"Sizes"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function BasicButtons() {\n  const gridItem = getGridItemProps({ colSpan: 1 })\n  const mediumBtn = getIconButtonProps({\n    ariaLabel: 'medium icon button example',\n    size: 'm',\n  })\n  const largeBtn = getIconButtonProps({\n    ariaLabel: 'large icon button example',\n    size: 'l',\n  })\n\n  return (\n    <div\n      data-site-override=\"alignGridCenter\"\n      {...getGridProps({ cols: 12, gap: 8 })}\n    >\n      <div {...gridItem}>\n        <button {...mediumBtn.button}>\n          <PlaceholderIcon {...getIconProps(mediumBtn.iconOptions)} />\n        </button>\n      </div>\n\n      <div {...gridItem}>\n        <button {...largeBtn.button}>\n          <PlaceholderIcon {...getIconProps(largeBtn.iconOptions)} />\n        </button>\n      </div>\n    </div>\n  )\n}\n")),(0,a.kt)("h4",{id:"size-mapping"},"Size Mapping"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Icon Button size rules."',title:'"Icon',Button:!0,size:!0,'rules."':!0},"{\n  m: 'Use in condensed areas where the default size is too large.',\n  l: 'Should be used in most, if not all cases.'\n}\n")),(0,a.kt)("h2",{id:"reference"},"Reference"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getIconButtonProps(options?: IconButtonOptions)\n")),(0,a.kt)("h3",{id:"parameters"},"Parameters"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"interface IconButtonOptions {\n  ariaLabel: string\n  classNames?: string[]\n  disabled?: boolean\n  sentiment?: 'default' | 'action' | 'danger'\n  usage?: 'square' | 'round' | 'text'\n  size?: 'm' | 'l'\n}\n")),(0,a.kt)("h3",{id:"returns"},"Returns"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"An Object matching the ",(0,a.kt)("a",{parentName:"li",href:"#anatomy"},"Anatomy")," containing ",(0,a.kt)("inlineCode",{parentName:"li"},"className")," and a11y properties relevant to each element/section including an unused class consisting of the naming pattern ",(0,a.kt)("inlineCode",{parentName:"li"},"pando-icon-btn"),"."),(0,a.kt)("li",{parentName:"ol"},"An ",(0,a.kt)("inlineCode",{parentName:"li"},"iconOptions")," Object to use as the parameters for the Icon API.")),(0,a.kt)("h2",{id:"behavior"},"Behavior"),(0,a.kt)("h3",{id:"patterns"},"Patterns"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Do")," use the Button for an actionable event needed from the user."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Don't")," use the Button for navigation or styled links. Instead use the TextLink component."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Do")," keep Button usage minimal within an area."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Don't")," use more than three Buttons in a single area."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Do")," space Buttons apart by 16px (1rem)."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Don't")," space Buttons apart greater or less than 16px (1rem)."),(0,a.kt)("h3",{id:"sentiment"},"Sentiment"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Do"),' use the "action" sentiment for all use cases where possible.'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Don't"),' use the "default" sentiment ',(0,a.kt)("em",{parentName:"p"},"unless")," it is a ",(0,a.kt)("strong",{parentName:"p"},"last resort"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Do"),' use the "danger" sentiment for cancel or destructive actions.'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Don't"),' use the "default" sentiment for cancel or destructive actions.'),(0,a.kt)("h3",{id:"usage-1"},"Usage"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Do"),' use the "outline" usage for a ',(0,a.kt)("strong",{parentName:"p"},"lower priority alternative"),' use case to the "default" sentiment.'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Don't"),' use the "outline" usage for cancel or destructive actions.'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Do"),' use the "text" usage for the ',(0,a.kt)("strong",{parentName:"p"},"lowest")," priority action."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Don't"),' use the "text" usage as a high-priority action.'),(0,a.kt)("h3",{id:"sizing"},"Sizing"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Do")," use the default size for all use cases where possible of the Button."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Don't"),' use the "m" size ',(0,a.kt)("em",{parentName:"p"},"unless")," it is a ",(0,a.kt)("strong",{parentName:"p"},"last resort"),"."),(0,a.kt)("h2",{id:"accessbility"},"Accessbility"),(0,a.kt)("p",null,"The Pando Icon Button, and Icon APIs combined with semantic HTML allow the Icon Button to be fully accessible and screen-readable."))}d.isMDXComponent=!0},71397:function(n,t,e){e.d(t,{a:function(){return c},g:function(){return u}});var o=e(1801),a=e(23909),i=e(31519);const r="gridCSS-module_gridContainer__sQmao",s="gridCSS-module_gridItem__nVMyV";(0,i.s)(".gridCSS-module_gridContainer__sQmao{display:grid;width:100%}.gridCSS-module_gridItem__nVMyV{min-width:0}");const l="pando-grid";function u(n){const t=(0,a.g)(n);return{...(0,a.c)(t),...(0,o.c)(l,r,...t.classNames)}}function c(n){const t=(0,a.a)(n);return{...(0,a.b)(t),...(0,o.c)(`${l}-item`,s,...t.classNames)}}},23909:function(n,t,e){e.d(t,{a:function(){return i},b:function(){return s},c:function(){return r},g:function(){return a}});const o={6:.375,8:.5,12:.75,16:1,32:2};function a(n){return{classNames:(null==n?void 0:n.classNames)??[],cols:(null==n?void 0:n.cols)??12,gap:(null==n?void 0:n.gap)??16,rows:(null==n?void 0:n.rows)??1}}function i(n){return{classNames:(null==n?void 0:n.classNames)??[],colSpan:(null==n?void 0:n.colSpan)??12,rowSpan:(null==n?void 0:n.rowSpan)??null}}function r(n){return{style:{gridTemplateRows:`repeat(${n.rows}, 1fr)`,gridTemplateColumns:`repeat(${n.cols}, 1fr)`,gap:`${o[n.gap]}rem`}}}function s(n){const{colSpan:t,rowSpan:e}=n;return e?{style:{gridArea:`span ${e} / span ${t} / span ${e} / span ${t}`}}:{style:{gridColumn:`span ${t} / span ${t}`}}}}}]);